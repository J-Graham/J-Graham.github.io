%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 16.0.0
%%For: (gdainti) ()
%%Title: (monobl_unit-test.eps)
%%CreationDate: 3/7/2016 3:22 AM
%%Canvassize: 16383
%%BoundingBox: 30 -472 589 -23
%%HiResBoundingBox: 30.8193 -471.999 588.0684 -23.6436
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%CMYKProcessColor: 1 1 1 1 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 306.5 -246.5 306.5 -246.5
%AI3_TileBox: -100.6797 -529.4805 712.6807 37.3994
%AI3_DocumentPreview: Header
%AI5_ArtSize: 612 492.0811
%AI5_RulerUnits: 6
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -1171.3354 475.3735 0.6667 1862 914 26 1 0 9 117 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:0 -702
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 0
%AI12_CMSettings: 00.MS
%AI7_Thumbnail: 128 104 8
%%BeginData: 24420 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FFFFA8FD79527DA8FFFFFFA82E5227525252275252522752525227
%525252275252522752525227525252275252522752525227525252275252
%522752525227525252275252522752525227525252275252522752525227
%525252275252522752525227525252275252522752525227525252275252
%522752525227525252275252522752525227527DFFA8FD7E52A852522752
%275227522752275227522752275227522752275227522752275227522752
%275227522752275227522752275227522752275227522752275227522752
%275227522752275227522752275227522752275227522752275227522752
%275227522752275227522752275227522752275227522752275227522752
%5252277DFD045253537D5377527D5377527D5377527D5377527D5377527D
%5377527D5377527D5377527D5377527D5377527D5377527D5377527D5377
%527D5377527D5377527D5377527D5377527D5377527D5377527D5377527D
%5377527D5377527D5377527D5377527D5377527D5377527D5377527D5377
%527D5377527DFD075227525378537E5378537E5378537E5378537E537853
%7E5378537E5378537E5378537E5378537E5378537E5378537E5378537E53
%78537E5378537E5378537E5378537E5378537E5378537E5378537E537853
%7E5378537E5378537E5378537E5378537E5378537E5378537E5378537E53
%78537E5378537E53785377525227FD05527D777E537E777E537E777E537E
%777E537E777E537E777E537E777E537E777E537E777E537E777E537E777E
%537E777E537E777E537E777E537E777E537E777E537E777E537E777E537E
%777E537E777E537E777E537E777E537E777E537E777E537E777E537E777E
%537E777E537E777E537E777E537E777E53FD045227FD0452785378537853
%785378537753785377537853775378537753785377537853775378537753
%785377537853775378537753785377537853775378537753785377537853
%775378537753785377537853775378537753785377537853775378537753
%785377537853775378537753785378537853785378535327FD07527D777E
%777E777E777E777E7EA97EA87EA97EA87EA87EA87EA87EA87EA87EA87EA8
%7EA87EA87EA87EA87EA87EA87EA87EA87EA87EA87EA87EA87EA87EA87EA8
%7EA87EA87EA87EA87EA87EA87EA87EA87EA87EA87EA87EA87EA87EA87EA8
%7EA87EA87EA87EA87EA87EA87EA87EA97E7E537E777E777E777E53FD0452
%27FD04527E5378537E5378537EA8FFA7FFAECFA8FFA8AEA8FFAEFFA8FFAE
%FFA8FFAEFFA8FFAEFFA8FFAEFFA8FFAEFFA8FFAEFFA8FFAEFFA8FFAEFFA8
%FFAEFFA8FFAEFFA8FFAEFFA8FFAEFFA8FFAEFFA8FFAEFFA8FFAEFFA8FFAE
%FFA8FFAEFFA8FFAEFFA8FFAEFFA8FFAEFFA8FFAEFFAEFF7778537E537853
%7E535327FD075277537E777E537E777877FFA1B69ACFC6C8A85E5DFFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA87E777E
%537E777E537E53FD065227525378537853785378537EA8CA9AC3A8C8A7AF
%5883A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FF53785378537853785377275227FD05527D777E777E777E777E77FFAF
%FFA8FFA8FFA8FFA9FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA87E777E777E777E777E53FD065227525378537E537853
%7E5353272827272728272727282727272827272728272727282727272827
%272728272727282727272827272728272727282727272827272728272727
%282727272827272728272727282727272827272728272727282727272827
%27272827272728272727282727537E5378537E53785377525227FD05527D
%777E537E777E537E53270027002700270027002700270027002700270027
%002700270027002700270027002700270027002700270027002700270027
%002700270027002700270027002700270027002700270027002700270027
%0027002700270027002700270027002700270077537E777E537E777E53FD
%045227FD0452785378537853785353002700270027002700270027002700
%270027002700270027002700270027002700270027002700270027002700
%270027002700270027002700270027002700270027002700270027002700
%270027002700270027002700270027002700270027002700275378537853
%785378535327FD07527D777E777E777E777E532700270527052705270527
%052705270527052705270527052705270527052705270527052705270527
%052705270527052705270527052705270527052705270527052705270527
%052705270527052705270527052705270527052705270527052705272777
%777E777E777E777E53FD045227FD04527E5378537E537853770027002700
%270027002700270027002700270027002700270027002700270027002700
%270027002700270027002700270027002700270027002700270027002700
%270027002700270027002700270027002700270027002700270027002700
%27002700275378537E5378537E535327FD075277537E777E537E777E5327
%052700270527002705270027052700270527002705270027052700270527
%002705270027052700270527002705270027052700270527002705270027
%052700270527002705270027052700270527002705270027052700270527
%00270527002705270077777E537E777E537E53FD06522752537853785378
%537853530027002700270027002700270027002700270027002700270027
%002700270027002700270027002700270027002700270027002700270027
%002700270027002700270027002700270027002700270027002700270027
%002700270027002700270027002753785378537853785377275227FD0552
%7D777E777E777E777E532805270527052705270527052705270527052705
%270527052705270527052700270527052705270027052700270527052705
%270027052705270527002705270027052700270527002705270527052705
%270527052705270527052705270527052705270577787E777E777E777E53
%FD065227525378537E5378537E5353002700270027002700270027002700
%2700270027002700270027000528A87D530027000527A87D53002752A87D
%A827050027277E7D7D000552A87D5200FD047D7E7D7D7D7E7D5200270027
%002700270027002700270027002700270027002700270027537E5378537E
%53785377525227FD05527D777E537E777E537E5327002705270027052700
%2705270027052700270527002705270027007DFFFF7E2700270052FFFF7E
%27007DFFFFFFA800270052FFFF7D27007DFFFF5227FD0AFF7D2700270527
%002705270027052700270527002705270027052700270577537E777E537E
%777E53FD045227FD04527853785378537853530027002700270027002700
%270027002700270027002700270027000552FFFF7E0027000528FFFF7E00
%0052FD04FF52F80527FFFF7DF80553FFFF5300A8A2A8A8FFFFFFA2A8A853
%002700270027002700270027002700270027002700270027002700275378
%537853785378535327FD07527D777E777E777E777E532700270527052705
%27052705270527052705270527052705270527007DFFFF7D2700270052FF
%FF7D27007DFD04FFA8270052FFFF7D27007DFFFF522705280052FFFFFF28
%002827270527052705270527052705270527052705270527052705270527
%2777777E777E777E777E53FD045227FD04527E5378537E53785377002700
%2700270027002700270027002700270027002700270027000552FFFF7E00
%27000552FFFF7E000553FFA8A8FFFF520027FFFF7D000553FFFF53002700
%0527FFFFFF00050027002700270027002700270027002700270027002700
%270027002700275378537E5378537E535327FD075277537E777E537E777E
%53270527002705270027052700270527002705270027052700270527007D
%FFFF7D2705270052FFFF7D27007DFFFF52FFFFFF2728FFFF7D27007DFFFF
%522705270052FFFFA8280527002705270027052700270527002705270027
%052700270527002705270077777E537E777E537E53FD0652275253785378
%537853785353002700270027002700270027002700270027002700270027
%0027000052FFFF7D0027000028FFFF7DF80553FFFF2853FFFF7D05FFFF7E
%000052FFFF53F827000527FFFFFF00270027002700270027002700270027
%0027002700270027002700270027002753785378537853785377275227FD
%05527D777E777E777E777E53280527052705270527052705270527052705
%270527052705270527007DFFFF7D2705270053FFFF7D27007DFFFF2728FF
%FFFF52A8FF7D27007DFFFF522705270052FFFFA928052705270527052705
%2705270527052705270527052705270527052705270577787E777E777E77
%7E53FD065227525378537E5378537E535300270027002700270027002700
%27002700270027002700270027000052FFFF7D0027000028FFFF7E000553
%FFFF52F87DFFFF7DA8FF7E000553FFFF53F827000527FFFFFF0027002700
%270027002700270027002700270027002700270027002700270027537E53
%78537E53785377525227FD05527D777E537E777E537E5327002705270027
%05270027052700270527002705270027052700270052FFFFA8270027007D
%FFFF7D27007DFFFF272727FD05FF7D27007DFFFF520500270052FFFFFF27
%002705270027052700270527002705270027052700270527002705270027
%0577537E777E537E777E53FD045227FD0452785378537853785353002700
%2700270027002700270027002700270027002700270027000527FFFFFF27
%00F827A8FFFF53F80552FFFF28F80552FD04FF7DF80553FFFF53F8270005
%27FFFFFF0005002700270027002700270027002700270027002700270027
%0027002700275378537853785378535327FD07527D777E777E777E777E53
%2700270527052705270527052705270527052705270527052705270527A8
%FFFFFF5253A8FFFFFF2727007DFFFF28270527A8FFFFFF7D27007DFFFF52
%2705270052FFFFFF27002705270527052705270527052705270527052705
%2705270527052705272777777E777E777E777E53FD045227FD04527E5378
%537E53785377002700270027002700270027002700270027002700270027
%002700270028FD08FF2805000553FFFF52F8270052FFFFFF7E000577FFFF
%770027002727FFFFFF050500270027002700270027002700270027002700
%27002700270027002700275378537E5378537E535327FD075277537E777E
%537E777E5327052700270527002705270027052700270527002705270027
%0527002700527DFD04FFA828270027007DFFFF2827002705A8FFFF7D2700
%7DFFFF522705270052FFFFA8280527002705270027052700270527002705
%270027052700270527002705270077777E537E777E537E53FD0652275253
%785378537853785353002700270027002700270027002700270027002700
%2700270027002700270005002E2727000500270027002700270027002700
%270027002700270027002700270027002700270027002700270027002700
%270027002700270027002700270027002700275378537853785378537727
%5227FD05527D777E777E777E777E53280527052705270527052705270527
%052705270527052705270527052705270027002700270527052705270027
%052705270527002705270527052700270527052705270027052705270527
%0527052705270527052705270527052705270527052705270577787E777E
%777E777E53FD065227525378537E5378537E535300270027002700270027
%002700270027002700270027002700270027002700270027002700270027
%002700270027002700270027002700270027002700270027002700270027
%002700270027002700270027002700270027002700270027002700270027
%537E5378537E53785377525227FD05527D777E537E777E537E5327002705
%270027052700270527002705270027052700270527002705270027002700
%270027002700270027002700270027002700270027002700270027002700
%270027052700270027002705270027052700270527002705270027052700
%27052700270577537E777E537E777E53FD045227FD045278537853785378
%5353002700270027002700270027002700270027002700270027002700FD
%04272827270028FD04270005005227270028272727282727272800272727
%002700280027F827272E2727002700270027002700270027002700270027
%002700270027002700275378537853785378535327FD07527D777E777E77
%7E777E532700270527052705270527052705270527052705270527052705
%2753FD05FFA853FD04FFA22752FFFFFFA852FD06FF27FFFF2753FFA82800
%7DFF2800287DFD04FF280027052705270527052705270527052705270527
%0527052705272777777E777E777E777E53FD045227FD04527E5378537E53
%785377002700270027002700270027002700270027002700270027002700
%52527DFFA8525228FF7E52525227FFFF525252055352FFFF7D5227A8FF00
%7DFFFF520053FF2727A8FF7D52527D002700270027002700270027002700
%270027002700270027002700275378537E5378537E535327FD075277537E
%777E537E777E532705270027052700270527002705270027052700270527
%00270527000527FF53050052FF7D00270028FFFF270500270027FFFF0005
%27FFFF277DFFA8FF277DFF2852FF7D270005002705270027052700270527
%002705270027052700270527002705270077777E537E777E537E53FD0652
%275253785378537853785353002700270027002700270027002700270027
%00270027002700270027F852FF7DF80528FD04FF7DF87DFFFF7D28000500
%FFA827F827A8FF007DFF53FF7D52FF057DFF52F8537DA827050027002700
%270027002700270027002700270027002700270027537853785378537853
%77275227FD05527D777E777E777E777E5328052705270527052705270527
%0527052705270527052705270527052728FF7D270052FFA97D7E52270552
%A8FFFF280028FFFF272727FFFF277DFF27A8FFA8FF287DFF280553FFFF7D
%00270527052705270527052705270527052705270527052705270577787E
%777E777E777E53FD065227525378537E5378537E53530027002700270027
%0027002700270027002700270027002700270027F852FF7DF80552FF5200
%F8000027F8007DFF520000FFFF270027FFFF007DFF2827FFFFFF0053FF7E
%000028FF5205002700270027002700270027002700270027002700270027
%0027537E5378537E53785377525227FD05527D777E537E777E537E532700
%27052700270527002705270027052700270527002705270027052727FF7D
%270053FFA9537D5228A87D52FFFF520027FFFF272705FFFF2777FF28057D
%FFFF2805FFFFA852A8FF7D00270527002705270027052700270527002705
%270027052700270577537E777E537E777E53FD045227FD04527853785378
%537853530027002700270027002700270027002700270027002700270027
%00270028FF7D000028FD04FFA827A8FFFFA852F82700A9A8270027A8FF00
%7DFF52F827A8FF2700277DFFFFFFA9280000270027002700270027002700
%270027002700270027002700275378537853785378535327FD07527D777E
%777E777E777E532700270527052705270527052705270527052705270527
%052705270527052827270028272727282727052E27270027052727280527
%052827270528272700282727052705282728272705270527052705270527
%052705270527052705270527052705272777777E777E777E777E53FD0452
%27FD04527E5378537E537853770027002700270027002700270027002700
%270027002700270027002700270027002700270005002700270027002700
%270005002700270027002700270027002700270027000500270027002700
%27002700270027002700270027002700270027002700275378537E537853
%7E535327FD075277537E777E537E777E5327052700270527002705270027
%052700270527002705270027052700270527002705270027052700270527
%002705270027052700270527002705270027052700270527002705270027
%05270027052700270527002705270027052700270527002705270077777E
%537E777E537E53FD06522752537853785378537853530027002700270027
%002700270027002700270027002700270027002700270027002700270027
%002700270027002700270027002700270027002700270027002700270027
%002700270027002700270027002700270027002700270027002700270027
%002753785378537853785377275227FD05527D777E777E777E777E532805
%270527052705270527052705270527052705270527052705270527052705
%270527052705270527052705270527052705270527052705270527052705
%270527052705270527052705270527052705270527052705270527052705
%270527052705270577787E777E777E777E53FD065227525378537E537853
%7E5353002700270027002700270027002700270027002700270027002700
%270027002700270027002700270027002700270027002700270027002700
%270027002700270027002700270027002700270027002700270027002700
%27002700270027002700270027537E5378537E53785377525227FD05527D
%777E537E777E537E53270027052700270527002705270027052700270527
%002705270027052700270527002705270027052700270527002705270027
%052700270527002705270027052700270527002705270027052700270527
%0027052700270527002705270027052700270577537E777E537E777E53FD
%045227FD0452785378537853785353002700270027002700270027002700
%270027002700270027002700270027002700270027002700270027002700
%270027002700270027002700270027002700270027002700270027002700
%270027002700270027002700270027002700270027002700275378537853
%785378535327FD07527D777E777E777E777E532700270527052705270527
%052705270527052705270527052705270527052705270527052705270527
%052705270527052705270527052705270527052705270527052705270527
%052705270527052705270527052705270527052705270527052705272777
%777E777E777E777E53FD045227FD04527E5378537E537853770027002700
%270027002700270027002700270027002700270027002700270027002700
%270027002700270027002700270027002700270027002700270027002700
%270027002700270027002700270027002700270027002700270027002700
%27002700275378537E5378537E535327FD075277537E777E537E777E5327
%052700270527002705270027052700270527002705270027052700270527
%002705270027052700270527002705270027052700270527002705270027
%052700270527002705270027052700270527002705270027052700270527
%00270527002705270077777E537E777E537E53FD06522752537853785378
%53785353F8270005F8270005F8270005F8270005F8270005F8270005F827
%0005F8270005F8270005F8270005F8270005F8270005F8270005F8270005
%F8270005F8270005F8270005F8270005F8270005F8270005F8270005F827
%0005F8270005F8270005F82700054D785378537853785377275227FD0552
%7D777E777E777E777E535227282752282827522828275228282752282827
%522828275228282752282827522828275228282752282827522828275228
%282752282827522828275228282752282827522828275228282752282827
%52282827522828275228282752282827522828287E787E777E777E777E53
%FD065227525378537E5378537E5378537E5378537E5378537E5378537E53
%78537E5378537E5378537E5378537E5378537E5378537E5378537E537853
%7E5378537E5378537E5378537E5378537E5378537E5378537E5378537E53
%78537E5378537E5378537E5378537E5378537E5378537E5378537E537853
%7E53785377525227FD05527D777E537E777E537E777E537E777E537E777E
%537E777E537E777E537E777E537E777E537E777E537E777E537E777E537E
%777E537E777E537E777E537E777E537E777E537E777E537E777E537E777E
%537E777E537E777E537E777E537E777E537E777E537E777E537E777E537E
%777E537E777E537E777E53FD045227FD0452785378537853785378537853
%785378537853785378537853785378537853785378537853785378537853
%785378537853785378537853785378537853785378537853785378537853
%785378537853785378537853785378537853785378537853785378537853
%785378537853785378537853785378535327FD07527D777E537E777E537E
%777E537E777E537E777E537E777E537E777E537E777E537E777E537E777E
%537E777E537E777E537E777E537E777E537E777E537E777E537E777E537E
%777E537E777E537E777E537E777E537E777E537E777E537E777E537E777E
%537E777E537E777E537E777E537E777E537E777E53FD0452275252522752
%525228525252285252522852525228525252285252522852525228525252
%285252522852525228525252285252522852525228525252285252522852
%525228525252285252522852525228525252285252522852525228525252
%2852525228525252285252522852525228525252285252522852525227FD
%855227525252275252522752525227525252275252522752525227525252
%275252522752525227525252275252522752525227525252275252522752
%525227525252275252522752525227525252275252522752525227525252
%275252522752525227525252275252522752525227525252275252522752
%5252275252522752A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8
%FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8
%A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8
%FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8
%A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFAFFFA8A87D
%A8A8FFA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8
%7D7D7DFFA8A87DA87DA8A8FFA8A87DA8A8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8A87DA8FFFFA8A87DA87DFFFFFFA8A87DFFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8A87DA8A8FFFD05
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFA8FFA8
%FFAFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8AFFFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA87DFFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A87D
%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF
%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8
%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF
%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8
%FFFFFFA8A87DA87D7DFD7BA87DA8FF7DA87DA87DA87DA87DA87DA87DA87D
%A87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87D
%A87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87D
%A87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87D
%A87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8FFFFFF7DA87D7D7DA8
%7D7D7DA87D7D7DA87D7D7DA87D7D7DA87D7D7DA87D7D7DA87D7D7DA87D7D
%7DA87D7D7DA87D7D7DA87D7D7DA87D847DA87DA87DA87DA87DA87DA87DA8
%7DA87DA87DA87DA87DA87DA87D7D7DA87D7D7DA87D7D7DA87D7D7DA87D7D
%7DA87D7D7DA87D7D7DA87D7D7DA87D7D7DA87D7D7DA87D7D7DA87DA8A8FD
%04FFFD34A87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DFD30A8FD
%3AFF7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8FD68FFA8
%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8A8FD68FF7DA87DA8
%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DFD6AFFA8FFA8FFA8FFA8FF
%A8FFA8A87DA87DA87DA87DA87DA8FD69FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%A87DA87DA87DA87DA87DFD6AFFA8FFA8FFA8FFA8FFA8FFA8FFA8A87DA87D
%A87DA87DA8FD69FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A87DA87DA87DA8
%A8FD6AFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A87DA87DA87DFD6CFFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA87D7DA87D7DA8FD60FFFD1AA87DA87DA87D
%FD0AA8FD56FFFD04A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87D
%FD07A87DA8A8A87DA8A8A87DA8A8FD56FFA8FFFFFFA8FFFFFFA8FFFFFFA8
%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD56
%FFA8AFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD56FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD56
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD58FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FDA9FFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps true put
userdict /_forceToCMYK true put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRider
currentpacking true setpacking
setpacking
%AI3_EndRider
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Vectorized Object) (Image Tracing) (Vectorize.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)
%AI8_PluginGroupInfo
(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Pattern Editor Plugin Group) (Adobe Pattern Editor Plugin Group) (Swatch Libraries.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathFinder Suite.aip)
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
4 Bn
%AI5_BeginGradient: (Fade to Black)
(Fade to Black) 0 2 Bd
[
0
0 %_Br
[
0 0 0 1 1 50 100 %_BS
%_0 0 0 1 1 50 100 Bs
0 0 0 1 1 25 0 %_BS
%_0 0 0 1 1 25 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Green, Yellow, Orange)
(Green, Yellow, Orange) 0 7 Bd
[
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9
>
<
BFBEBEBDBCBBBBBAB9B8B8B7B6B5B5B4B3B2B2B1B0AFAEAEADACABABAAA9A8A8A7A6A5A5A4A3A2A1
A1A09F9E9E9D9C9B9B9A999898979695949493929191908F8E8E8D8C8B8B8A898887878685848483
828181807F7E7E7D7C7B7B7A797877777675747473727171706F6E6E6D6C6B6A6A69686767666564
6463626161605F5E5D5D5C5B5A5A595857575655545453525150504F4E4D4D4C4B4A4A4948474746
45444443424140403F3E3D3D3C3B3A3A393837373635343333323130302F2E2D2D2C2B2A2A292827
262625242323222120201F1E1D1D1C1B1A1A
>
1
0
1 %_Br
0
<
1A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F4041
42434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263646566676869
6A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F9091
92939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9
BABBBCBDBEBF
>
<
F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5
F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8
F8F9F9F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFBFB
FCFCFCFCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFEFEFF
FFFFFFFFFFFF
>
0
1 %_Br
<
D9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2
B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A
898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A6968676665646362
61605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A
393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A1918171615141312
11100F0E0D0C0B0A09080706050403020100
>
0.1
<
FFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFA
FAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8
F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6
F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F3F3F3F3
F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2
>
0
1 %_Br
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9
>
<
BFBEBEBDBCBBBBBAB9B8B8B7B6B5B5B4B3B2B2B1B0AFAEAEADACABABAAA9A8A8A7A6A5A5A4A3A2A1
A1A09F9E9E9D9C9B9B9A999898979695949493929191908F8E8E8D8C8B8B8A898887878685848483
828181807F7E7E7D7C7B7B7A797877777675747473727171706F6E6E6D6C6B6A6A69686767666564
6463626161605F5E5D5D5C5B5A5A595857575655545453525150504F4E4D4D4C4B4A4A4948474746
45444443424140403F3E3D3D3C3B3A3A393837373635343333323130302F2E2D2D2C2B2A2A292827
262625242323222120201F1E1D1D1C1B1A1A
>
1
0
1 %_Br
0
<
1A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F4041
42434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263646566676869
6A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F9091
92939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9
BABBBCBDBEBF
>
<
F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5
F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8
F8F9F9F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFBFB
FCFCFCFCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFEFEFF
FFFFFFFFFFFF
>
0
1 %_Br
<
D9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBFBEBDBCBBBAB9B8B7B6B5B4B3
B3B2B1B0AFAEADACABABAAA9A8A7A6A5A4A4A3A2A1A09F9E9E9D9C9B9A9998989796959494939291
908F8F8E8D8C8B8B8A898888878685848483828181807F7E7E7D7C7B7B7A79787877767575747373
727170706F6E6E6D6C6B6B6A6969686767666565646363626161605F5F5E5D5D5C5B5B5A5A595858
575656555554535352525150504F4F4E4D4D4C4C4B4B4A4949484847474646454444434342424141
40403F3F3E3D3D3C3C3B3B3A3A3939383837373636363535343433333232313130302F2F2F2E2E2D
2D2C2C2B2B2B2A2A29292928282727262626252524242423232322222121212020201F1F1E1E1E1D
1D1D1C1C1C1B1B1B1A1A1A1919191818181717171716161615151514141414131313121212121111
1111101010100F0F0F0F0E0E0E0E0D0D0D0D0D0C0C0C0C0B0B0B0B0B0A0A0A0A0A09090909090808
08080808070707070707060606060606060505050505050504040404040404040303030303030303
03020202020202020202020202010101010101010101010101010101010101000000000000000000
0000000000000000000000000000000000
>
0.1
<
FFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFB
FBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9
F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7
F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6
F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5
F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4
F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3
F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3
F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2
F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2
F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2
>
0
1 %_Br
[
0.85 0.1 1 0 1 50 100 %_BS
%_0.85 0.1 1 0 1 50 100 Bs
0 0.75 1 0 1 50 80.117 %_BS
%_0 0.75 1 0 1 50 80.117 Bs
0 0.1 0.95 0 1 50 64 %_BS
%_0 0.1 0.95 0 1 50 64 Bs
0.85 0.1 1 0 1 50 47 %_BS
%_0.85 0.1 1 0 1 50 47 Bs
0 0.75 1 0 1 50 30 %_BS
%_0 0.75 1 0 1 50 30 Bs
0 0.1 0.95 0 1 50 15 %_BS
%_0 0.1 0.95 0 1 50 15 Bs
0.85 0.1 1 0 1 28 0 %_BS
%_0.85 0.1 1 0 1 28 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Purple Radial)
(Purple Radial) 1 2 Bd
[
<
0001010203030405050607070809090A0B0B0C0C0D0E0E0F10101112121313141515161717181819
1A1A1B1B1C1D1D1E1E1F20202121222323242425262627272828292A2A2B2B2C2C2D2E2E2F2F3030
313132333334343535363637373839393A3A3B3B3C3C3D3D3E3E3F3F404041414242434344444545
46464747484849494A4A4B4B4C4C4D4D4E4E4F4F5050515151525253535454555556565657575858
59595A5A5A5B5B5C5C5D5D5D5E5E5F5F5F6060616162626263636464646565666666676767686869
69696A6A6B6B6B6C6C6C6D6D6D6E6E6F6F6F70707071717172727273737374747475757576767677
77777878787979797A7A7A7B7B7B7B7C7C7C7D7D7D7E7E7E7E7F7F7F7F8080808181818182828282
83838384848484858585858686868687878787878888888889898989898A8A8A8A8B8B8B8B8B8C8C
8C8C8C8D8D8D8D8D8E8E8E8E8E8F8F8F8F8F8F909090909090919191919191929292929292929393
93939393939494949494949494959595959595959595969696969696969696969797979797979797
97979797989898989898989898989898989898989898999999999999999999999999999999999999
999999999999
>
<
000102030405060708090A0B0C0D0E0F10111213141516161718191A1B1C1D1E1F20212223242525
262728292A2B2C2D2E2F2F30313233343536373738393A3B3C3D3E3E3F4041424343444546474849
494A4B4C4D4D4E4F5051525253545556565758595A5A5B5C5D5D5E5F606161626364646566676768
696A6A6B6C6D6D6E6F7070717272737475757677777879797A7B7C7C7D7E7E7F8080818282838484
858686878888898A8A8B8B8C8D8D8E8F8F90909192929394949595969797989899999A9B9B9C9C9D
9E9E9F9FA0A0A1A1A2A3A3A4A4A5A5A6A6A7A7A8A9A9AAAAABABACACADADAEAEAFAFB0B0B1B1B2B2
B3B3B4B4B5B5B5B6B6B7B7B8B8B9B9BABABABBBBBCBCBDBDBEBEBEBFBFC0C0C0C1C1C2C2C3C3C3C4
C4C5C5C5C6C6C6C7C7C8C8C8C9C9C9CACACACBCBCCCCCCCDCDCDCECECECFCFCFD0D0D0D0D1D1D1D2
D2D2D3D3D3D4D4D4D4D5D5D5D6D6D6D6D7D7D7D7D8D8D8D8D9D9D9D9DADADADADBDBDBDBDBDCDCDC
DCDDDDDDDDDDDEDEDEDEDEDEDFDFDFDFDFE0E0E0E0E0E0E1E1E1E1E1E1E1E2E2E2E2E2E2E2E2E3E3
E3E3E3E3E3E3E3E4E4E4E4E4E4E4E4E4E4E4E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5
E5E5E5E5E5E6
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000
>
1 %_Br
[
0 0 0 0 1 30 63.1579 %_BS
%_0 0 0 0 1 30 63.1579 Bs
0.6 0.9 0.000031 0.000031 1 50 100 %_BS
%_0.6 0.9 0.000031 0.000031 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Super Soft Black Vignette)
(Super Soft Black Vignette) 1 3 Bd
[
0.2
0.2
0.2
1
1 %_Br
0.2
0.2
0.2
1
1 %_Br
[
0.2 0.2 0.2 1 1 56.0729 57.4443 %_BS
%_0.2 0.2 0.2 1 1 56.0729 57.4443 Bs
0.2 0.2 0.2 1 1 31.8603 79.7713 %_BS
%_0.2 0.2 0.2 1 1 31.8603 79.7713 Bs
0.2 0.2 0.2 1 1 50 100 %_BS
%_0.2 0.2 0.2 1 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Laguna)
(Laguna) 0 3.1914 84.1563 84.791 [
%AI3_Tile
(0 O 0 R 0 1 1 0 k
 0 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
42.0781 30.3906 m
12.2227 12.8779 9.0488 12.4082 V
7.2871 14.1709 0 30.3906 Y
13.1641 20.5186 29.1484 23.3389 42.0781 30.3906 C
f
42.0781 57.5908 m
12.2227 40.0781 9.0488 39.6094 V
7.2871 41.3711 0 57.5908 Y
13.1641 47.7178 29.1484 50.5391 42.0781 57.5908 C
f
42.0781 84.791 m
12.2227 67.2773 9.0488 66.8096 V
7.2871 68.5703 0 84.791 Y
13.1641 74.918 29.1484 77.7402 42.0781 84.791 C
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.6 0.9 0.000031 0.000031 k
 0.6 0.9 0.000031 0.000031 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
84.1563 30.3906 m
54.3008 12.8779 51.127 12.4082 V
49.3652 14.1709 42.0781 30.3906 Y
55.2422 20.5186 71.2266 23.3389 84.1563 30.3906 C
f
84.1563 57.5908 m
54.3008 40.0781 51.127 39.6094 V
49.3652 41.3711 42.0781 57.5908 Y
55.2422 47.7178 71.2266 50.5391 84.1563 57.5908 C
f
84.1563 84.791 m
54.3008 67.2773 51.127 66.8096 V
49.3652 68.5703 42.0781 84.791 Y
55.2422 74.918 71.2266 77.7402 84.1563 84.791 C
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.85 0.1 1 0 k
 0.85 0.1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
21.0391 33.582 m
19.2773 33.582 17.8477 32.1523 17.8477 30.3906 c
17.8477 28.6289 19.2773 27.2002 21.0391 27.2002 c
22.8008 27.2002 24.2285 28.6289 24.2285 30.3906 c
24.2285 32.1523 22.8008 33.582 21.0391 33.582 c
f
21.0391 6.3818 m
19.2773 6.3818 17.8477 4.9531 17.8477 3.1914 c
17.8477 1.4287 19.2773 0 21.0391 0 c
22.8008 0 24.2285 1.4287 24.2285 3.1914 c
24.2285 4.9531 22.8008 6.3818 21.0391 6.3818 c
f
21.0391 60.7822 m
19.2773 60.7822 17.8477 59.3525 17.8477 57.5908 c
17.8477 55.8291 19.2773 54.3994 21.0391 54.3994 c
22.8008 54.3994 24.2285 55.8291 24.2285 57.5908 c
24.2285 59.3525 22.8008 60.7822 21.0391 60.7822 c
f
21.0391 87.9824 m
19.2773 87.9824 17.8477 86.5547 17.8477 84.791 c
17.8477 83.0283 19.2773 81.5996 21.0391 81.5996 c
22.8008 81.5996 24.2285 83.0283 24.2285 84.791 c
24.2285 86.5547 22.8008 87.9824 21.0391 87.9824 c
f
63.1172 33.582 m
61.3555 33.582 59.9258 32.1523 59.9258 30.3906 c
59.9258 28.6289 61.3555 27.2002 63.1172 27.2002 c
64.8789 27.2002 66.3066 28.6289 66.3066 30.3906 c
66.3066 32.1523 64.8789 33.582 63.1172 33.582 c
f
63.1172 6.3818 m
61.3555 6.3818 59.9258 4.9531 59.9258 3.1914 c
59.9258 1.4287 61.3555 0 63.1172 0 c
64.8789 0 66.3066 1.4287 66.3066 3.1914 c
66.3066 4.9531 64.8789 6.3818 63.1172 6.3818 c
f
63.1172 60.7822 m
61.3555 60.7822 59.9258 59.3525 59.9258 57.5908 c
59.9258 55.8291 61.3555 54.3994 63.1172 54.3994 c
64.8789 54.3994 66.3066 55.8291 66.3066 57.5908 c
66.3066 59.3525 64.8789 60.7822 63.1172 60.7822 c
f
63.1172 87.9824 m
61.3555 87.9824 59.9258 86.5547 59.9258 84.791 c
59.9258 83.0283 61.3555 81.5996 63.1172 81.5996 c
64.8789 81.5996 66.3066 83.0283 66.3066 84.791 c
66.3066 86.5547 64.8789 87.9824 63.1172 87.9824 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.6 0.9 0.000031 0.000031 k
 0.6 0.9 0.000031 0.000031 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
0 3.1914 m
29.8535 20.7041 33.0273 21.1738 V
34.79 19.4111 42.0781 3.1914 Y
28.9141 13.0645 12.9277 10.2422 0 3.1914 C
f
0 30.3906 m
29.8535 47.9033 33.0273 48.374 V
34.79 46.6104 42.0781 30.3906 Y
28.9141 40.2646 12.9277 37.4434 0 30.3906 C
f
0 57.5908 m
29.8535 75.1035 33.0273 75.5752 V
34.79 73.8105 42.0781 57.5908 Y
28.9141 67.4648 12.9277 64.6436 0 57.5908 C
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0 1 1 0 k
 0 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
42.0781 3.1914 m
71.9316 20.7041 75.1055 21.1738 V
76.8691 19.4111 84.1563 3.1914 Y
70.9922 13.0645 55.0059 10.2422 42.0781 3.1914 C
f
42.0781 30.3906 m
71.9316 47.9033 75.1055 48.374 V
76.8691 46.6104 84.1563 30.3906 Y
70.9922 40.2646 55.0059 37.4434 42.0781 30.3906 C
f
42.0781 57.5908 m
71.9316 75.1035 75.1055 75.5752 V
76.8691 73.8105 84.1563 57.5908 Y
70.9922 67.4648 55.0059 64.6436 42.0781 57.5908 C
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginBrushPattern
(New Pattern 1)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7885 7885 m
-7885 7826.0254 L
-7869.4902 7826.0254 L
-7869.4902 7885 L
-7885 7885 L
n
0 O
0 0 0 1 k
10 M-7885 7836.0581 m
-7885 7835.5742 L
-7869.4878 7835.5742 L
-7869.4878 7836.0581 L
-7885 7836.0581 L
f
-7885 7853.3838 m
-7885 7852.8965 L
-7869.4878 7852.8965 L
-7869.4878 7853.3838 L
-7885 7853.3838 L
f
-7884.9995 7838.3677 m
-7884.9995 7837.6494 L
-7869.4878 7837.6494 L
-7869.4878 7838.3677 L
-7884.9995 7838.3677 L
f
-7884.9995 7848.6328 m
-7884.9995 7847.9116 L
-7869.4878 7847.9116 L
-7869.4878 7848.6328 L
-7884.9995 7848.6328 L
f
-7884.9995 7846.4951 m
-7884.9995 7845.4141 L
-7869.4878 7845.4141 L
-7869.4878 7846.4951 L
-7884.9995 7846.4951 L
f
-7884.9995 7840.939 m
-7884.9995 7839.8589 L
-7869.4878 7839.8589 L
-7869.4878 7840.939 L
-7884.9995 7840.939 L
f
-7884.9995 7843.9854 m
-7884.9995 7842.3345 L
-7869.4878 7842.3345 L
-7869.4878 7843.9854 L
-7884.9995 7843.9854 L
f
*u
1 D
-7869.4888 7852.1455 m
-7884.9995 7852.1455 L
-7884.9995 7851.6816 L
-7884.6514 7851.6816 L
-7884.6514 7850.4844 L
-7884.9995 7850.4844 L
-7884.9995 7850.0215 L
-7869.4888 7850.0215 L
-7869.4888 7850.4844 L
-7869.8408 7850.4844 L
-7869.8408 7851.6846 L
-7869.4888 7851.6846 L
-7869.4888 7852.1455 L
f
0 D
-7881.1255 7851.6846 m
-7880.4199 7851.6846 L
-7880.4199 7850.4844 L
-7881.1255 7850.4844 L
-7881.1255 7851.6846 L
f
-7881.8306 7850.4844 m
-7882.5361 7850.4844 L
-7882.5361 7851.6846 L
-7881.8306 7851.6846 L
-7881.8306 7850.4844 L
f
-7879.7144 7851.6846 m
-7879.0098 7851.6846 L
-7879.0098 7850.4844 L
-7879.7144 7850.4844 L
-7879.7144 7851.6846 L
f
-7878.3042 7851.6846 m
-7877.5986 7851.6846 L
-7877.5986 7850.4844 L
-7878.3042 7850.4844 L
-7878.3042 7851.6846 L
f
-7876.8936 7851.6846 m
-7876.1885 7851.6846 L
-7876.1885 7850.4844 L
-7876.8936 7850.4844 L
-7876.8936 7851.6846 L
f
-7875.4834 7851.6846 m
-7874.7778 7851.6846 L
-7874.7778 7850.4844 L
-7875.4834 7850.4844 L
-7875.4834 7851.6846 L
f
-7874.0718 7851.6846 m
-7873.3672 7851.6846 L
-7873.3672 7850.4844 L
-7874.0718 7850.4844 L
-7874.0718 7851.6846 L
f
-7872.6616 7851.6846 m
-7871.9575 7851.6846 L
-7871.9575 7850.4844 L
-7872.6616 7850.4844 L
-7872.6616 7851.6846 L
f
-7871.2515 7851.6846 m
-7870.5454 7851.6846 L
-7870.5454 7850.4844 L
-7871.2515 7850.4844 L
-7871.2515 7851.6846 L
f
-7883.9463 7851.6846 m
-7883.2407 7851.6846 L
-7883.2407 7850.4844 L
-7883.9463 7850.4844 L
-7883.9463 7851.6846 L
f
*U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 2)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7885 7884.9985 m
-7885 7826.022 L
-7826.0254 7826.022 L
-7826.0254 7884.9985 L
-7885 7884.9985 L
n
*u
1 D
0 O
0 0 0 1 k
10 M-7858.4902 7844.4453 m
-7856.9678 7845.9678 -7857.5166 7848.9829 -7859.7153 7851.1836 c
-7861.9146 7853.3804 -7864.9302 7853.9292 -7866.4526 7852.4077 c
-7867.9751 7850.8853 -7867.4263 7847.8677 -7865.2271 7845.6709 c
-7863.0288 7843.4717 -7860.0127 7842.9238 -7858.4902 7844.4453 c
f
0 D
-7859.1519 7845.0781 m
-7860.5728 7843.6582 -7863.2241 7844.0054 -7865.0728 7845.854 c
-7866.9214 7847.7031 -7867.2695 7850.354 -7865.8486 7851.7749 c
-7864.4282 7853.1948 -7861.7769 7852.8486 -7859.9282 7851 c
-7858.0786 7849.1504 -7857.7314 7846.5 -7859.1519 7845.0781 c
f
*U
-7876.5327 7835.2607 m
-7875.7969 7835.1309 l
-7875.71 7834.438 l
-7870.9458 7839.9814 l
-7876.5327 7835.2607 l
f
-7865.9409 7832.314 m
-7866.1235 7830.7261 L
-7865.7002 7830.4512 -7865.3184 7830.1309 -7864.9346 7829.814 C
-7864.6841 7832.9189 L
-7864.3535 7832.9453 L
-7864.4678 7829.439 L
-7864.0503 7829.1157 -7863.6089 7828.8213 -7863.0913 7828.6152 C
-7863.1235 7833.7261 L
-7862.9063 7833.7734 L
-7862.5938 7828.4517 L
-7862.2007 7828.3516 -7861.7632 7828.3008 -7861.2642 7828.3213 C
-7862.0376 7837.4463 L
-7860.7666 7828.3589 L
-7860.3359 7828.4063 -7859.96 7828.4741 -7859.6289 7828.562 C
-7860.4551 7835.3345 L
-7860.2998 7835.2109 L
-7859.1465 7828.7148 L
-7858.7471 7828.8623 -7858.4238 7829.0444 -7858.1528 7829.25 C
-7858.7334 7834.0757 L
-7858.4688 7833.9414 L
-7857.7114 7829.6421 L
-7857.2256 7830.1494 -7856.9194 7830.7344 -7856.5127 7831.2822 C
-7857.0713 7833.3496 L
-7856.6001 7833.1709 L
-7856.1338 7831.7383 L
-7855.8096 7832.0825 -7855.4063 7832.394 -7854.8394 7832.6406 c
-7854.8506 7832.6357 -7853.7393 7832.6821 -7853.7466 7832.6533 c
-7853.7959 7832.4375 -7854.6655 7832.2998 -7854.6455 7832.3101 c
-7857.2974 7830.8965 -7856.3232 7828.3301 -7860.8735 7827.8735 c
-7864.4072 7827.5176 -7865.2515 7830.75 -7868.0962 7831.0615 c
-7868.1152 7831.062 -7868.7632 7831.3174 -7868.8442 7831.4502 C
-7868.8486 7831.6255 -7868.4595 7831.5181 -7868.2417 7831.4766 c
-7867.6001 7831.3477 -7867.0498 7831.2397 -7866.5728 7830.9912 C
-7866.4023 7832.1909 L
-7865.9409 7832.314 L
f
-7878.6626 7844.9463 m
-7880.2495 7844.7637 L
-7880.5254 7845.186 -7880.8462 7845.5693 -7881.1626 7845.9517 C
-7878.0576 7846.2031 L
-7878.0322 7846.5352 L
-7881.5376 7846.4189 L
-7881.8608 7846.8364 -7882.1558 7847.2783 -7882.3618 7847.7959 C
-7877.2505 7847.7637 L
-7877.2031 7847.9814 L
-7882.5249 7848.2935 L
-7882.6265 7848.686 -7882.6758 7849.1255 -7882.6558 7849.6235 C
-7873.5298 7848.8496 L
-7882.6177 7850.1196 L
-7882.5713 7850.5493 -7882.5024 7850.9277 -7882.4146 7851.2573 C
-7875.6426 7850.4316 L
-7875.7656 7850.5869 L
-7882.2622 7851.7397 L
-7882.1138 7852.1406 -7881.9312 7852.4629 -7881.7271 7852.7344 C
-7876.9014 7852.1533 L
-7877.0352 7852.4185 L
-7881.3335 7853.1768 L
-7880.8271 7853.6621 -7880.2417 7853.9688 -7879.6943 7854.3755 C
-7877.6274 7853.814 L
-7877.8066 7854.2871 L
-7879.2383 7854.7524 L
-7878.8945 7855.0757 -7878.5825 7855.4814 -7878.3359 7856.0479 c
-7878.3408 7856.0352 -7878.2935 7857.1484 -7878.3242 7857.1416 c
-7878.54 7857.0908 -7878.6768 7856.2222 -7878.6675 7856.2412 c
-7880.0806 7853.5894 -7882.6475 7854.5645 -7883.1045 7850.0127 c
-7883.4595 7846.4805 -7880.2271 7845.6367 -7879.9165 7842.7915 c
-7879.9136 7842.7725 -7879.6602 7842.1255 -7879.5273 7842.0435 C
-7879.3535 7842.0381 -7879.4575 7842.4277 -7879.5015 7842.6455 c
-7879.6294 7843.2871 -7879.7368 7843.8364 -7879.9858 7844.314 C
-7878.7842 7844.4854 L
-7878.6626 7844.9463 L
f
-7849.0127 7843.2285 m
-7844.2495 7844.6348 -7842.9502 7846.9199 -7842.9746 7848.5654 C
-7842.5366 7845.4595 -7840.6558 7847.8652 -7840.1313 7849.0029 C
-7841.0498 7845.4165 -7838.4463 7848.5439 -7838.2715 7848.8496 C
-7839.2593 7845.4063 -7846.3955 7842.9404 -7849.0127 7843.2285 C
f
-7854.9775 7842.2197 m
-7858.3242 7836.1733 -7855.4233 7834.5703 -7854.7354 7834.3774 c
-7854.9233 7834.4287 -7855.3135 7835.2949 -7855.2026 7835.6367 C
-7854.9482 7835.0928 -7854.4111 7834.8188 -7853.8994 7834.6094 C
-7855.1626 7835.6094 -7855.6943 7838.4111 -7854.9082 7841.9512 c
-7854.9775 7842.2197 l
f
-7857.2222 7842.5254 m
-7859.6035 7840.1016 -7861.0474 7839.2773 -7859.1035 7836.6685 c
-7859.2202 7836.8262 -7859.3838 7837.7168 -7859.1758 7838.0117 C
-7859.0942 7837.4185 -7858.6626 7836.9985 -7858.2358 7836.6455 C
-7859.9395 7840.0732 -7857.2222 7842.5254 y
f
-7849.6577 7841.4199 m
-7849.9897 7839.5615 -7848.4922 7838.4688 -7846.8662 7837.8496 C
-7847.4194 7837.8662 -7848.0176 7837.9302 -7848.4482 7838.3496 C
-7848.4302 7837.9893 -7847.7598 7837.3184 -7847.5654 7837.3359 c
-7848.2778 7837.2744 -7850.4951 7836.8447 -7849.8408 7841.6191 c
-7849.6577 7841.4199 l
f
-7846.5576 7842.1133 m
-7846.1538 7840.7261 -7843.9502 7840.4595 V
-7844.5342 7840.2871 -7845.2314 7840.3662 -7845.6626 7840.7856 C
-7845.6455 7840.4253 -7844.8408 7839.7173 -7844.6479 7839.7568 c
-7846.3921 7839.4141 -7846.6782 7841.9072 y
-7846.5576 7842.1133 l
f
-7843.1152 7843.3213 m
-7842.8408 7842.6274 -7842.0942 7842.1196 -7841.2646 7842 C
-7841.6475 7841.8975 -7842.0854 7841.9868 -7842.4297 7842.3237 C
-7842.4175 7842.0352 -7841.7744 7841.4863 -7841.6182 7841.5024 c
-7843.2729 7841.3496 -7843.1152 7843.3213 Y
f
-7852.5562 7841.4629 m
-7852.6504 7838.1309 -7851.4175 7836.4541 -7849.9761 7835.6509 C
-7850.5264 7835.7148 -7851.1162 7835.8271 -7851.5103 7836.2783 C
-7851.5249 7835.9189 -7850.9087 7835.1948 -7850.7134 7835.1973 c
-7851.4287 7835.1943 -7854.0034 7835.0894 -7852.7866 7841.7109 c
-7852.5562 7841.4629 l
f
-7867.7944 7862.0127 m
-7866.3882 7866.7749 -7864.1006 7868.0757 -7862.4575 7868.0518 C
-7865.5635 7868.4893 -7863.1567 7870.3701 -7862.0195 7870.894 C
-7865.6074 7869.9766 -7862.4795 7872.5791 -7862.1729 7872.7549 C
-7865.6162 7871.7676 -7868.0825 7864.6309 -7867.7944 7862.0127 C
f
-7868.8022 7856.0488 m
-7874.8481 7852.6997 -7876.4521 7855.6021 -7876.6465 7856.2915 c
-7876.5938 7856.1021 -7875.7295 7855.7119 -7875.3857 7855.8237 C
-7875.9297 7856.0781 -7876.2017 7856.6152 -7876.4126 7857.1274 C
-7875.4126 7855.8623 -7872.6113 7855.3345 -7869.0703 7856.1182 c
-7868.8022 7856.0488 l
f
-7868.4966 7853.8037 m
-7870.9214 7851.4229 -7871.7446 7849.9805 -7874.3535 7851.9229 c
-7874.1968 7851.8062 -7873.3057 7851.6421 -7873.0112 7851.8496 C
-7873.6064 7851.9302 -7874.0239 7852.3628 -7874.3774 7852.79 C
-7870.9487 7851.0879 -7868.4966 7853.8037 y
f
-7869.6025 7861.3677 m
-7871.4614 7861.0352 -7872.5537 7862.5342 -7873.1729 7864.1597 C
-7873.1558 7863.6069 -7873.0918 7863.0093 -7872.6719 7862.5791 C
-7873.0327 7862.5957 -7873.7041 7863.2656 -7873.6865 7863.4604 c
-7873.7485 7862.75 -7874.1777 7860.5308 -7869.4038 7861.1846 c
-7869.6025 7861.3677 l
f
-7868.9087 7864.4688 m
-7870.2959 7864.8735 -7870.5649 7867.0757 V
-7870.7354 7866.4917 -7870.6558 7865.7949 -7870.2368 7865.3628 C
-7870.5967 7865.3804 -7871.3042 7866.186 -7871.2666 7866.3789 c
-7871.6079 7864.6348 -7869.1152 7864.3477 y
-7868.9087 7864.4688 l
f
-7867.7007 7867.9111 m
-7868.3955 7868.1846 -7868.9009 7868.9302 -7869.0234 7869.7612 C
-7869.1265 7869.3789 -7869.0337 7868.9404 -7868.6982 7868.5967 C
-7868.9873 7868.6104 -7869.5361 7869.2524 -7869.5215 7869.4077 c
-7869.6729 7867.7524 -7867.7007 7867.9111 Y
f
-7869.5591 7858.4688 m
-7872.8921 7858.3774 -7874.5679 7859.6094 -7875.3696 7861.0508 C
-7875.3081 7860.5024 -7875.1953 7859.9102 -7874.7422 7859.5142 C
-7875.1035 7859.5029 -7875.8262 7860.1157 -7875.8257 7860.3135 c
-7875.8286 7859.5967 -7875.9321 7857.0229 -7869.3115 7858.2397 c
-7869.5591 7858.4688 l
f
u
u
-7879.0234 7834.7095 m
-7879.2856 7834.1948 -7879.0479 7833.6685 -7877.2905 7833.6504 C
-7878.0322 7832.9077 L
-7879.9927 7832.9941 -7880.3423 7834.1772 -7880.1665 7834.7573 c
-7879.9736 7835.3901 -7879.5488 7835.9023 -7879.2085 7836.25 C
-7880.2031 7836.6108 -7880.2505 7837.3916 -7880.0479 7837.79 c
-7879.7729 7838.3345 -7879.2998 7838.7524 -7878.9487 7839.0176 C
-7879.9448 7839.3774 -7879.8623 7840.1133 -7879.6074 7840.4575 c
-7879.2856 7840.8901 -7878.8174 7841.2031 -7878.4751 7841.4023 C
-7879.4585 7841.8301 -7879.3022 7842.5229 -7879.0239 7842.8149 c
-7878.6929 7843.1665 -7878.2466 7843.3916 -7877.9199 7843.5317 C
-7878.7695 7844.022 -7878.5537 7844.6318 -7878.2715 7844.8623 c
-7877.9458 7845.1318 -7877.5342 7845.2837 -7877.23 7845.3774 C
-7877.9395 7845.9077 -7877.6802 7846.4287 -7877.4014 7846.6069 c
-7877.0698 7846.8174 -7876.6714 7846.9077 -7876.3857 7846.9541 C
-7876.9673 7847.5093 -7876.6768 7847.9478 -7876.4097 7848.0757 c
-7875.9326 7848.3037 -7875.3511 7848.2764 -7875.1768 7848.2813 c
-7874.6343 7848.2959 -7873.8838 7848.1255 -7873.4272 7848.0703 c
-7872.3442 7847.9429 -7868.5718 7847.2749 -7866.9023 7847.438 C
-7867.1704 7847.2285 -7867.1714 7847.2285 v
-7869.1304 7847.0415 -7872.0479 7847.4678 -7873.1294 7847.5957 c
-7873.9839 7847.6943 -7875.1182 7847.9951 -7875.9951 7847.7295 c
-7876.2593 7847.6494 -7876.3696 7847.4453 -7875.8906 7847.0215 C
-7875.3135 7847.0732 -7874.5737 7847.0024 -7874.1118 7847.0039 c
-7872.9009 7847.0093 -7868.6504 7846.7832 -7866.8311 7847.1895 C
-7867.0986 7846.9199 l
-7869.2344 7846.4492 -7872.5098 7846.5254 -7873.7202 7846.5181 c
-7874.6758 7846.5132 -7875.9673 7846.6909 -7876.8984 7846.2783 c
-7877.1777 7846.1558 -7877.2729 7845.9185 -7876.6953 7845.5166 C
-7876.0615 7845.6597 -7875.2153 7845.6816 -7874.6968 7845.7471 c
-7873.3623 7845.9185 -7868.6431 7846.2437 -7866.6929 7846.9375 C
-7866.9502 7846.6064 -7866.9512 7846.6064 v
-7869.2422 7845.7964 -7872.8647 7845.4375 -7874.1992 7845.2656 c
-7875.2529 7845.1309 -7876.7007 7845.1504 -7877.6719 7844.5703 c
-7877.9624 7844.3975 -7878.0352 7844.1235 -7877.3481 7843.7573 C
-7876.6704 7843.9985 -7875.7578 7844.1328 -7875.2026 7844.2749 c
-7873.7534 7844.6445 -7868.5938 7845.6421 -7866.5361 7846.6685 C
-7866.7754 7846.2695 -7866.7759 7846.2695 v
-7869.1934 7845.0664 -7873.1392 7844.1797 -7874.5879 7843.8101 c
-7875.7314 7843.5181 -7877.3311 7843.3452 -7878.3242 7842.5718 c
-7878.6182 7842.3452 -7878.6626 7842.0352 -7877.8745 7841.73 C
-7877.1606 7842.0825 -7876.1802 7842.3535 -7875.5889 7842.5845 c
-7874.0415 7843.186 -7868.4863 7844.9863 -7866.3564 7846.3984 C
-7866.5654 7845.9253 -7866.5674 7845.9248 v
-7869.0698 7844.2695 -7873.3018 7842.7573 -7874.8486 7842.1543 c
-7876.0703 7841.6768 -7877.8115 7841.2695 -7878.8018 7840.2837 c
-7879.0786 7840.0093 -7879.1006 7839.6846 -7878.3384 7839.4551 C
-7877.5942 7839.9404 -7876.5234 7840.3584 -7875.8926 7840.6895 c
-7874.2446 7841.5518 -7868.2441 7844.2246 -7866.1055 7846.0957 C
-7866.2407 7845.5181 -7866.2417 7845.5181 v
-7868.7559 7843.3276 -7873.2954 7841.1274 -7874.9438 7840.2607 c
-7876.2456 7839.5791 -7878.1602 7838.9248 -7879.0815 7837.6709 c
-7879.3135 7837.355 -7879.2974 7837.0127 -7878.6118 7836.8101 C
-7877.8594 7837.4668 -7876.6641 7838.0757 -7875.9888 7838.5317 c
-7874.27 7839.6943 -7867.9126 7843.3774 -7865.8442 7845.7637 C
-7866.1377 7844.9902 -7866.1382 7844.9893 v
-7868.5718 7842.1934 -7873.0825 7839.2837 -7874.8018 7838.1221 c
-7876.1582 7837.2031 -7878.2295 7836.2607 -7879.0234 7834.7095 c
f
U
u
-7876.2329 7831.9185 m
-7876.7446 7831.6543 -7877.2715 7831.8926 -7877.2905 7833.6504 C
-7878.0313 7832.9077 L
-7877.9473 7830.9468 -7876.7622 7830.5967 -7876.1826 7830.7749 c
-7875.5503 7830.9653 -7875.0386 7831.3916 -7874.6919 7831.7324 C
-7874.3306 7830.7373 -7873.5498 7830.6904 -7873.1504 7830.8901 c
-7872.6064 7831.1685 -7872.1895 7831.6406 -7871.9224 7831.9917 C
-7871.5649 7830.9951 -7870.8281 7831.0781 -7870.4834 7831.3345 c
-7870.0498 7831.6543 -7869.7368 7832.1235 -7869.5376 7832.4648 C
-7869.1113 7831.4824 -7868.4175 7831.6382 -7868.1255 7831.9185 c
-7867.7759 7832.2485 -7867.5488 7832.6943 -7867.4082 7833.0215 C
-7866.9185 7832.1719 -7866.3086 7832.3877 -7866.0767 7832.6685 c
-7865.8086 7832.9951 -7865.6553 7833.4053 -7865.5649 7833.7109 C
-7865.0327 7833.0024 -7864.5103 7833.2607 -7864.3345 7833.5391 c
-7864.1235 7833.8701 -7864.0322 7834.2695 -7863.9858 7834.5532 C
-7863.4312 7833.9727 -7862.9912 7834.2637 -7862.8638 7834.5308 c
-7862.6367 7835.0078 -7862.6655 7835.5894 -7862.6592 7835.7637 c
-7862.6431 7836.3062 -7862.8159 7837.0566 -7862.8696 7837.5132 c
-7862.9966 7838.5957 -7863.6655 7842.3677 -7863.5034 7844.0381 C
-7863.7129 7843.7695 l
-7863.8999 7841.8101 -7863.4727 7838.8926 -7863.3457 7837.8101 c
-7863.2446 7836.9575 -7862.9458 7835.8223 -7863.2114 7834.9453 c
-7863.2915 7834.6816 -7863.4946 7834.5703 -7863.9199 7835.0508 C
-7863.8682 7835.6279 -7863.9395 7836.3662 -7863.9375 7836.8271 c
-7863.9302 7838.04 -7864.1567 7842.29 -7863.7524 7844.1094 C
-7864.0195 7843.8428 -7864.0195 7843.8413 v
-7864.4922 7841.7061 -7864.4155 7838.4316 -7864.4214 7837.2207 c
-7864.4272 7836.2646 -7864.25 7834.9736 -7864.6616 7834.0435 c
-7864.7847 7833.7637 -7865.0234 7833.6685 -7865.4238 7834.2461 C
-7865.2798 7834.8789 -7865.2593 7835.7246 -7865.1929 7836.2437 c
-7865.0225 7837.5781 -7864.6958 7842.2959 -7864.0034 7844.2485 C
-7864.3345 7843.9902 -7864.3354 7843.9893 v
-7865.1455 7841.6982 -7865.5039 7838.0757 -7865.6753 7836.7397 c
-7865.8096 7835.6885 -7865.79 7834.2397 -7866.3706 7833.2695 c
-7866.5435 7832.978 -7866.8174 7832.9053 -7867.1816 7833.5933 C
-7866.9434 7834.2695 -7866.8081 7835.1836 -7866.6665 7835.7383 c
-7866.2969 7837.186 -7865.2993 7842.3477 -7864.27 7844.4053 C
-7864.6704 7844.1665 -7864.6714 7844.1665 v
-7865.8745 7841.7471 -7866.7607 7837.8008 -7867.1294 7836.3535 c
-7867.4214 7835.2095 -7867.5962 7833.6094 -7868.3662 7832.6172 c
-7868.5962 7832.3232 -7868.9058 7832.2783 -7869.2114 7833.0664 C
-7868.8594 7833.7788 -7868.5874 7834.7612 -7868.3574 7835.3516 c
-7867.7534 7836.8984 -7865.9546 7842.4541 -7864.5415 7844.5854 C
-7865.0161 7844.3755 l
-7866.6704 7841.8711 -7868.1826 7837.6382 -7868.7866 7836.0918 c
-7869.2622 7834.8701 -7869.6714 7833.1279 -7870.6558 7832.1382 c
-7870.9312 7831.8623 -7871.2559 7831.8398 -7871.4858 7832.6016 C
-7871.0015 7833.3452 -7870.5825 7834.4185 -7870.2529 7835.0469 c
-7869.3887 7836.6943 -7866.7158 7842.6973 -7864.8447 7844.8359 C
-7865.4209 7844.6992 -7865.4214 7844.6992 v
-7867.6128 7842.1846 -7869.8145 7837.6455 -7870.6782 7835.9951 c
-7871.3599 7834.6943 -7872.0161 7832.7788 -7873.2695 7831.8589 c
-7873.5854 7831.6274 -7873.9272 7831.6421 -7874.1313 7832.3276 C
-7873.4736 7833.0825 -7872.8638 7834.2764 -7872.4072 7834.9512 c
-7871.2441 7836.6709 -7867.5635 7843.0269 -7865.1768 7845.0967 C
-7865.9502 7844.8037 -7865.9512 7844.8013 v
-7868.7471 7842.3677 -7871.6558 7837.8584 -7872.8184 7836.1382 c
-7873.7368 7834.7822 -7874.6802 7832.7119 -7876.2329 7831.9185 c
f
U
U
*u
1 D
-7826.0264 7836.0566 m
-7832.5264 7836.0566 L
-7832.1826 7836.4189 -7831.7622 7836.7573 -7831.1777 7837.0332 c
-7831.1978 7837.0229 -7830.3994 7837.1558 -7830.2622 7837.3325 c
-7830.0967 7837.5415 -7831.7886 7837.5825 -7832.6929 7836.5342 C
-7833.3486 7839.7095 L
-7833.8135 7840.0269 L
-7833.0918 7836.0972 L
-7833.5249 7835.5703 -7833.8594 7835.0024 -7834.3687 7834.5181 C
-7835.0337 7840.6284 L
-7835.29 7840.7749 L
-7834.8286 7834.147 L
-7835.1104 7833.9575 -7835.4424 7833.7915 -7835.8486 7833.6621 C
-7836.7119 7841.022 L
-7836.9482 7841.0078 L
-7836.3369 7833.5317 L
-7836.6729 7833.4604 -7837.0518 7833.4111 -7837.4834 7833.3853 C
-7838.0303 7840.9541 L
-7838.1992 7840.9517 L
-7837.9814 7833.3711 L
-7838.4814 7833.3774 -7838.9175 7833.4463 -7839.3042 7833.5669 C
-7839.4155 7840.7061 L
-7839.6338 7840.6685 L
-7839.7935 7833.7549 L
-7840.2998 7833.9863 -7840.7266 7834.3013 -7841.1279 7834.6455 C
-7841.0454 7840.2412 L
-7841.3774 7840.0269 L
-7841.5752 7835.0435 L
-7841.9434 7835.3774 -7842.3096 7835.7168 -7842.7178 7836.0127 C
-7842.7217 7839.3389 L
-7843.1455 7839.0645 L
-7843.1553 7836.2988 L
-7843.6191 7836.5693 -7844.5854 7837.0093 -7845.4014 7836.8672 C
-7844.1714 7836.5435 -7843.7925 7836.3301 -7843.5034 7836.0566 C
-7846.7295 7836.0566 L
-7842.8955 7840.4512 -7836.3394 7844.686 -7831.3018 7838.022 C
-7831.1807 7837.8838 -7830.8174 7837.562 -7830.1255 7837.647 C
-7826.0264 7837.647 L
-7826.0264 7838.3672 L
-7829.4834 7838.3672 L
-7829.1318 7838.6768 -7828.8223 7839.4863 -7829.0386 7839.8574 C
-7826.0264 7839.8574 L
-7826.0264 7840.938 L
-7829.1689 7840.938 L
-7829.2935 7841.4492 -7829.5439 7841.8853 -7829.8218 7842.3311 C
-7826.0264 7842.3311 L
-7826.0264 7843.9868 L
-7830.7354 7843.9868 L
-7830.9424 7844.4453 -7831.1016 7844.9077 -7831.1768 7845.4111 C
-7826.0264 7845.4111 L
-7826.0264 7846.4917 L
-7831.1714 7846.4917 L
-7831.1074 7846.9829 -7830.9614 7847.4668 -7830.7378 7847.9111 C
-7826.0264 7847.9111 L
-7826.0264 7848.6309 L
-7830.2744 7848.6309 L
-7829.9375 7849.0039 -7828.8535 7849.5933 -7828.9375 7850.022 C
-7826.0239 7850.022 L
-7826.0239 7850.4824 L
-7826.3721 7850.4824 L
-7826.3721 7851.6821 L
-7826.0239 7851.6821 L
-7826.0239 7852.1421 L
-7833.9736 7852.1421 L
-7834.4082 7852.4375 -7835.2192 7852.4517 -7835.9897 7852.1421 C
-7839.8564 7852.1421 L
-7840.1162 7852.4604 -7841.1807 7852.5693 -7841.6846 7852.1421 C
-7842.8232 7852.1421 L
-7843.0439 7852.3989 -7843.3174 7852.6382 -7843.6782 7852.8975 C
-7826.0264 7852.8975 L
-7826.0264 7853.3804 L
-7844.8394 7853.3804 L
-7845.1982 7853.5615 -7846.2417 7853.8389 -7847.3774 7853.3804 C
-7857.6406 7853.3804 L
-7857.6406 7863.6494 L
-7857.1826 7864.7861 -7857.4614 7865.8271 -7857.6455 7866.1895 C
-7857.6455 7885 L
-7858.1279 7885 L
-7858.1279 7867.3477 L
-7858.3838 7867.7095 -7858.6235 7867.9824 -7858.8794 7868.2031 C
-7858.8794 7869.3413 L
-7858.4536 7869.8447 -7858.5615 7870.9077 -7858.8794 7871.1685 C
-7858.8794 7875.0352 L
-7858.5698 7875.8076 -7858.5854 7876.6182 -7858.8833 7877.0518 C
-7858.8833 7884.9985 L
-7859.3394 7884.9985 L
-7859.3394 7884.6543 L
-7860.5435 7884.6543 L
-7860.5435 7884.9985 L
-7861.0039 7884.9985 L
-7861.0039 7882.0879 L
-7861.4287 7882.1733 -7862.0186 7881.0894 -7862.3955 7880.7524 C
-7862.3955 7884.9951 L
-7863.1113 7884.9951 L
-7863.1113 7880.2886 L
-7863.5552 7880.0654 -7864.0376 7879.9189 -7864.5298 7879.855 C
-7864.5298 7884.9951 L
-7865.6138 7884.9951 L
-7865.6138 7879.8496 L
-7866.1143 7879.9248 -7866.5767 7880.0854 -7867.0391 7880.29 C
-7867.0391 7884.9951 L
-7868.6958 7884.9951 L
-7868.6958 7881.2031 L
-7869.1362 7881.4824 -7869.5728 7881.7324 -7870.0854 7881.855 C
-7870.0854 7884.9951 L
-7871.1689 7884.9951 L
-7871.1689 7881.9893 L
-7871.5552 7882.1279 -7872.3486 7881.894 -7872.6543 7881.5435 C
-7872.6543 7884.9951 L
-7873.3794 7884.9951 L
-7873.3794 7880.9014 L
-7873.4634 7880.2095 -7873.1382 7879.8447 -7873.0015 7879.7222 C
-7866.3359 7874.6885 -7870.5713 7868.1309 -7874.9658 7864.2959 C
-7874.9658 7867.5244 L
-7874.6919 7867.2344 -7874.48 7866.855 -7874.1558 7865.6255 C
-7874.0127 7866.4414 -7874.4526 7867.4077 -7874.7246 7867.8711 C
-7871.9575 7867.8828 L
-7871.6831 7868.3047 L
-7875.0103 7868.3062 L
-7875.3066 7868.7168 -7875.6455 7869.0845 -7875.98 7869.4512 C
-7870.9951 7869.647 L
-7870.7817 7869.9814 L
-7876.3774 7869.8984 L
-7876.7202 7870.2998 -7877.0361 7870.7261 -7877.2681 7871.231 C
-7870.3535 7871.3926 L
-7870.3169 7871.6108 L
-7877.4546 7871.7222 L
-7877.5742 7872.1094 -7877.6465 7872.5439 -7877.6514 7873.0444 C
-7870.0688 7872.8262 L
-7870.0688 7872.9951 L
-7877.6362 7873.5435 L
-7877.6113 7873.9741 -7877.5615 7874.354 -7877.4888 7874.6895 C
-7870.0142 7874.0781 L
-7869.9995 7874.314 L
-7877.3599 7875.1772 L
-7877.2314 7875.5854 -7877.0654 7875.9165 -7876.8755 7876.1973 C
-7870.2485 7875.7349 L
-7870.3945 7875.9932 L
-7876.5034 7876.6572 L
-7876.0215 7877.1685 -7875.4521 7877.5024 -7874.9238 7877.9336 C
-7870.9946 7877.2134 L
-7871.3135 7877.6768 L
-7874.4878 7878.3345 L
-7873.4409 7879.2373 -7873.4814 7880.9292 -7873.6914 7880.7637 c
-7873.8657 7880.6274 -7873.9985 7879.8271 -7873.9897 7879.8486 c
-7874.2656 7879.2637 -7874.6035 7878.8438 -7874.9697 7878.5024 C
-7874.9697 7885 L
-7875.4536 7885 L
-7875.4536 7878.0854 L
-7876.6582 7877.1372 -7877.9551 7876.5669 -7878.1167 7873.4111 c
-7878.25 7870.8311 -7876.5562 7869.7656 -7875.4497 7868.2871 C
-7875.4497 7863.7437 L
-7876.5767 7862.4185 -7877.5225 7860.9912 -7877.9614 7859.1455 C
-7878.8809 7854.3662 -7875.7568 7848.854 -7870.7959 7848.4863 C
-7870.7183 7848.6133 L
-7875.1494 7849.5352 -7877.8442 7854.6636 -7876.9814 7859.1455 C
-7876.0635 7863.0029 -7872.9395 7865.0229 -7870.5503 7868.147 C
-7868.8975 7870.5356 -7868.3457 7873.1094 -7869.0806 7875.8652 c
-7869.8545 7878.6133 -7872.25 7879.5967 -7872.5649 7880.5303 c
-7872.8506 7881.3755 -7871.6689 7881.6997 -7870.6968 7881.6348 C
-7868.5454 7881.439 -7867.1602 7878.4917 -7863.3184 7879.7559 c
-7862.2222 7880.1157 -7861.5913 7880.9375 -7861.3042 7881.5469 c
-7861.1104 7881.9575 -7859.7241 7881.439 -7860.9165 7879.2207 C
-7863.8774 7879.0879 -7863.4521 7877.0645 -7863.2026 7877.2109 c
-7861.5015 7878.2095 -7860.1826 7876.3047 -7861.1055 7875.2959 c
-7863.2129 7872.9902 -7864.8481 7873.2861 -7866.9248 7869.3174 c
-7869.2095 7864.9517 -7870.2695 7859.0718 -7867.7959 7854.9077 C
-7867.7954 7854.1382 L
-7868.0479 7853.5439 -7868.0249 7853.0854 -7868.2134 7852.1685 c
-7868.3818 7851.3535 -7868.6689 7851.0854 -7868.9575 7850.9116 C
-7869.1304 7850.7964 -7869.5015 7850.9053 -7869.5054 7851.1445 c
-7869.52 7851.7461 -7868.7842 7851.522 -7868.8271 7851.5845 c
-7869.1895 7852.0869 -7869.7329 7851.7295 -7869.8345 7851.3774 c
-7869.9648 7850.9287 -7869.6606 7850.5757 -7869.3145 7850.4902 C
-7868.6655 7850.3589 -7868.1968 7850.9277 -7867.9575 7851.4575 c
-7867.4365 7852.6069 -7867.4746 7854.2524 -7866.2607 7854.8574 c
-7865.4385 7855.2471 -7864.5537 7854.9277 -7863.7271 7854.6328 c
-7860.8296 7853.6016 -7857.3096 7850.0825 -7856.2783 7847.1836 c
-7855.9834 7846.3574 -7855.6641 7845.4727 -7856.0537 7844.6494 c
-7856.6606 7843.4375 -7858.3042 7843.4741 -7859.4546 7842.9541 c
-7859.9834 7842.7148 -7860.5513 7842.2461 -7860.4214 7841.5967 C
-7860.3345 7841.25 -7859.9824 7840.9468 -7859.5327 7841.0757 c
-7859.1826 7841.1797 -7858.8242 7841.7222 -7859.3281 7842.0845 c
-7859.3882 7842.1274 -7859.1655 7841.3901 -7859.7681 7841.4053 c
-7860.0054 7841.4111 -7860.1143 7841.7813 -7859.9995 7841.9541 C
-7859.8257 7842.2422 -7859.5591 7842.5293 -7858.7422 7842.6973 c
-7857.7085 7842.9102 -7857.2578 7842.8535 -7856.5386 7843.2261 C
-7856.1167 7843.2261 L
-7851.9546 7840.7524 -7846.0674 7841.8008 -7841.7095 7844.0972 c
-7841.0527 7844.4551 -7840.4834 7844.8008 -7839.9126 7845.147 c
-7838.5488 7845.9766 -7836.5542 7848.8853 Y
-7836.1782 7849.3325 -7835.9521 7849.7974 -7835.5225 7850.062 c
-7834.3569 7850.7783 -7832.8184 7849.5215 -7833.8154 7847.8188 c
-7833.9614 7847.5703 -7831.9385 7847.1455 -7831.8057 7850.1064 C
-7829.5874 7851.2988 -7829.0698 7849.9116 -7829.4795 7849.7173 c
-7830.0889 7849.4316 -7830.9087 7848.7998 -7831.2705 7847.7036 c
-7832.5342 7843.8623 -7829.3599 7842.0229 -7829.4463 7840.3262 C
-7829.3008 7839.5317 -7829.6514 7838.1719 -7830.4961 7838.4595 c
-7831.4282 7838.7725 -7832.4126 7841.1685 -7835.1606 7841.9414 c
-7837.9175 7842.6768 -7840.4897 7842.1255 -7842.8774 7840.4717 C
-7846.0034 7838.0845 -7848.0234 7834.9595 -7851.8818 7834.0415 C
-7856.3623 7833.1772 -7861.4902 7835.8735 -7862.4126 7840.3037 C
-7862.5391 7840.2261 L
-7862.1729 7835.2656 -7856.6592 7832.1421 -7851.8818 7833.0615 C
-7850.0361 7833.5024 -7848.6104 7834.4453 -7847.2822 7835.5718 C
-7842.7393 7835.5718 L
-7841.2607 7834.4668 -7840.1943 7832.7725 -7837.6143 7832.9053 c
-7834.4585 7833.0664 -7833.8882 7834.3628 -7832.9409 7835.5718 C
-7826.0264 7835.5718 L
-7826.0264 7836.0566 L
f
0 D
-7855.1362 7845.4111 m
-7847.5166 7845.4111 L
-7848.5635 7844.8301 -7849.5435 7844.3184 -7850.8057 7843.9868 C
-7855.6079 7843.9868 L
-7855.2998 7844.3804 -7855.1055 7844.8701 -7855.1362 7845.4111 C
f
-7856.0591 7847.9111 m
-7844.5254 7847.9111 L
-7844.6338 7847.6191 -7845.0063 7846.9404 -7845.8042 7846.4917 C
-7855.4321 7846.4917 L
-7855.6118 7846.9727 -7855.8232 7847.4463 -7856.0591 7847.9111 C
f
-7844.8096 7850.022 m
-7844.3174 7849.439 -7844.2568 7849.2207 -7844.3857 7848.6309 C
-7856.4521 7848.6309 L
-7856.7295 7849.1069 -7857.0322 7849.5718 -7857.3599 7850.022 C
-7849.2568 7850.022 L
-7848.9111 7849.2031 -7848.1665 7849.3711 -7847.8218 7850.022 C
-7844.8096 7850.022 L
f
-7846.1201 7850.4824 m
-7846.1201 7850.8237 L
-7845.5664 7850.7861 -7845.4995 7850.7524 -7845.1982 7850.4824 C
-7846.1201 7850.4824 L
f
-7847.4863 7850.4824 m
-7847.3311 7850.6719 -7847.0264 7850.8149 -7846.8257 7850.8447 C
-7846.8257 7850.4824 L
-7847.4863 7850.4824 L
f
-7850.3535 7850.4824 m
-7850.3535 7851.6821 L
-7849.6465 7851.6821 L
-7849.6465 7850.4824 L
-7850.3535 7850.4824 L
f
-7851.7622 7850.4824 m
-7851.7622 7851.6821 L
-7851.0576 7851.6821 L
-7851.0576 7850.4824 L
-7851.7622 7850.4824 L
f
-7853.1729 7850.4824 m
-7853.1729 7851.6821 L
-7852.4678 7851.6821 L
-7852.4678 7850.4824 L
-7853.1729 7850.4824 L
f
-7854.5835 7850.4824 m
-7854.5835 7851.6821 L
-7853.8774 7851.6821 L
-7853.8774 7850.4824 L
-7854.5835 7850.4824 L
f
-7855.9946 7850.4824 m
-7855.9946 7851.6821 L
-7855.2886 7851.6821 L
-7855.2886 7850.4824 L
-7855.9946 7850.4824 L
f
-7861 7861.7695 m
-7861 7853.6504 L
-7861.4497 7853.9756 -7861.9146 7854.2749 -7862.3911 7854.5439 C
-7862.3911 7866.6406 L
-7861.8018 7866.7695 -7861.5825 7866.7095 -7861 7866.2158 C
-7861 7863.2031 L
-7861.6514 7862.8613 -7861.8169 7862.1152 -7861 7861.7695 C
f
-7860.5391 7861.3799 m
-7859.3394 7861.3799 L
-7859.3394 7860.6748 L
-7860.5391 7860.6748 L
-7860.5391 7861.3799 L
f
-7859.3394 7859.9688 m
-7859.3394 7859.2637 L
-7860.5391 7859.2637 L
-7860.5391 7859.9688 L
-7859.3394 7859.9688 L
f
-7859.3394 7858.5581 m
-7859.3394 7857.8535 L
-7860.5391 7857.8535 L
-7860.5391 7858.5581 L
-7859.3394 7858.5581 L
f
-7859.3394 7857.1484 m
-7859.3394 7856.4429 L
-7860.5391 7856.4429 L
-7860.5391 7857.1484 L
-7859.3394 7857.1484 L
f
-7859.3394 7855.7373 m
-7859.3394 7855.0303 L
-7860.5391 7855.0303 L
-7860.5391 7855.7373 L
-7859.3394 7855.7373 L
f
-7859.3394 7854.3262 m
-7859.3394 7853.6191 L
-7860.5391 7853.6191 L
-7860.5391 7854.3262 L
-7859.3394 7854.3262 L
f
-7859.3394 7852.9185 m
-7859.3394 7852.2725 L
-7859.5728 7852.4941 -7859.8135 7852.7095 -7860.0591 7852.9185 C
-7859.3394 7852.9185 L
f
-7857.4058 7851.6821 m
-7856.6992 7851.6821 L
-7856.6992 7850.4824 L
-7857.4058 7850.4824 L
-7857.4058 7851.6821 L
f
-7858.7495 7851.6821 m
-7858.1094 7851.6821 L
-7858.1094 7850.9741 L
-7858.3159 7851.2158 -7858.5288 7851.4517 -7858.7495 7851.6821 C
f
-7864.5298 7855.5269 m
-7864.5298 7865.2222 L
-7864.0815 7866.0181 -7863.4014 7866.3926 -7863.1113 7866.5024 C
-7863.1113 7854.9253 L
-7863.5762 7855.1558 -7864.0488 7855.3564 -7864.5298 7855.5269 C
f
-7867.0352 7855.2095 m
-7867.0352 7860.2207 L
-7866.7041 7861.4844 -7866.1929 7862.4629 -7865.6094 7863.5093 C
-7865.6094 7855.7725 L
-7866.1606 7855.77 -7866.6494 7855.5439 -7867.0352 7855.2095 C
f
-7859.3394 7883.2437 m
-7860.5391 7883.2437 L
-7860.5391 7883.9478 L
-7859.3394 7883.9478 L
-7859.3394 7883.2437 L
f
-7859.3394 7881.8345 m
-7860.3896 7881.8345 L
-7860.4375 7881.8838 -7860.4878 7881.9292 -7860.5391 7881.9678 C
-7860.5391 7882.5381 L
-7859.3394 7882.5381 L
-7859.3394 7881.8345 L
f
-7859.3394 7880.4204 m
-7860.0039 7880.4204 L
-7859.9702 7880.647 -7859.9595 7880.9116 -7860.0137 7881.1279 C
-7859.3394 7881.1279 L
-7859.3394 7880.4204 L
f
-7859.3394 7879.0117 m
-7860.5015 7879.0117 L
-7860.3872 7879.2461 -7860.2798 7879.4814 -7860.1919 7879.7168 C
-7859.3394 7879.7168 L
-7859.3394 7879.0117 L
f
-7859.3394 7877.9023 m
-7859.4614 7878.062 -7859.5938 7878.2197 -7859.6753 7878.3062 C
-7859.3394 7878.3062 L
-7859.3394 7877.9023 L
f
-7859.4399 7862.439 m
-7859.6968 7862.2886 -7861.0845 7861.8135 -7861.0737 7862.5381 c
-7861.0674 7862.9502 -7860.4512 7863.2412 -7860.2495 7863.4463 c
-7859.6338 7864.0703 -7859.1885 7865.5254 -7860.2974 7866.4238 c
-7862.6328 7868.314 -7864.1865 7866.5879 Y
-7868.1118 7862.7324 -7868.1104 7857.1104 Y
-7869.2295 7861.3345 -7867.9663 7866.3936 -7866.4048 7869.1421 c
-7863.8818 7873.5845 -7862.9575 7872.0566 -7860.6113 7874.9478 c
-7859.8047 7875.9429 -7860.1294 7878.3813 -7862.9546 7877.75 c
-7863.2026 7877.6934 -7862.7759 7878.2949 -7862.2681 7878.5493 c
-7860.1104 7879.6406 -7858.8618 7877.1631 -7859.1338 7875.8589 c
-7859.4761 7874.2109 -7860.0986 7873.3662 -7862.1616 7872.2246 C
-7861.8311 7872.2373 -7860.2134 7872.5415 -7859.2295 7871.0088 c
-7859.0195 7870.6821 -7858.8745 7869.7573 -7859.3042 7869.8774 c
-7859.3906 7869.9023 -7859.6416 7870.1973 -7859.9414 7870.3613 c
-7861.9321 7871.394 -7862.7075 7869.0127 Y
-7860.4165 7868.8413 -7859.7515 7868.7637 -7858.2559 7866.7637 c
-7858.0542 7866.4941 -7857.1162 7863.8047 -7859.4399 7862.439 c
f
-7860.5391 7869.1367 m
-7860.5391 7870.022 L
-7860.2993 7869.9985 -7859.9302 7869.9575 -7859.3394 7869.4028 C
-7859.3394 7869.1367 L
-7860.5391 7869.1367 L
f
-7861.9946 7869.23 m
-7861.8042 7869.7031 -7861.4185 7869.9468 -7861 7870.0127 C
-7861 7869.1709 L
-7861.3857 7869.2349 -7861.9946 7869.23 Y
f
-7859.3394 7872.6665 m
-7859.3394 7871.9595 L
-7859.6382 7871.9595 L
-7859.9136 7872.147 -7860.2246 7872.2935 -7860.5391 7872.3813 C
-7860.5391 7872.6665 L
-7859.3394 7872.6665 L
f
-7859.9897 7873.3677 m
-7859.7935 7873.5342 -7859.5576 7873.7813 -7859.3394 7874.1084 C
-7859.3394 7873.3677 L
-7859.9897 7873.3677 L
f
-7861.2495 7872.4741 m
-7861.1914 7872.5269 -7861.1025 7872.5967 -7861 7872.6719 C
-7861 7872.4668 L
-7861.0835 7872.4741 -7861.1675 7872.478 -7861.2495 7872.4741 C
f
-7860.5391 7864.9063 m
-7860.5391 7865.8262 L
-7860.2715 7865.5269 -7860.2358 7865.46 -7860.1982 7864.9063 C
-7860.5391 7864.9063 L
f
-7860.1758 7864.2012 m
-7860.2065 7864.0024 -7860.3506 7863.6943 -7860.5391 7863.54 C
-7860.5391 7864.2012 L
-7860.1758 7864.2012 L
f
-7848.1865 7852.8975 m
-7848.4233 7852.6943 -7848.6401 7852.4463 -7848.8271 7852.1421 C
-7858.8794 7852.1421 L
-7858.8794 7862.1992 L
-7858.5762 7862.3853 -7858.3271 7862.6021 -7858.1255 7862.8408 C
-7858.1265 7852.8975 L
-7848.1865 7852.8975 L
f
-7841.6226 7851.6821 m
-7841.0698 7851.0928 -7841.0298 7850.7222 -7841.0034 7850.4824 C
-7841.8887 7850.4824 L
-7841.8887 7851.6821 L
-7841.6226 7851.6821 L
f
-7841.8564 7850.022 m
-7841.0127 7850.022 L
-7841.0791 7849.6045 -7841.3232 7849.2192 -7841.7959 7849.0269 C
-7841.7915 7849.6367 -7841.8564 7850.022 V
f
-7838.3623 7850.4824 m
-7838.6455 7850.4824 L
-7838.7334 7850.7974 -7838.8799 7851.1084 -7839.0674 7851.3838 C
-7839.0674 7851.6821 L
-7838.3623 7851.6821 L
-7838.3623 7850.4824 L
f
-7838.3545 7850.022 m
-7838.4302 7849.9199 -7838.4995 7849.8311 -7838.5518 7849.7734 C
-7838.5479 7849.855 -7838.5518 7849.939 -7838.5601 7850.022 C
-7838.3545 7850.022 L
f
-7836.9185 7851.6821 m
-7837.2446 7851.4648 -7837.4912 7851.23 -7837.6577 7851.0332 C
-7837.6577 7851.6821 L
-7836.9185 7851.6821 L
f
-7832.7202 7851.3477 m
-7832.8066 7851.4287 -7832.9639 7851.5615 -7833.1226 7851.6821 C
-7832.7202 7851.6821 L
-7832.7202 7851.3477 L
f
-7832.4751 7848.7549 m
-7832.7329 7848.2461 -7833.0913 7847.894 -7833.2778 7848.0684 c
-7833.4248 7848.2031 -7832.4424 7849.9429 -7833.9009 7850.7725 c
-7834.7158 7851.2349 -7835.8721 7850.8735 -7836.2842 7850.3062 c
-7838.5615 7847.1836 -7838.4746 7846.5581 -7841.8848 7844.6172 c
-7844.6318 7843.0527 -7849.6943 7841.7935 -7853.9155 7842.9116 C
-7848.2935 7842.9102 -7844.4385 7846.8359 V
-7842.7119 7848.3901 -7844.6025 7850.7246 v
-7845.5015 7851.8345 -7846.9551 7851.3887 -7847.5791 7850.7734 c
-7847.7842 7850.5703 -7848.0752 7849.9551 -7848.4873 7849.9478 c
-7849.2134 7849.938 -7848.7378 7851.3237 -7848.5874 7851.5825 c
-7847.2217 7853.9063 -7844.5322 7852.9678 -7844.2622 7852.7656 c
-7842.2622 7851.27 -7842.1846 7850.6064 -7842.0127 7848.314 C
-7839.6328 7849.0894 -7840.6655 7851.0796 v
-7840.8286 7851.3804 -7841.1245 7851.6318 -7841.1489 7851.7173 c
-7841.2695 7852.147 -7840.3423 7852.0029 -7840.0176 7851.7949 c
-7838.4858 7850.8086 -7838.7881 7849.1909 -7838.8018 7848.8613 C
-7837.6602 7850.9248 -7836.8154 7851.5469 -7835.1675 7851.8887 c
-7833.8633 7852.1597 -7831.3857 7850.9116 -7832.4751 7848.7549 c
f
-7831.3096 7850.8301 m
-7831.5454 7850.7422 -7831.7817 7850.6357 -7832.0142 7850.5215 C
-7832.0142 7851.6821 L
-7831.3096 7851.6821 L
-7831.3096 7850.8301 L
f
-7829.8994 7851.0088 m
-7830.1143 7851.062 -7830.3794 7851.0518 -7830.6055 7851.0181 C
-7830.6055 7851.6821 L
-7829.8994 7851.6821 L
-7829.8994 7851.0088 L
f
-7827.7822 7851.6821 m
-7827.0767 7851.6821 L
-7827.0767 7850.4824 L
-7827.7822 7850.4824 L
-7827.7822 7851.6821 L
f
-7829.1934 7851.6821 m
-7828.4878 7851.6821 L
-7828.4878 7850.4824 L
-7829.0586 7850.4824 L
-7829.0967 7850.5342 -7829.1426 7850.5854 -7829.1934 7850.6328 C
-7829.1934 7851.6821 L
f
*U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed 3)0 A
u
u
0 J 0 j 1 w 4 M []0 d0 XR
-4012.5 4012.2913 m
-3913.5696 4012.2913 L
-3913.5696 3995.927 L
-4012.5 3995.927 L
-4012.5 4012.2913 L
n
u
u
0 O
0 0 0 1 k
-3916.0071 4001.6096 m
-3915.7832 4001.5535 -3915.5879 4001.8643 -3915.6721 4002.0039 C
-3915.2161 4001.6272 -3915.2063 4002.0552 -3915.1472 4001.3264 C
-3914.8545 4000.9683 -3914.5422 4001.4639 -3914.8752 4001.76 C
-3914.0313 4001.3135 L
-3914.5359 4001.1995 L
-3914.3984 4000.593 -3913.7295 4001.3806 -3913.5696 4000.6743 C
-3914.4832 4000.7334 L
-3914.4375 4000.531 L
-3914.6455 4000.7493 -3915.0496 4000.6582 -3915.1904 4000.573 C
-3915.1682 4000.4734 -3915.1824 4000.3115 -3915.0212 4000.2935 C
-3916.1243 4000.2471 -3915.3184 4001.3542 -3916.2336 4001.5552 C
-3916.1763 4001.5413 -3916.1052 4001.5491 -3916.0071 4001.6096 C
f
-3916.9441 4000.1252 m
-3917.3289 4000.885 L
-3917.9744 4000.6895 L
-3917.9817 4000.9512 -3918.4519 4001.1638 -3918.1335 4001.3955 C
-3918.0713 4001.3542 -3917.9482 4001.2759 -3917.8489 4001.2998 C
-3917.9209 4001.8672 -3918.7073 4001.5833 -3918.5176 4002.157 C
-3918.0071 4002.0063 -3917.9287 4002.1318 -3917.6145 4001.6707 C
-3917.1465 4001.7231 -3916.8057 4001.8542 -3916.5872 4002.0615 C
-3916.4482 4001.9751 -3916.4287 4001.6272 -3916.2522 4001.5576 C
-3916.2913 4001.5664 -3916.3271 4001.5752 -3916.3721 4001.5796 C
-3916.3911 4000.7256 L
-3916.5383 4000.9063 -3916.6775 4000.821 -3916.8408 4000.8384 C
-3916.0852 3999.8423 L
-3916.3289 3999.0435 -3917.0713 3999.5127 -3917.3679 3999.1807 C
-3917 3999.8982 -3917.6609 3999.5376 -3916.9441 4000.1252 C
f
-3916.2522 4001.5576 m
-3916.2473 4001.5576 -3916.2393 4001.5566 -3916.2336 4001.5552 C
-3916.2393 4001.5566 -3916.2473 4001.5566 -3916.2522 4001.5576 C
f
-3972.7073 4006.5222 m
-3972.8679 4006.5376 -3972.9153 4006.739 -3972.9385 4006.8408 C
-3971.1296 4006.8247 L
-3971.1863 4006.6006 -3971.7073 4006.323 -3971.3591 4006.1895 C
-3971.5144 4005.9414 -3971.9873 4006.1531 -3972.0559 4006.4558 C
-3971.9248 4006.1143 L
-3972.3416 4006.552 -3972.6262 4005.6919 -3972.3545 4005.4336 C
-3972.3896 4005.4382 L
-3973.5439 4007.1233 L
-3973.1201 4007.2212 -3973.2175 4006.5435 -3972.7073 4006.5222 C
f
-4009.8567 4005.6653 m
-4009.6223 4005.5867 -4009.5935 4005.5059 -4009.6201 4005.4224 C
-4009.7041 4005.4856 -4009.7839 4005.5576 -4009.8567 4005.6653 C
f
-3973.8137 4007.5176 m
-3974.1753 4008.0454 L
-3974.0305 4007.9031 -3973.9033 4007.7139 -3973.8137 4007.5176 C
f
-3971.3088 3999.4993 m
-3971.3081 3999.4712 -3971.3042 3999.4463 -3971.3137 3999.4087 C
-3971.4761 3999.6782 L
-3971.4736 3999.6782 -3971.4729 3999.6782 -3971.4719 3999.6782 C
-3971.4121 3999.6187 -3971.3584 3999.5591 -3971.3088 3999.4993 C
f
-3982.0212 4009.4993 m
-3982.0601 4009.5127 -3982.0935 4009.5176 -3982.1399 4009.5352 C
-3982.0967 4009.531 -3982.0576 4009.5176 -3982.0212 4009.4993 C
f
-3966.4087 3996.4856 m
-3967.2129 3996.9927 L
-3967.1057 3996.7522 -3967.4937 3996.8247 -3967.3242 3996.5447 C
-3967.3855 3996.5833 -3967.6729 3996.6782 -3967.5945 3996.801 C
-3967.4304 3996.7854 L
-3967.8545 3997.4856 -3967.5977 3997.7544 -3968.3008 3998.2871 C
-3967.8643 3998.7014 -3967.6729 3998.3223 -3967.4417 3998.0039 C
-3967.3633 3997.9551 -3967.2976 3997.9336 -3967.2312 3997.907 C
-3966.5625 3996.9292 L
-3966.4087 3996.4856 L
f
-3998.6504 4001.6936 m
-3998.6416 4001.6392 L
-3998.6497 4001.6582 -3998.6511 4001.6763 -3998.6504 4001.6936 C
f
-3998.6064 4001.4153 m
-3998.6416 4001.6392 L
-3998.5984 4001.5264 -3998.4329 4001.4199 -3998.6064 4001.4153 C
f
-3973.6809 4007.0654 m
-3973.6919 4007.1951 -3973.7383 4007.3542 -3973.8137 4007.5176 C
-3973.5439 4007.1233 L
-3973.5823 4007.115 -3973.6328 4007.0879 -3973.6809 4007.0654 C
f
-3973.0671 4005.5376 m
-3972.3896 4005.4382 L
-3972.1399 4005.0752 L
-3972.3992 4005.2124 -3972.7024 4005.3064 -3973.0671 4005.5376 C
f
-3980.9512 4009.9104 m
-3982.3545 4010.0176 -3980.6064 4009.0867 -3981.2512 4008.8887 C
-3981.6409 4008.9856 -3981.7783 4009.3762 -3982.0212 4009.4993 C
-3980.9082 4009.1653 -3982.1721 4010.7854 -3981.0496 4010.5791 C
-3981.2092 4011.2854 -3981.8591 4011.3496 -3982.24 4011.1582 C
-3982.6711 4010.4771 -3981.8633 4010.6592 -3981.7656 4009.9912 C
-3982.2161 4010.1016 -3982.1367 4010.2256 -3982.3279 4010.6062 C
-3983.0352 4010.448 -3983.7913 4011.4424 -3984.2136 4010.4993 C
-3984.7256 4010.6494 -3984.6919 4010.9751 -3984.9863 4011.3342 C
-3985.0449 4012.0632 -3984.2249 4011.7168 -3984.0352 4012.2913 C
-3984.0745 4012.2295 -3984.1511 4012.1062 -3984.1289 4012.0039 C
-3983.6863 4012.157 L
-3984.1064 4011.9031 -3983.6279 4011.4287 -3983.4033 4011.3716 C
-3983.24 4011.3562 -3982.9153 4011.323 -3982.96 4011.5254 C
-3983.2073 4011.6814 L
-3982.8889 4011.9126 -3982.5049 4011.1504 -3982.1687 4011.5454 C
-3982.1511 4011.7092 -3982.2783 4011.7854 -3982.2976 4011.8875 C
-3981.9209 4011.3894 -3981.5576 4011.4182 -3981 4011.0664 C
-3981.3232 4011.7896 L
-3980.8772 4010.989 -3979.8672 4011.2168 -3979.1672 4011.6392 C
-3979.2449 4011.5166 -3979.3848 4011.4307 -3979.3008 4011.2913 C
-3978.8896 4011.1184 -3978.5791 4011.6143 -3978.7695 4011.9951 C
-3978.3679 4011.3955 -3977.2393 4012.5 -3976.6919 4011.7207 C
-3974.1753 4008.0454 L
-3974.2695 4008.1375 -3974.3704 4008.2124 -3974.4744 4008.2432 C
-3974.7031 4007.6096 -3974.8264 4007.6863 -3974.4255 4007.0879 C
-3974.8191 4007.4238 -3974.6687 4007.9336 -3975.26 4007.96 C
-3975.0281 4007.6406 -3974.9695 4006.9119 -3975.5359 4006.8367 C
-3976.9519 4007.4712 -3977.8904 4009.2759 -3979.2129 4010.1982 C
-3979.2617 4009.7092 -3980.3 4009.8462 -3980.8047 4009.7312 C
-3980.6121 4009.2056 -3980.2375 4009.0566 -3979.8489 4008.9502 C
-3980.0928 4008.9172 -3980.5127 4008.9031 -3980.8242 4008.8799 C
-3980.9512 4009.9104 L
f
-3977.6631 4008.2659 m
-3977.6985 4008.2227 -3977.7351 4008.1982 -3977.7727 4008.175 C
-3977.7527 4008.2158 -3977.72 4008.2471 -3977.6631 4008.2659 C
f
-3979.7305 4008.9646 m
-3979.7256 4008.947 -3979.7273 4008.9326 -3979.7256 4008.9126 C
-3979.7664 4008.9238 -3979.8071 4008.9382 -3979.8489 4008.9502 C
-3979.8071 4008.9539 -3979.76 4008.96 -3979.7305 4008.9646 C
f
-3974.0127 4005.96 m
-3973.9287 4005.821 -3973.8665 4005.7822 -3973.7825 4005.6416 C
-3973.8342 4005.6895 -3973.8992 4005.7271 -3973.9617 4005.7695 C
-3974.0212 4005.8352 -3974.0496 4005.9016 -3974.0127 4005.96 C
f
-3973.7295 4006.821 m
-3973.7744 4007.0222 L
-3973.7383 4007.0447 -3973.7129 4007.0491 -3973.6809 4007.0654 C
-3973.6711 4006.9573 -3973.6816 4006.8662 -3973.7295 4006.821 C
f
-3986.3137 4005.4871 m
-3986.4482 4005.593 L
-3986.3672 4005.5854 -3986.3323 4005.5422 -3986.3137 4005.4871 C
f
-3982.5144 4009.0796 m
-3982.0264 4009.031 -3982.4561 4008.3496 -3981.7656 4008.3462 C
-3981.9683 4008.301 L
-3981.4729 4007.989 -3980.6023 4008.1328 -3980.0137 4008.1062 C
-3980.0801 4008.3982 -3979.6567 4008.46 -3979.7256 4008.9126 C
-3979.3232 4008.8064 -3978.9248 4008.7056 -3978.7175 4008.239 C
-3978.4683 4008.3926 -3978.0896 4007.9822 -3977.7727 4008.175 C
-3977.9065 4007.9019 -3977.3215 4007.2515 -3978.0928 4007.5854 C
-3978.0305 4007.5479 -3978.0696 4007.4856 -3978.0081 4007.447 C
-3978.5049 4007.0664 -3978.7041 4007.7124 -3979.1321 4007.7212 C
-3979.3879 4007.4512 -3978.7136 4007.2854 -3978.9551 4007.1782 C
-3979.4895 4007.4292 -3980.6321 4006.8535 -3980.5967 4007.8672 C
-3980.9856 4007.9395 -3981.0393 4007.7158 -3981.1553 4007.5303 C
-3981.7705 4008.6104 -3983.4385 4007.0664 -3983.4329 4008.448 C
-3983.2083 4008.3936 -3982.8423 4008.4224 -3982.5127 4008.1272 C
-3982.5144 4009.0796 L
f
-3974.8323 4006.031 m
-3974.8623 4006.0254 -3974.9023 4006.0303 -3974.9272 4006.0176 C
-3974.8992 4006.0254 -3974.8643 4006.0303 -3974.8323 4006.031 C
f
*u
1 D
-3968.6736 4010.0352 m
-3968.8777 4010.9395 L
-3970.0398 4011.155 -3970.46 4010.9016 -3971.4761 4010.9375 C
-3971.5537 4010.8135 -3971.4304 4010.7344 -3971.3679 4010.6951 C
-3972.0823 4010.7998 -3973.1511 4010.6104 -3973.6711 4011.0254 C
-3973.8984 4011.0176 -3974.4951 4010.7312 -3974.2693 4010.4646 C
-3974.3799 4010.5454 -3974.5063 4010.6233 -3974.6335 4010.5942 C
-3974.6672 4010.2695 -3974.3489 4010.5015 -3974.3416 4010.2344 C
-3974.4424 4010.2134 -3974.4817 4010.1504 -3974.5049 4010.2522 C
-3974.3352 4009.9734 -3974.6809 4009.1504 -3973.8896 4009.1719 C
-3973.5833 4009.9307 -3974.4385 4009.26 -3974.2576 4010.0967 C
-3973.9951 4010.1016 -3974.0256 4009.7783 -3974.0032 4009.6763 C
-3973.6687 4009.6951 -3973.6775 4009.905 -3973.6953 4010.0967 C
-3973.5671 4009.8367 -3973.1465 4010.1982 -3972.9695 4009.8035 C
-3972.3191 4009.739 -3973.0049 4010.4326 -3972.5801 4010.4224 C
-3972.3352 4009.5752 L
-3971.6289 4009.7344 L
-3970.6064 4009.4375 -3971.7751 4008.2703 -3970.6064 4007.7913 C
-3970.76 4008.2334 -3970.2913 4008.9768 -3969.7473 4009.1531 C
-3970.0728 4009.1848 -3970.6743 4009.7371 -3971.0945 4009.4856 C
-3970.5022 4010.1494 -3971.9097 4009.5654 -3971.6023 4010.3252 C
-3971.3096 4009.9646 -3970.8215 4009.9172 -3970.4409 4010.1104 C
-3970.5657 4010.1895 L
-3970.1609 4010.2791 -3969.8545 4009.3926 -3969.2959 4009.7312 C
-3969.0183 4009.7039 -3969.0703 4009.9424 -3969.1191 4010.1416 C
-3968.8843 4010.0144 -3968.6743 4009.8486 -3968.6736 4010.0352 C
f
0 D
-3969.2783 4010.2134 m
-3969.6497 4010.1294 L
-3969.5615 4010.2695 -3969.4231 4010.2646 -3969.2783 4010.2134 C
f
*U
-3922.1377 4000.2344 m
-3922.1008 4000.2571 -3922.0583 4000.2803 -3922.0249 4000.3035 C
-3922.0496 4000.2646 -3922.0923 4000.2471 -3922.1377 4000.2344 C
f
-3955.0967 3999.9104 m
-3954.8816 3999.9382 L
-3954.9656 3999.9092 -3955.0344 3999.905 -3955.0967 3999.9104 C
f
-3950.2693 3997.1104 m
-3949.9551 3996.9126 L
-3950.0791 3996.925 -3950.1763 3997.0039 -3950.2693 3997.1104 C
f
-3924.7024 4000.1768 m
-3924.7129 4000.1707 L
-3924.7305 4000.1848 -3924.7439 4000.2039 -3924.7625 4000.2158 C
-3924.7024 4000.1768 L
f
-3940.5872 3999.093 m
-3940.5393 3999.1653 -3940.4856 3999.23 -3940.4121 3999.2803 C
-3940.4209 3999.1963 -3940.4863 3999.135 -3940.5872 3999.093 C
f
-3950.3271 3997.1475 m
-3950.3191 3997.155 -3950.3145 3997.157 -3950.3081 3997.1631 C
-3950.2959 3997.1455 -3950.2825 3997.1262 -3950.2693 3997.1104 C
-3950.3271 3997.1475 L
f
-3957.2231 3997.4382 m
-3957.2693 3997.4646 -3957.3113 3997.4856 -3957.3608 3997.5222 C
-3957.2959 3997.5059 -3957.2561 3997.4739 -3957.2231 3997.4382 C
f
-3956.9199 3999.8408 m
-3956.9695 3999.8623 -3957.0168 3999.8887 -3957.0537 3999.925 C
-3956.9199 3999.8408 L
f
-3964.3577 3998.1936 m
-3964.6472 3998.3142 L
-3964.5049 3998.301 -3964.4199 3998.2544 -3964.3577 3998.1936 C
f
-3957.6863 3999.2854 m
-3957.7031 3999.3252 -3957.72 3999.363 -3957.7312 3999.4016 C
-3957.6912 3999.3752 -3957.6721 3999.3252 -3957.6863 3999.2854 C
f
-3920.2976 4002.7615 m
-3920.3042 4002.7615 -3920.3113 4002.7646 -3920.3152 4002.7646 C
-3920.3225 4002.863 L
-3920.2976 4002.7615 L
f
-3919.5935 4001.5264 m
-3919.5105 4001.5015 -3919.4241 4001.4792 -3919.3391 4001.4573 C
-3919.4336 4001.4512 -3919.5256 4001.4783 -3919.5935 4001.5264 C
f
-3936.3809 4000.4573 m
-3936.3042 4000.5796 -3936.1243 4000.7256 -3936.2083 4000.8662 C
-3936.0615 4000.6895 -3936.0713 4000.2603 -3936.3809 4000.4573 C
f
-3921.7092 4008.0664 m
-3921.6631 4007.9512 -3921.6057 4007.8643 -3921.5481 4007.7783 C
-3921.6553 4007.9019 -3921.7493 4008.0039 -3921.7092 4008.0664 C
f
-3921.5481 4007.7783 m
-3921.4951 4007.717 -3921.4385 4007.6531 -3921.3911 4007.5867 C
-3921.4463 4007.6416 -3921.4993 4007.7056 -3921.5481 4007.7783 C
f
-3938.3313 4007.4912 m
-3938.3503 4007.4336 -3938.3799 4007.385 -3938.4199 4007.3699 C
-3938.4082 4007.4856 -3938.3762 4007.5103 -3938.3313 4007.4912 C
f
-3919.1335 4001.5928 m
-3919.0879 4001.3911 -3917.9817 4000.9512 -3918.9121 4000.8486 C
-3918.8762 4000.219 -3918.3152 4000.5576 -3918.0671 4000.4019 C
-3918.2473 4000.2544 -3917.9775 3999.9983 -3918.0322 3999.7734 C
-3918.1553 3999.8496 -3918.3015 4000.0303 -3918.5049 3999.9856 C
-3918.5984 3999.6982 -3918.2898 3999.5022 -3918.0488 3999.6104 C
-3918.3457 3999.2783 -3917.6721 3999.1118 -3918.0923 3998.8574 C
-3918.9905 3999.0791 -3919.6252 3999.3076 -3920.2568 4000.2256 C
-3919.7449 4000.0752 -3919.1721 3999.8875 -3918.7522 4000.1406 C
-3918.9287 4000.6848 L
-3919.4033 4000.2056 -3919.6963 4000.5632 -3920.1631 4000.5127 C
-3919.1145 4000.801 L
-3918.6233 4001.2544 -3918.9519 4001.3584 -3919.3391 4001.4573 C
-3919.2439 4001.4639 -3919.1577 4001.4966 -3919.1335 4001.5928 C
f
-3919.8401 4006.3662 m
-3919.8225 4006.3806 L
-3919.8071 4006.3623 -3919.7881 4006.3496 -3919.7783 4006.3267 C
-3919.8401 4006.3662 L
f
-3964.3042 4009.2014 m
-3964.3943 4009.4075 L
-3964.3191 4009.3142 -3964.2959 4009.2515 -3964.3042 4009.2014 C
f
-3920.4656 4003.7312 m
-3920.4648 4003.7312 L
-3920.4719 4003.7371 -3920.4736 4003.7371 -3920.4656 4003.7312 C
f
-3962.0632 4009.2432 m
-3962.0664 4009.2583 -3962.0696 4009.2744 -3962.0752 4009.2913 C
-3962.0671 4009.2744 -3962.0671 4009.2583 -3962.0632 4009.2432 C
f
-3961.4641 3997.5144 m
-3961.4683 3997.489 -3961.4695 3997.4646 -3961.4792 3997.4399 C
-3961.5271 3997.4712 -3961.5039 3997.4966 -3961.4641 3997.5144 C
f
-3962.0615 4009.1936 m
-3962.0615 4009.21 -3962.0601 4009.2256 -3962.0632 4009.2432 C
-3962.0615 4009.2256 -3962.0576 4009.2092 -3962.0615 4009.1936 C
f
-3951.1641 4007.1963 m
-3951.1985 4007.1016 -3951.2527 4007.0127 V
-3951.2737 4007.0632 -3951.2527 4007.1216 -3951.1641 4007.1963 C
f
-3953.3152 4006.3911 m
-3953.3152 4006.3911 L
-3953.3289 4006.3711 -3953.3369 4006.3535 -3953.3545 4006.3311 C
-3953.3152 4006.3911 L
f
-3936.8896 3998.0063 m
-3936.9961 3997.9993 -3937.0759 3998.0127 -3937.1433 3998.0352 C
-3937.0657 3998.0491 -3936.9817 3998.0479 -3936.8896 3998.0063 C
f
-3962.0752 4009.2913 m
-3962.0977 4009.3486 -3962.1296 4009.4075 -3962.1824 4009.4814 c
-3962.1243 4009.4031 -3962.0935 4009.343 -3962.0752 4009.2913 C
f
-3947.8843 4004.448 m
-3947.9072 4004.469 -3947.9287 4004.489 -3947.9504 4004.5078 C
-3947.9373 4004.5176 -3947.9241 4004.5222 -3947.9111 4004.5352 C
-3947.8843 4004.448 L
f
-3946.7617 4004.8486 m
-3946.8 4004.9104 -3946.8176 4004.9739 -3946.8391 4005.0303 C
-3946.4385 4004.8035 -3945.7024 4005.0491 -3945.6152 4004.4712 C
-3945.7512 4004.4856 -3946.4561 4004.1455 -3946.3359 4003.8064 C
-3946.6152 4003.9512 -3947.0281 4003.5454 -3947.1785 4003.6406 C
-3946.72 4003.9573 -3947.1289 4004.1287 -3947.4385 4004.323 C
-3947.72 4004.155 -3947.3855 4003.8584 -3947.6279 4003.7515 C
-3948.2793 4003.8142 L
-3947.7119 4003.8916 L
-3947.8843 4004.448 L
-3947.8633 4004.4292 -3947.8489 4004.4172 -3947.8264 4004.3955 C
-3946.8665 4004.135 -3947.7449 4005.21 -3946.7617 4004.8486 C
f
-3946.8391 4005.0303 m
-3946.8992 4005.0654 -3946.9519 4005.1079 -3946.9929 4005.1672 C
-3946.9023 4005.1582 -3946.8672 4005.1016 -3946.8391 4005.0303 C
f
-3942.9172 4005.948 m
-3942.8679 4005.9292 -3942.8145 4005.9031 -3942.7473 4005.8599 c
-3942.7793 4005.8806 -3942.8535 4005.9075 -3942.9172 4005.948 C
f
-3971.6584 4005.1672 m
-3971.6416 4005.3311 -3971.0823 4005.6682 -3971.0923 4005.2407 C
-3971.0923 4005.2407 L
-3971.2583 4005.1982 -3971.4255 4005.1531 -3971.5935 4005.1062 C
-3971.6584 4005.1672 L
f
-3932.2336 4003.46 m
-3932.2959 4003.448 -3932.3584 4003.4424 -3932.4209 4003.4502 C
-3932.4343 4003.4712 -3932.4473 4003.4951 -3932.4573 4003.5166 C
-3932.4192 4003.5796 -3932.2959 4003.5015 -3932.2336 4003.46 C
f
-3946.1631 4003.6052 m
-3946.2656 4003.6707 -3946.3113 4003.7383 -3946.3359 4003.8064 C
-3946.2695 4003.7722 -3946.2083 4003.717 -3946.1631 4003.6052 C
f
-3932.1985 4004.4783 m
-3932.1191 4004.6006 -3932.0022 4004.7871 -3931.9856 4004.9502 C
-3931.8232 4004.9539 -3931.7092 4004.7295 -3931.5439 4004.6494 C
-3931.7305 4004.7119 -3931.9463 4004.6682 -3932.1985 4004.4783 C
f
-3931.5305 4004.6416 m
-3931.5352 4004.6455 -3931.5398 4004.6475 -3931.5439 4004.6494 C
-3931.5393 4004.6494 -3931.5352 4004.6443 -3931.5305 4004.6416 C
f
*u
1 D
-3971.9912 4004.9856 m
-3972.0393 4005.0176 -3972.0889 4005.0479 -3972.1399 4005.0752 C
-3972.0625 4004.96 L
-3972.1912 4004.9182 -3972.3191 4004.8774 -3972.4473 4004.8311 C
-3972.4937 4004.8584 -3972.5439 4004.8843 -3972.6057 4004.8982 C
-3972.5808 4004.8843 -3972.5615 4004.8384 -3972.5496 4004.7922 C
-3972.5913 4004.7764 -3972.6321 4004.759 -3972.6729 4004.7422 C
-3972.9792 4005.1851 -3973.7417 4005.5088 -3973.9617 4005.7695 C
-3974.2527 4005.9592 -3974.6089 4006.0664 -3974.8323 4006.031 C
-3974.6252 4006.0413 -3974.3503 4005.9512 -3974.4329 4005.7073 C
-3974.8533 4005.4512 -3975.0576 4004.717 -3975.7832 4005.3486 C
-3975.3577 4005.3384 L
-3976.3145 4006.2896 L
-3976.6497 4005.8955 -3975.8369 4005.8142 -3975.7041 4005.4727 C
-3976.4482 4005.9414 -3977.0671 4004.6895 -3977.4121 4005.5127 C
-3977.4607 4005.0244 -3977.5422 4004.21 -3978.0305 4004.2583 C
-3977.6785 4004.8142 -3978.3232 4004.6155 -3978.0344 4005.2119 C
-3978.2031 4005.4912 -3978.5791 4005.0352 -3978.6072 4005.4016 C
-3978.5615 4005.1992 L
-3979.3953 4004.4263 -3979.6682 4005.6375 -3980.0249 4006.0352 C
-3981.0232 4006.2344 -3981.4817 4005.9182 -3982.2959 4006.0015 C
-3982.3279 4005.6743 -3982.5496 4004.7744 -3982.8762 4004.8086 C
-3983.0281 4005.2515 -3983.7649 4005.4558 -3983.8401 4006.0222 C
-3983.2561 4006.26 -3983.3623 4005.5479 -3983.0127 4005.4153 C
-3982.7217 4006.009 -3982.9863 4006.0022 -3982.5889 4006.3584 C
-3982.9097 4006.1272 -3984.0383 4006.6682 -3984.3896 4006.1104 C
-3984.2656 4006.031 L
-3984.8264 4005.6936 -3984.9336 4004.2913 -3985.8679 4005.1392 C
-3986.3137 4005.4871 L
-3986.2922 4005.4307 -3986.2898 4005.3643 -3986.2783 4005.3135 C
-3987.0081 4005.2544 -3986.8088 4004.6096 -3987.6145 4005.1184 c
-3987.5522 4005.0791 -3987.5913 4005.0166 -3987.5281 4004.9783 C
-3987.9873 4004.6592 -3988.4504 4005.2998 -3988.7976 4005.4336 C
-3989.0095 4004.96 -3988.7473 4004.9683 -3988.6162 4004.6262 C
-3989.4241 4004.4424 -3990.2959 4005.2544 -3990.7976 4005.8311 C
-3991.3184 4005.5535 L
-3991.0095 4005.3584 -3990.6321 4004.8599 -3990.7263 4004.5742 C
-3991.0127 4004.6682 -3990.9573 4004.8926 -3991.3623 4004.801 C
-3991.2932 4004.4993 -3991.1233 4004.217 -3990.9329 4003.8367 C
-3991.7705 4003.3311 -3991.1201 4004.9092 -3991.7063 4003.9814 C
-3991.9695 4003.9751 -3992.1223 4004.4172 -3992.1511 4004.7822 C
-3992.6279 4004.3035 L
-3992.6809 4004.7695 -3993.2695 4004.7959 -3993.6553 4004.8662 C
-3993.7024 4005.0664 -3993.3447 4005.3623 -3993.1985 4005.1814 C
-3993.2273 4005.5479 -3993.6377 4005.719 -3993.9016 4005.7124 C
-3993.9983 4004.7371 -3995.6296 4005.8535 -3995.3176 4004.7039 C
-3996.5032 4005.0212 -3998.1687 4005.1199 -3998.9512 4005.5264 C
-3999.2092 4005.2571 -3999.7351 4005.2432 -3999.4199 4004.7854 C
-4000.3743 4004.7822 -4000.8665 4005.7832 -4001.8137 4005.5166 C
-4001.8921 4005.3943 -4001.3855 4005.5078 -4001.4192 4005.1814 C
-4002.0383 4005.573 -4002.5457 4004.7695 -4003.5063 4005.0303 C
-4003.3447 4005.0127 -4003.2976 4004.8115 -4003.2751 4004.71 C
-4003.2583 4004.8716 -4003.6687 4005.0454 -4003.9172 4005.2014 C
-4004.0569 4005.1184 -4003.7312 4005.0854 -4003.8096 4004.96 C
-4005.6653 4004.4871 -4007.0791 4005.8135 -4008.9248 4005.7695 c
-4008.3977 4005.7822 -4008.1985 4005.135 -4008.1929 4004.8716 C
-4008.7092 4004.8599 L
-4008.9082 4005.1814 -4009.2959 4005.1814 -4009.6201 4005.4224 C
-4009.6599 4005.301 -4009.8176 4005.1707 -4009.6567 4005.0176 C
-4010.6768 4004.3643 -4011.25 4006.1982 -4012.5 4005.8623 C
-4010.9863 4004.5591 L
-4011.3608 4004.1052 L
-4010.6953 4003.5127 L
-4011.0928 4003.155 -4011.4385 4003.9814 -4011.4863 4003.4912 C
-4011.4023 4003.3535 -4011.2 4003.3975 -4011.1936 4003.1328 C
-4011.5752 4002.9414 -4011.6052 4003.3064 -4011.8921 4003.4016 C
-4011.1362 4002.405 -4009.6543 4002.4207 -4008.8567 4002.1768 C
-4008.7312 4002.0974 -4008.9641 4002.4172 -4008.9863 4002.5176 C
-4008.6609 4002.4856 -4008.4656 4002.7959 -4008.0559 4002.6233 C
-4007.8015 4002.2014 -4008.25 4002.3135 -4008.4519 4002.2695 C
-4008.4241 4001.9031 -4008.3225 4001.925 -4008.0977 4001.8699 C
-4008.0488 4002.3584 -4006.8633 4002.0435 -4006.5735 4002.6392 C
-4005.3721 4002.4856 -4006.7656 4001.3752 -4005.5928 4001.5867 C
-4005.2424 4002.1455 L
-4004.5615 4001.7139 -4003.6809 4001.3311 -4002.9104 4001.4502 C
-4003.0728 4001.4683 L
-4003.1809 4001.7073 -4003.0022 4001.8542 -4002.9231 4001.9768 C
-4002.3408 4002.2158 -4001.8176 4001.5376 -4001.4648 4002.0967 C
-4000.8008 4001.5022 -3999.6936 4001.0632 -3998.9343 4000.7566 C
-3998.7295 4001.4932 -3999.9248 4001.3806 -4000.2407 4001.8411 C
-3999.5496 4001.8384 L
-3999.9768 4001.8486 -4000.1455 4002.1287 -4000.4016 4002.5479 C
-3999.7959 4002.6848 -3999.5967 4002.0398 -3999.0225 4001.8535 C
-3999.0671 4002.0535 -3998.9905 4002.1768 -3998.7256 4002.1814 C
-3998.6504 4001.6936 L
-3998.6455 4001.7334 -3998.6162 4001.7703 -3998.5344 4001.801 C
-3997.5127 4001.5022 L
-3997.7295 4001.2935 -3997.74 4000.8672 -3998.0039 4000.8623 C
-3997.9097 4001.1475 -3998.1335 4001.2039 -3998.3977 4001.1963 C
-3998.1663 4000.8774 -3998.6553 4000.927 -3998.6497 4000.6631 C
-3998.1201 4000.6763 -3997.4695 4000.6104 -3997.1223 4000.4768 C
-3997.0095 4000.927 L
-3996.5049 4001.0413 -3995.9719 4000.7896 -3995.6296 4000.9207 C
-3995.7375 4001.1592 L
-3995.1321 4001.2979 -3994.5359 4001.0078 -3993.9983 4001.447 C
-3993.4583 4000.9326 -3992.7783 4000.5039 -3992.3369 3999.9646 C
-3992.1008 3999.3843 -3990.7522 4000.6951 -3990.1433 3999.8774 C
-3990.1023 3999.9395 -3990.5615 4000.3142 -3990.7693 4000.5342 C
-3990.3643 4000.6243 -3990.0422 3999.9016 -3989.9153 4000.5132 C
-3990.8242 4000.3076 -3989.8665 4001.0015 -3990.2759 4001.175 C
-3989.8503 4001.1638 -3989.4016 4001.0535 -3989.1929 4000.8352 C
-3989.8816 4000.8398 -3988.9482 3999.989 -3989.6455 4000.2559 C
-3989.1052 3999.7412 -3988.3679 3999.5352 -3987.7241 3999.7344 C
-3987.7305 3999.9993 -3987.6511 4000.1216 -3987.4111 4000.2312 C
-3987.2175 3999.8486 L
-3986.9163 3999.9182 -3987.8 4000.301 -3987.1936 4000.4382 C
-3986.5696 3999.7832 -3985.3145 4000.8096 -3985.0413 3999.5974 C
-3984.5657 4000.0767 -3985.9463 4000.0833 -3985.2295 4000.6682 C
-3985.6465 4001.1062 -3986.2217 4000.6052 -3986.3591 4001.21 C
-3985.9504 4001.0376 -3986.21 4001.7212 -3985.9463 4001.7271 C
-3985.4905 4001.3542 L
-3985.5913 4001.3311 L
-3984.8264 4000.7603 -3983.6145 4001.0342 -3982.6377 4000.9375 C
-3981.8103 4000.3279 -3981.2407 3999.448 -3980.2483 3999.5144 C
-3980.5413 3999.8716 -3979.4241 3999.8584 -3980.0488 4000.5132 C
-3979.5896 4000.8286 -3979.1362 4000.4551 -3979.1272 4000.1907 C
-3979.5313 4000.1006 -3979.2693 4000.1062 -3979.6096 3999.9768 C
-3979.3799 3999.6563 -3978.8503 3999.6707 -3978.6328 3999.8799 C
-3978.7336 3999.8562 -3978.6953 3999.9182 -3978.7175 4000.0176 C
-3978.2351 4000.2334 -3978.4863 3999.6995 -3978.1377 3999.5664 C
-3978.0271 4000.0144 -3977.3679 3999.6863 -3977.0496 3999.9182 C
-3976.5879 3999.2791 L
-3976.8416 3999.6992 -3976.1455 3999.4326 -3976.0728 3999.8184 C
-3975.7417 3999.5222 -3975.4641 3999.0022 -3974.96 3999.1155 C
-3975.1682 3999.3352 -3974.5 3999.4326 -3974.4912 3999.8584 C
-3973.6279 4000.2659 -3973.0615 3998.6963 -3972.2439 3999.3064 C
-3972.2693 3999.4063 -3972.4343 3999.6863 -3972.1953 3999.7935 C
-3972.0071 3999.6743 -3971.6775 3999.7246 -3971.4761 3999.6782 C
-3971.4824 3999.6902 L
-3971.4785 3999.6863 -3971.4761 3999.6814 -3971.4719 3999.6782 C
-3971.3733 3999.655 -3971.3113 3999.6016 -3971.3088 3999.4993 C
-3970.9641 3999.0823 -3970.7864 3998.655 -3970.1079 3998.301 C
-3970.1577 3997.8135 -3970.7305 3998.0022 -3970.9785 3998.1592 C
-3971.1929 3998.6416 L
-3971.3977 3997.905 -3971.8047 3998.7695 -3971.9607 3998.5212 C
-3971.5537 3997.6582 -3970.3816 3997.8699 -3969.6785 3997.3398 C
-3970.1072 3996.6592 -3971.0398 3996.5535 -3971.8535 3996.635 C
-3971.4951 3996.9287 L
-3971.9209 3996.9382 L
-3971.5088 3997.4573 L
-3971.9121 3997.3662 -3972.2607 3997.4993 -3972.6252 3997.469 C
-3972.1985 3997.46 -3972.0322 3998.1328 -3972.2737 3998.0264 C
-3972.7493 3997.5479 -3972.7693 3998.3384 -3973.1328 3998.3096 C
-3972.9304 3998.3542 -3972.6672 3998.3623 -3972.8369 3998.6416 C
-3973.5537 3998.0552 -3973.7473 3998.4375 -3974.3992 3997.8115 C
-3974.3184 3998.6252 -3975.2136 3997.8926 -3975.3113 3998.5591 C
-3975.0088 3998.6272 L
-3975.6504 3999.1187 L
-3976.2424 3998.4558 -3975.1262 3998.4424 -3976.0271 3997.9739 C
-3976.8584 3997.8926 -3976.8369 3998.7471 -3977.4905 3998.8096 C
-3977.2751 3998.3286 -3976.7568 3997.9153 -3976.2295 3997.9287 C
-3976.5488 3997.6963 L
-3976.3799 3997.4172 -3975.6504 3997.4756 -3975.2864 3997.5044 C
-3975.8879 3998.0576 -3975.0049 3997.6743 -3974.7312 3998.1062 C
-3974.6809 3997.6406 -3975.0671 3997.7139 -3974.6111 3997.3398 C
-3975.0383 3997.3486 -3975.1008 3997.3875 -3975.6443 3997.2119 C
-3974.4695 3997.4238 -3974.5879 3995.593 -3973.5625 3995.9856 C
-3974.0352 3996.1963 -3973.3977 3996.6582 -3973.3408 3996.8843 C
-3973.1184 3996.8279 -3972.6672 3996.717 -3972.4817 3996.6006 C
-3972.6497 3995.927 L
-3972.0522 3995.635 -3971.8447 3997.0623 -3971.1553 3996.3672 C
-3971.0657 3995.9646 -3971.7617 3996.2312 -3971.6377 3996.1531 C
-3970.6943 3995.73 -3970.3545 3996.8142 -3969.5168 3997.3223 C
-3969.4695 3997.1199 -3969.4792 3996.6936 -3969.1863 3996.3367 C
-3969.2783 3996.7412 -3969.0615 3996.948 -3969.3911 3997.2432 C
-3969.1111 3997.4153 -3968.7793 3997.1184 -3968.5322 3996.96 C
-3969.1152 3996.7231 -3968.2937 3996.3799 -3968.1863 3996.1375 C
-3967.8843 3996.2056 -3968.2783 3996.5413 -3968.4641 3996.6582 C
-3968.2217 3996.7659 -3967.9336 3997.3623 -3967.7959 3996.7566 C
-3967.7864 3997.1814 -3968.4736 3997.8774 -3968.9231 3997.9871 C
-3968.6201 3998.0552 L
-3968.8289 3998.2734 -3968.8679 3998.2119 -3969.1687 3998.1455 C
-3968.8743 3998.4756 -3968.9033 3998.8398 -3968.9719 3999.1431 C
-3969.0105 3999.0811 -3968.9504 3999.0422 -3968.9873 3998.9814 C
-3969.2295 3998.8733 -3969.4153 3998.989 -3969.3591 3999.2158 C
-3969.5769 3999.7876 -3969.0232 3999.573 -3968.8591 3999.8584 C
-3968.7351 3999.821 -3968.6111 3999.7822 -3968.4895 3999.7432 C
-3967.2312 3997.907 L
-3966.6936 3997.6936 -3966.4519 3998.1328 -3966.0481 3998.4104 C
-3965.9373 3997.9182 L
-3965.4695 3997.969 -3965.0281 3998.1252 -3965.3279 3998.7471 C
-3965.3447 3998.5833 -3965.4065 3998.6216 -3965.5081 3998.5974 C
-3965.5215 3998.6653 -3965.5449 3998.7124 -3965.5745 3998.7515 C
-3965.5842 3998.7803 -3965.5896 3998.8086 -3965.5977 3998.8367 C
-3965.0967 3998.6782 -3964.7839 3998.5752 -3964.7551 3998.5566 C
-3965.6057 3999.2695 -3964.7976 3999.448 -3964.9399 4000.3184 C
-3964.0808 4000.0352 L
-3964.6016 3999.759 -3964.0903 3999.6096 -3963.9055 3999.4912 C
-3963.8545 3999.9814 -3963.2136 3999.4871 -3962.9121 3999.5552 C
-3962.9343 3999.6563 L
-3962.6553 3999.8264 -3962.1663 3999.7783 -3961.8184 3999.6455 C
-3961.8342 3999.4814 -3961.3879 3998.6807 -3961.1736 3998.1982 C
-3961.7705 3998.0144 -3961.4163 3997.8184 -3961.4641 3997.5144 C
-3961.4023 3997.5422 -3961.2913 3997.5479 -3961.2783 3997.4856 C
-3961.1929 3997.3462 -3961.3943 3997.2998 -3961.4111 3997.1375 C
-3962.0457 3997.3662 -3962.6985 3997.4307 -3962.9573 3998.1143 C
-3962.7625 3998.4238 -3962.6252 3997.8184 -3962.4072 3998.0254 C
-3962.7217 3998.4856 -3963.1272 3998.3943 -3963.6543 3998.3806 C
-3963.8271 3997.9712 L
-3964.3577 3998.1936 L
-3964.1362 3997.9768 -3964.2695 3997.5479 -3963.7129 3997.4646 C
-3963.7839 3997.0791 -3964.2649 3997.5535 -3964.6057 3997.4238 C
-3964.78 3997.9683 L
-3964.7129 3997.6653 -3965.4424 3997.6062 -3964.9241 3997.1924 C
-3964.0808 3996.7471 L
-3964.3152 3996.3752 L
-3963.6023 3996.2703 L
-3963.7705 3996.552 L
-3962.6252 3996.175 -3963.4329 3997.635 -3962.28 3996.9927 C
-3961.9192 3996.3333 -3961.5313 3996.2622 -3960.8247 3996.4224 C
-3961.3359 3996.5703 -3960.8772 3996.8875 -3961.0696 3997.2695 C
-3960.5481 3997.5447 -3960.3721 3997.0015 -3960.1016 3996.7432 C
-3959.9688 3997.0923 -3959.8743 3997.3774 -3960.3401 3997.3264 C
-3960.3984 3998.0552 -3959.7273 3997.1995 -3959.6848 3997.9512 C
-3958.1416 3997.9287 -3958.4482 3995.5254 -3956.6443 3996.4639 C
-3956.7119 3996.7659 L
-3955.5664 3996.3894 -3954.9055 3996.7515 -3953.8447 3996.5127 C
-3953.0095 3997.2832 L
-3953.1963 3997.4016 -3953.6985 3997.9771 -3953.4641 3998.3486 C
-3953.8704 3997.5686 -3954.3015 3997.8411 -3954.7393 3997.4238 C
-3954.7839 3997.6262 -3954.6057 3997.7722 -3954.5281 3997.8975 C
-3954.7922 3997.8894 -3954.9248 3997.5413 -3955.2737 3997.6763 C
-3955.2568 3997.8367 -3954.8762 3998.0303 -3955.1631 3998.1252 C
-3955.6377 3997.6455 L
-3956.2727 3997.8743 -3955.9504 3998.7935 -3956.6963 3998.573 C
-3956.5576 3998.1455 -3956.2744 3997.5264 -3955.9856 3997.4238 C
-3956.3264 3997.3311 -3955.5313 3997.1653 -3955.8423 3996.9092 C
-3956.3333 3997.5435 -3956.5703 3997.0413 -3957.2231 3997.4382 C
-3957.1465 3997.3496 -3957.1262 3997.2256 -3956.9656 3997.1863 C
-3957.9128 3996.9182 L
-3957.6785 3997.2896 -3958.6953 3997.3264 -3958.6072 3997.8774 C
-3957.5977 3998.1052 -3957.8943 3997.7722 -3956.7439 3998.0854 C
-3957.0696 3998.21 -3957.4895 3998.7703 -3957.6863 3999.2854 C
-3957.6963 3999.2646 -3957.7129 3999.2471 -3957.7483 3999.2371 C
-3957.9241 3999.7822 -3957.7449 3999.9287 -3957.7483 4000.8806 C
-3957.2231 4000.2039 -3956.8721 4000.7615 -3956.2527 4000.3716 C
-3956.1362 3999.8496 -3956.6121 3999.7056 -3956.9199 3999.8408 C
-3956.3743 3999.4951 L
-3956.4817 3999.7344 L
-3955.0967 3999.9104 L
-3955.3591 3999.9382 -3955.4482 4000.2407 -3955.5852 4000.4688 C
-3955.4065 4000.489 -3955.2295 4000.6272 -3955.0413 4000.7783 C
-3955.0808 4000.2803 -3955.0559 3999.9287 -3954.8816 3999.9382 C
-3953.9905 4000.0566 -3953.4951 4000.5039 -3953.1663 4001.0728 C
-3953.1321 4001.0615 -3953.0935 4001.0491 -3953.0625 4001.0376 C
-3953.2119 4000.5264 -3952.4297 4000.1199 -3952.1536 3999.5974 C
-3952.1672 4000.1262 -3951.6943 3999.9153 -3951.4375 4000.1848 C
-3951.3008 3999.5791 -3951.4832 3998.7432 -3951.7959 3998.2483 C
-3952.3984 3998.801 -3952.1335 3998.8064 -3952.4182 3999.5923 C
-3953.3848 4000.1155 L
-3953.1687 3999.6328 L
-3953.6511 3999.4199 -3954.1145 4000.0576 -3954.0791 3999.4292 C
-3953.8242 3999.0103 -3953.4033 3999.2646 -3953.1504 3998.844 C
-3953.4695 3998.6143 L
-3952.9065 3997.9966 -3953.1809 3999.2092 -3952.4993 3998.7783 C
-3952.75 3998.2432 -3952.4375 3998.739 -3952.1455 3998.3806 C
-3952.3799 3998.009 -3953.3457 3998.5342 -3953.1409 3997.6262 C
-3952.7864 3997.2295 -3951.9482 3998.6902 -3951.4792 3997.7876 C
-3951.5022 3997.8894 L
-3950.8103 3998.0078 -3950.5671 3997.489 -3950.3081 3997.1631 C
-3950.0137 3997.4573 -3949.6072 3997.0435 -3949.2881 3997.0103 C
-3949.2959 3997.2744 L
-3948.8457 3997.1638 L
-3949.0601 3997.6455 -3949.3733 3997.1504 -3949.76 3997.2212 C
-3949.7119 3997.7119 L
-3950.1577 3997.1294 -3950.4551 3998.0144 -3950.8008 3998.4375 C
-3950.2976 3998.0127 -3949.3799 3998.5576 -3949.2617 3997.5974 C
-3948.9504 3998.0942 L
-3948.8015 3997.9153 L
-3948.5696 3998.2871 -3948.8064 3998.8699 -3949.2561 3998.9814 C
-3949.3342 3998.8574 -3949.3733 3998.7959 -3949.3496 3998.6936 C
-3949.5583 3998.9126 -3949.75 3999.2935 -3950.2551 3999.1807 C
-3949.9856 3998.9207 L
-3950.6145 3998.885 -3951.1863 3999.0752 -3951.4016 3999.5576 C
-3950.4937 3999.7622 -3949.6008 3999.8054 -3948.7483 3999.7832 C
-3948.4968 3998.6743 -3948.1985 3998.052 -3948.0703 3997.0212 C
-3947.4983 3996.8311 -3946.7217 3996.6895 -3946.2249 3997.0664 C
-3946.2705 3997.2695 L
-3946.0281 3997.3752 -3945.8047 3997.3184 -3945.6184 3997.2014 C
-3945.3623 3997.4727 -3945.7937 3997.7471 -3945.6152 3997.8936 C
-3944.7959 3997.5479 L
-3944.8464 3998.0144 -3945.5359 3998.0166 -3945.8633 3998.0491 C
-3945.8015 3998.0103 -3945.6768 3997.9326 -3945.7168 3997.8699 C
-3946.0977 3997.6782 -3946.8071 3998.4727 -3946.9736 3997.7979 C
-3947.1592 3997.9153 -3946.5967 3997.2998 -3947.2249 3997.2646 C
-3947.6455 3997.0103 -3947.7825 3997.6155 -3947.8264 3997.8184 C
-3947.8333 3998.0833 -3947.1663 3998.1807 -3947.3977 3998.4993 C
-3947.0703 3998.4646 -3946.9399 3998.1252 -3946.5212 3998.3799 C
-3946.8457 3998.4119 -3947.2864 3998.948 -3947.4592 3998.5376 C
-3948.1008 3999.0303 -3948.0088 4000.2703 -3947.7063 4000.3384 C
-3947.7783 3999.9502 -3946.5359 3999.8599 -3947.3772 3999.3535 C
-3946.9993 3998.8535 -3946.3088 3998.8496 -3945.8145 3998.5376 C
-3945.8369 3998.6375 L
-3945.2231 3998.5127 L
-3945.3096 3998.6504 -3945.4951 3998.7695 -3945.5012 3999.031 C
-3944.6511 3998.323 L
-3945.1296 3998.7998 -3944.3545 3998.6543 -3944.1367 3998.8643 C
-3944.0457 3998.46 -3943.7136 3998.1638 -3944.0322 3997.9326 C
-3944.3904 3997.6392 -3944.2407 3998.1504 -3944.5664 3998.1814 C
-3944.1052 3997.5447 L
-3944.0657 3997.6062 L
-3943.7881 3997.0854 L
-3943.1599 3997.1216 -3944.0625 3998.2979 -3943.2576 3997.7876 C
-3943.3623 3997.0767 L
-3942.4304 3997.1814 -3941.2336 3997.9814 -3940.5752 3997.6531 C
-3940.7568 3998.0576 -3940.8369 3998.7083 -3940.5872 3999.093 C
-3940.8711 3998.9712 -3941.4417 3998.9966 -3941.8489 3999.0632 C
-3941.9272 3998.9382 -3941.3401 3998.2227 -3940.8977 3998.3762 C
-3941.1121 3997.2119 -3942.0105 3999.0791 -3942.0625 3997.8982 C
-3943.1897 3997.4871 -3942.9033 3999.0352 -3943.8601 3998.343 C
-3943.8733 3998.8699 -3944.1321 3998.6006 -3944.1824 3999.0654 C
-3943.8992 3999.925 -3942.9033 3999.0352 -3942.2825 3999.3367 C
-3942.3433 3999.3752 -3942.4656 3999.4539 -3942.4895 3999.5535 C
-3942.0457 3999.7083 -3941.8623 3999.5908 -3941.5522 3999.3955 C
-3941.5913 3999.3333 L
-3941.0496 3998.8184 -3941.2561 3999.7256 -3940.9373 3999.9583 C
-3940.8137 3999.8799 -3940.3704 4000.031 -3940.4417 3999.6455 C
-3939.8643 4000.1462 L
-3939.8921 3999.5576 L
-3939.5664 3999.5222 -3939.4951 3999.9119 -3939.2 3999.5535 C
-3939.1863 3999.0264 L
-3939.9951 3998.844 L
-3939.5852 3998.6719 -3939.8809 3998.3398 -3939.4304 3998.2295 C
-3939.9336 3998.8054 -3939.0745 3998.5215 -3939.0249 3999.0103 C
-3938.6936 3998.7139 L
-3938.7783 3998.8542 L
-3938.5183 3999.1252 -3938.4688 3998.6582 -3938.1653 3998.7271 C
-3938.5232 3998.4336 -3938.7576 3998.0632 -3939.2136 3998.4375 C
-3938.8816 3998.1416 -3938.2231 3997.8135 -3938.0615 3997.7959 C
-3937.7129 3997.5752 -3937.4695 3997.9768 -3937.1433 3998.0352 C
-3937.7693 3998.2471 -3936.9241 3999.6328 -3938.1785 3999.2544 C
-3938.1553 3999.1531 -3938.0537 3999.1763 -3938.0144 3999.2383 C
-3938.1816 3998.5654 -3938.7664 3999.2803 -3939.0383 3999.5376 C
-3938.9683 3999.925 -3939.2527 4000.0212 -3938.7705 4000.2344 C
-3938.9287 3999.9871 -3938.3643 3999.3716 -3937.9055 3999.6895 C
-3937.9863 4000.5176 L
-3937.3184 4000.6155 L
-3937.3809 4000.655 L
-3937.1296 4001.1895 -3936.6682 4000.552 -3936.2083 4000.8662 C
-3935.8762 4000.5703 -3934.6023 4000.8054 -3935.1504 3999.9382 C
-3934.7375 4000.4573 -3934.3752 3999.7959 -3933.9248 3999.6848 C
-3934.4863 3999.3462 L
-3933.8225 3998.7522 -3934.0137 3999.135 -3933.4824 3998.1924 C
-3933.4287 3998.4182 -3933.3103 3998.6052 -3933.4182 3998.844 C
-3932.5264 3998.8875 -3931.2527 3999.1216 -3930.7295 3998.4424 C
-3930.1008 3998.4792 -3930.0022 3999.4558 -3929.1201 3999.0728 C
-3928.9343 3998.9558 -3929.2649 3998.2979 -3928.6809 3998.5352 C
-3928.6416 3998.5974 -3929.2432 3999.1504 -3928.5928 3999.0854 C
-3928.1296 3998.447 -3927.5049 3999.4375 -3926.9023 3998.8843 C
-3926.5842 3999.1143 -3926.0322 3999.0264 -3926.1472 3999.531 C
-3926.6511 3999.4172 -3927.3643 3999.5222 -3927.4729 3999.7646 C
-3927.4033 3999.46 -3927.8313 3999.469 -3927.46 3999.2344 C
-3928.2217 3998.8535 -3927.9543 3999.5479 -3928.6377 3999.2871 C
-3928.6848 3999.489 -3928.2864 3999.8455 -3928.1399 3999.6653 C
-3928.1367 4000.3542 -3929.4873 3999.9983 -3928.8799 4000.8247 C
-3928.1497 4000.8843 -3927.9329 3999.447 -3927.3 4000.1726 C
-3927.5537 4000.5923 -3927.9504 4000.2371 -3928.2727 4000.96 C
-3927.7527 4001.2383 L
-3927.3752 4000.739 L
-3927.3977 4000.8411 L
-3926.4792 4001.4727 -3926.5481 4000.1318 -3925.7263 3999.7854 C
-3926.2024 3999.3076 -3925.6162 3998.5908 -3925.9744 3998.2979 C
-3925.4248 3998.21 -3925.0212 3998.301 -3925.0176 3998.9912 C
-3926.0457 3999.5535 -3925.0759 3999.7207 -3926.0264 4000.4075 C
-3925.8704 4000.655 -3926.2527 4001.4172 -3925.6863 4001.4932 C
-3925.0481 4001.0015 -3925.8772 4000.9182 -3925.2407 4000.6907 C
-3925.2031 4000.7522 -3925.1641 4000.8142 -3925.1863 4000.9163 C
-3924.8936 4000.5576 -3924.8447 4001.0454 -3924.4905 4000.6494 C
-3924.5745 4000.7876 L
-3924.1377 4001.2056 -3924.0967 4000.3135 -3923.7207 4000.7695 C
-3923.8711 4000.2571 -3923.4683 4000.3496 -3923.2351 4000.0303 C
-3923.6162 3999.8367 -3923.8225 3999.1016 -3924.5745 3999.1431 C
-3924.6653 3999.5479 -3924.6104 3999.7722 -3924.9192 3999.9683 C
-3924.4304 3999.9182 L
-3924.5359 3999.9856 -3924.6162 4000.0896 -3924.7129 4000.1707 C
-3925.1824 3999.96 L
-3924.5872 3999.6719 -3924.8601 3999.239 -3924.6072 3998.8184 C
-3924.0625 3998.9951 -3924.1577 3998.7073 -3923.8152 3998.8384 C
-3923.8496 3999.4326 -3922.7649 3999.8535 -3922.1377 4000.2344 C
-3922.2351 4000.2119 -3922.3608 4000.2271 -3922.4287 4000.2119 C
-3922.8843 4000.5867 -3922.1152 4000.7073 -3922.0984 4000.8699 C
-3921.7664 4000.573 L
-3921.8289 4000.6143 -3921.9153 4000.7522 -3921.7737 4000.8367 C
-3921.3242 4000.7256 -3921.3503 4000.1375 -3920.9016 4000.0264 C
-3920.8679 4000.3535 -3921.2473 4000.8496 -3920.9683 4001.0212 C
-3920.8721 4001.3064 -3920.5657 4002.0654 -3919.9695 4001.7764 C
-3919.9272 4001.6504 -3919.7727 4001.5811 -3919.5935 4001.5264 C
-3919.6184 4001.5447 -3919.6497 4001.5576 -3919.6609 4001.5811 C
-3919.2649 4001.9375 L
-3919.6023 4002.4951 -3919.9473 4001.6743 -3920.2864 4002.2344 C
-3920.3152 4002.7646 L
-3920.5791 4002.7659 -3920.9375 4002.9956 -3921.1023 4003.2703 C
-3920.7 4003.3604 -3920.6152 4003.2212 -3920.1653 4003.1104 C
-3920.1023 4003.4463 -3920.4192 4003.6951 -3920.4648 4003.7312 C
-3920.3977 4003.4292 L
-3920.9343 4002.9902 -3921.2 4003.9375 -3921.8679 4003.8384 C
-3921.9688 4003.8174 -3921.9072 4003.7783 -3921.8848 4003.677 C
-3922.4255 4004.1907 -3922.9561 4003.4871 -3923.4817 4004.1653 C
-3923.3103 4003.885 L
-3923.6682 4004.1104 -3924.3679 4004.6328 -3925.0671 4005.1375 C
-3925.0728 4005.344 L
-3924.9951 4005.4683 -3925.2576 4005.46 -3925.3984 4005.3774 C
-3925.3977 4005.3743 L
-3925.7483 4005.6262 -3926.0852 4005.8584 -3926.3608 4006.031 C
-3926.2727 4006.1592 -3926.1599 4006.2659 -3926.0305 4006.2959 C
-3925.9209 4006.0535 -3925.2783 4006.2522 -3925.3665 4005.7014 C
-3925.0696 4006.0342 -3924.5913 4005.5576 -3924.3733 4005.7659 C
-3924.7705 4005.4126 -3924.0967 4005.2471 -3924.0271 4004.9424 C
-3923.8936 4005.2913 -3923.4385 4004.9172 -3923.4905 4005.3843 C
-3923.4121 4005.5059 -3923.6855 4005.0742 -3923.8545 4005.3542 C
-3924.2705 4005.7896 -3923.0928 4005.7371 -3923.6111 4006.1504 C
-3922.9519 4005.823 -3922.0833 4005.9646 -3921.4033 4005.5352 C
-3921.7839 4005.344 L
-3921.4817 4005.4126 -3920.7664 4005.3086 -3920.7129 4005.5342 C
-3920.9375 4005.5886 -3921.2 4005.5833 -3921.4873 4005.6768 C
-3921.5012 4006.2039 -3920.7969 4005.6726 -3920.7649 4005.9993 C
-3919.9304 4005.1262 L
-3920.2959 4005.0967 L
-3920.0657 4004.7764 -3919.3015 4005.1631 -3918.7351 4005.2371 C
-3919.0601 4005.9592 -3919.5896 4005.2559 -3920.1855 4005.5454 C
-3920.6184 4005.8184 -3919.9182 4006.2422 -3920.3279 4006.4153 C
-3920.2217 4006.5833 -3919.9543 4006.5632 -3919.8225 4006.3806 C
-3919.6609 4006.5127 L
-3920.0264 4007.1682 -3920.8457 4007.0222 -3921.3911 4007.5867 C
-3921.3433 4007.5166 -3921.3015 4007.4424 -3921.2864 4007.3662 C
-3921.7063 4007.1118 -3922.1328 4007.1216 -3922.5422 4007.2959 C
-3922.3257 4007.5022 -3922.24 4007.3623 -3922.1162 4007.2854 C
-3922.1008 4007.448 -3922.4873 4007.5176 -3922.6335 4007.6982 C
-3922.2527 4007.8894 -3922.5625 4008.0854 -3922.3215 4008.1936 C
-3922.5696 4008.3496 -3922.7705 4008.3035 -3923.0728 4008.2344 C
-3923.2295 4007.9871 -3922.9431 4007.8936 -3922.9751 4007.5686 C
-3923.2864 4007.7646 -3923.4287 4006.9871 -3923.8843 4007.3623 C
-3923.2783 4007.4993 -3924.0439 4008.0686 -3924.2527 4008.2876 C
-3924.1511 4008.3096 L
-3924.3433 4008.6907 -3924.5063 4008.7073 -3924.6392 4008.3584 C
-3924.3911 4008.2014 -3924.1511 4008.3096 -3924.2217 4007.9224 C
-3924.3855 4007.9395 -3924.5488 4007.9558 -3924.7344 4008.0728 C
-3924.5657 4007.7935 L
-3925.3799 4007.8743 L
-3925.5088 4008.2158 -3925.7241 4008.6982 -3925.8369 4009.2014 C
-3926.0322 4008.8926 -3926.3042 4009.1504 -3926.4895 4009.2695 C
-3926.4033 4009.1272 L
-3926.7625 4008.8352 -3927.5615 4009.0791 -3927.6289 4009.3806 C
-3927.8855 4009.1118 -3925.8152 4007.4573 -3927.6289 4007.7371 C
-3928.3184 4007.739 -3928.0583 4008.7014 -3928.4519 4009.0352 C
-3928.4297 4008.9375 -3928.4688 4008.8743 V
-3928.7705 4008.8035 -3928.8008 4009.1707 -3929.0488 4009.3264 C
-3928.8679 4009.4727 -3928.6057 4009.4792 -3928.5212 4009.3398 C
-3928.6121 4009.7432 -3929.1497 4009.3035 -3929.3809 4009.6216 C
-3929.0808 4009 -3929.9641 4009.3848 -3929.7312 4009.0654 C
-3930.3313 4008.6653 -3930.9729 4009.157 -3931.2881 4009.6155 C
-3931.6953 4008.8352 -3932.0022 4009.719 -3932.6631 4009.3584 C
-3932.5615 4009.3806 -3932.3772 4009.2646 -3932.2351 4009.3486 C
-3931.8584 4008.8535 -3932.9199 4009.0886 -3932.3401 4008.635 C
-3932.4641 4008.7139 -3932.3489 4008.8982 -3932.2217 4008.821 C
-3931.9993 4008.7654 -3931.7898 4008.5479 -3931.8457 4008.3223 C
-3932.3843 4007.8843 L
-3932.1963 4007.7646 L
-3933.0137 4007.1582 L
-3933.0359 4007.2571 -3932.9592 4007.3806 -3932.9199 4007.4424 C
-3933.8679 4007.1768 -3934.9519 4007.5144 -3935.7825 4007.4336 C
-3935.9385 4008.8311 -3937.8271 4008.031 -3938.4983 4008.8894 C
-3938.3184 4008.489 -3938.22 4007.7822 -3938.3313 4007.4912 C
-3938.1816 4007.4326 -3937.8752 4006.8672 -3937.5359 4006.9856 C
-3937.4817 4007.21 -3937.0625 4007.4639 -3937.3323 4007.7207 C
-3936.3943 4007.5615 -3937.4592 4007.1079 -3937.1824 4006.5879 C
-3938.2217 4006.7231 -3938.8313 4007.5422 -3939.4873 4007.8711 C
-3939.5039 4007.7056 L
-3939.9993 4008.0176 L
-3939.5945 4008.1104 -3939.6145 4008.9031 -3940.1362 4008.6262 C
-3940.0728 4008.5867 L
-3940.3704 4008.2544 -3940.9895 4008.6455 -3941.4543 4008.5942 C
-3941.7695 4009.052 L
-3942.2351 4009 -3942.2551 4008.1475 -3942.4065 4007.6367 C
-3943.1362 4007.5767 -3943.5576 4008.2759 -3944.0759 4008.6907 C
-3944.3103 4008.3184 -3945.4033 4008.2312 -3944.8242 4007.7803 C
-3945.4824 4008.1079 -3945.3496 4010.1006 -3946.4785 4008.9966 C
-3946.1855 4008.6375 L
-3947.2649 4008.7124 -3948.8042 4009.4263 -3949.3015 4009.0486 C
-3948.9033 4007.76 -3950.6497 4007.7371 -3950.8416 4006.4734 c
-3950.7881 4006.7622 -3951.1936 4006.8584 -3951.2527 4007.0127 C
-3951.3416 4006.8643 -3951.4895 4006.7207 -3951.6465 4006.9814 C
-3951.2256 4007.2344 -3951.9424 4008.2935 -3951.1377 4007.7832 C
-3951.5449 4008.6494 -3952.0696 4009.3264 -3952.9617 4009.2832 C
-3952.9482 4008.7559 L
-3952.2424 4008.9163 L
-3952.3137 4008.5264 -3951.9504 4008.5566 -3951.8015 4008.3774 C
-3953.1145 4008.0811 -3951.6296 4007.1431 -3952.9719 4007.2119 C
-3953.1016 4007.5535 -3953.0176 4007.4126 -3953.3665 4007.5479 C
-3953.2024 4007.5303 -3953.1729 4007.1672 -3953.4373 4007.1592 C
-3953.6912 4007.5811 L
-3954.1599 4006.7014 -3952.9153 4007.0088 -3953.3152 4006.3911 C
-3952.7969 4005.9771 -3951.8992 4005.7559 -3952.0664 4005.0833 C
-3952.9128 4004.8384 -3952.8279 4006.343 -3953.7129 4006.0376 C
-3953.8071 4005.7515 L
-3954.1184 4005.9463 -3954.1687 4006.4104 -3954.3391 4006.6902 C
-3954.3545 4006.5264 -3954.4336 4006.405 -3954.6335 4006.3584 C
-3955.1592 4007.0352 -3955.5081 4007.1682 -3955.9929 4007.9075 C
-3954.7024 4007.3535 -3954.8896 4008.4224 -3953.5576 4007.9287 C
-3953.7664 4008.1475 -3954.7041 4008.3076 -3954.7617 4009.0352 C
-3954.7493 4008.5078 L
-3955.1824 4008.7822 -3955.6152 4009.0535 -3956.1592 4008.8799 C
-3955.8271 4008.5833 L
-3956.5481 4008.9502 -3957.0256 4007.7822 -3957.5945 4008.6592 C
-3957.3936 4008.7073 -3957.2305 4008.6907 -3957.1064 4008.6104 c
-3957.4775 4008.8462 -3957.9431 4008.7935 -3958.3464 4008.7039 C
-3959.1809 4009.5752 L
-3959.1736 4009.3135 -3959.7024 4009.2979 -3959.4473 4008.8799 C
-3960.0481 4008.4783 -3960.3313 4009.2646 -3960.6785 4009.3955 C
-3961.2937 4008.8352 -3960.1455 4009.1455 -3960.0852 4008.4172 C
-3960.9329 4008.1726 -3961.8313 4008.3936 -3962.3096 4008.8672 C
-3962.1367 4008.9739 -3962.0527 4009.0654 -3962.0615 4009.1936 C
-3962.0872 4009.0264 -3962.4287 4009.0703 -3962.6191 4009.0654 C
-3962.75 4009.4075 L
-3963.0671 4009.1763 -3963.0225 4008.9739 -3962.7527 4008.7158 C
-3963.0559 4008.6494 -3963.4172 4009.3086 -3963.7295 4008.8142 C
-3963.2119 4008.4016 -3962.5522 4008.7615 -3962.2825 4008.5044 C
-3963.3643 4008.8423 -3963.3711 4007.46 -3964.7424 4007.8955 C
-3964.7593 4007.7312 -3964.5271 4007.4126 -3964.7913 4007.4075 C
-3965.4033 4007.5342 -3964.9512 4008.1143 -3965.1423 4008.4951 C
-3964.6711 4008.2822 -3964.4519 4008.4912 -3964.1785 4008.9238 C
-3964.3042 4009.2014 L
-3964.3232 4009.0576 -3964.6191 4009.0491 -3964.7063 4008.9104 C
-3964.7825 4009.4771 L
-3964.7473 4008.8496 -3965.2207 4008.3716 -3965.5928 4008.6062 C
-3965.2168 4009.0615 -3965.3184 4009.0376 -3965.2161 4009.7522 C
-3965.7393 4010.4292 -3965.8064 4009.0867 -3966.3928 4009.8035 C
-3966.3489 4009.6016 -3965.8369 4009.4512 -3966.2793 4009.2979 C
-3966.6455 4009.2703 -3966.5967 4009.759 -3966.8423 4009.9153 C
-3966.5657 4009.3926 -3966.6367 4009.0044 -3966.3369 4008.3843 C
-3965.6863 4008.3184 -3966.0745 4008.3911 -3965.4385 4008.1631 C
-3965.9768 4007.7212 L
-3965.4255 4007.635 -3965.5759 4007.1233 -3965.5305 4006.9224 C
-3966.4719 4006.3911 -3966.24 4007.7168 -3966.8457 4007.5796 C
-3967.1377 4007.9382 -3966.2783 4007.655 -3966.7351 4008.0303 C
-3967.3015 4007.9539 -3966.8643 4008.3716 -3967.5 4008.5974 C
-3967.3936 4008.3584 L
-3967.5879 4008.0479 -3967.78 4008.4307 -3968.0049 4008.4827 C
-3968.2522 4008.6416 -3967.7249 4010.2998 -3968.7417 4010.3352 C
-3968.6919 4010.1895 -3968.6736 4010.0967 -3968.6736 4010.0352 C
-3967.6816 4005.6455 L
-3968.7119 4005.6563 -3969.8992 4005.5342 -3971.0923 4005.239 C
-3971.3733 4004.3806 -3970.2407 4004.531 -3970.3137 4004.1455 C
-3969.7695 4004.321 L
-3969.8 4004.6851 -3970.9097 4004.4336 -3970.4182 4005.0767 C
-3969.4573 4004.8142 -3969.0212 4005.2334 -3968.1096 4004.4827 C
-3968.3928 4003.6233 -3969.3103 4004.635 -3969.9033 4003.9712 C
-3969.6543 4004.0264 -3969.4441 4003.9326 -3969.24 4003.8096 C
-3969.7969 4003.6995 -3970.3928 4003.5811 -3971.0264 4003.448 C
-3971.1687 4003.6563 L
-3970.7417 4003.7522 -3970.4463 4003.8264 -3970.4082 4003.8574 C
-3970.9744 4003.7822 -3971.4519 4004.2583 -3971.4895 4004.8875 C
-3971.3889 4004.9104 L
-3971.5935 4005.1062 L
-3971.7263 4005.0664 -3971.8591 4005.0264 -3971.9912 4004.9856 C
f
-4008.6936 4004.8367 m
-4008.6592 4004.7764 -4008.6321 4004.7056 -4008.6121 4004.6184 c
-4008.6328 4004.71 -4008.6096 4004.7695 -4008.6936 4004.8367 C
f
0 D
-3960.9033 4002.8752 m
-3961.6584 4002.7832 -3962.4199 4002.6118 -3963.1455 4002.5352 C
-3961.8359 4003.7791 -3960.9153 4004.7207 -3963.1008 4004.6963 C
-3963.2439 4004.7854 L
-3962.9583 4004.9382 -3962.4656 4004.9573 -3962.0022 4004.8672 C
-3961.6272 4004.4263 -3960.4172 4002.8064 -3960.4304 4002.6631 C
-3960.5632 4002.3142 -3960.7568 4002.6951 -3960.9983 4002.5886 C
-3960.9033 4002.8752 L
f
-3960.3665 4004.9583 m
-3959.9385 4005.0967 -3960.0359 4004.821 -3959.9695 4004.573 C
-3960.1201 4004.6052 -3960.2705 4004.6375 -3960.4192 4004.6672 C
-3960.3623 4004.7295 -3960.3342 4004.8174 -3960.3665 4004.9583 C
f
1 D
-3959.9951 4004.3252 m
-3960.0432 4004.3184 -3960.0842 4004.3076 -3960.1057 4004.2744 C
-3959.9951 4004.3252 L
f
0 D
-3968.3191 4004.0103 m
-3968.3 4004.0044 -3968.2932 4003.9993 -3968.2751 4003.9951 C
-3968.3762 4003.9751 -3968.4775 4003.9573 -3968.5833 4003.9375 C
-3968.5422 4003.9771 -3968.4641 4004.0078 -3968.3191 4004.0103 C
f
-3967.4504 4004.6184 m
-3967.3489 4004.1638 L
-3967.4431 4004.1475 -3967.5393 4004.1294 -3967.6377 4004.1118 C
-3967.6052 4004.3174 -3967.5713 4004.4966 -3967.4504 4004.6184 C
f
-3964.6584 4006.1118 m
-3964.4824 4005.5664 -3963.8928 4005.5422 -3963.8567 4004.9126 C
-3963.8191 4004.7515 -3963.9431 4004.6895 -3964.0823 4004.6375 C
-3964.2375 4004.6233 -3964.4033 4004.6055 -3964.5791 4004.5854 C
-3964.5852 4004.6768 -3964.6201 4004.7622 -3964.6785 4004.844 C
-3964.5049 4004.9224 -3964.3889 4005.0791 -3964.4592 4005.4646 C
-3964.9055 4004.6233 -3964.8591 4006.0654 -3965.3416 4005.8496 C
-3965.4951 4006.2935 -3964.8047 4006.2896 -3964.6584 4006.1118 C
f
1 D
-3927.5752 4004.4727 m
-3927.5615 4004.5264 -3927.5144 4004.6682 -3927.4482 4004.844 C
-3927.7881 4005.155 L
-3928.3943 4005.0176 -3928.8799 4004.1143 -3929.4255 4004.8916 C
-3929.6809 4004.6963 -3929.8176 4004.2832 -3929.9482 4003.9424 C
-3929.8232 4003.9683 -3929.7063 4004.0015 -3929.6089 4004.0535 C
-3928.0791 4002.9153 -3928.8113 4005.2544 -3927.5752 4004.4727 C
f
0 D
-3934.5449 4003.3643 m
-3934.4824 4003.3252 -3934.46 4003.2227 Y
-3935.8145 4004.3774 -3936.9297 4004.7119 -3937.6599 4004.6672 C
-3937.5183 4005.1252 -3936.8633 4005.4792 -3936.5522 4005.6682 C
-3936.8279 4006.1902 L
-3937 4005.7803 L
-3937.4785 4006.2544 L
-3937.3447 4006.6052 -3936.9583 4006.531 -3936.7 4006.801 C
-3936.6775 4006.7014 -3935.8503 4006.093 -3935.6191 4005.7722 C
-3936.28 4005.4119 L
-3936.1016 4005.5576 -3935.2249 4005.4375 -3934.8772 4005.3035 C
-3934.8704 4005.0422 -3935.4695 4004.6392 -3935.5449 4005.2073 C
-3935.6162 4004.8184 -3934.9255 4004.8142 -3935.3623 4004.3982 C
-3934.8447 4003.9856 -3934.0212 4004.3311 -3933.6392 4004.5222 C
-3933.5745 4005.175 L
-3933.1553 4005.4287 -3933.2913 4004.3894 -3932.7932 4004.7659 C
-3933.4055 4004.8936 -3932.6897 4005.4814 -3933.1768 4005.5303 C
-3933.0212 4005.7764 -3933.1736 4006.219 -3932.6855 4006.1707 C
-3932.2793 4005.3076 -3932.1711 4006.7119 -3931.7871 4005.9502 C
-3931.5305 4006.219 -3932.0632 4006.469 -3931.5583 4006.5854 C
-3930.9792 4006.1318 -3931.0127 4005.8064 -3930.9768 4005.1782 C
-3931.5183 4005.0022 -3931.5852 4005.9951 -3932.0281 4005.8423 C
-3931.1472 4004.7659 L
-3931.3096 4004.6143 -3931.4297 4004.5974 -3931.5305 4004.6416 C
-3931.3535 4004.5791 -3931.2031 4004.4199 -3931.0745 4004.1995 c
-3931.0012 4004.0767 -3930.9336 4003.9712 -3930.8711 4003.8806 C
-3931.3704 4003.8752 -3931.8137 4003.8599 -3931.8921 4003.5923 C
-3931.8232 4003.2876 L
-3932 4003.0078 -3932.2881 4003.2271 -3932.4209 4003.4502 C
-3932.8679 4003.4827 -3933.3145 4003.9075 -3933.4121 4003.5132 C
-3933.2424 4003.2344 L
-3933.7922 4003.3223 -3933.8535 4003.3604 -3934.5449 4003.3643 C
f
-3952.5625 4002.6707 m
-3952.2295 4003.7876 -3951.8623 4004.7744 -3950.3081 4004.5791 C
-3950.4304 4004.6563 L
-3949.6472 4005.3574 -3948.9033 4003.7295 -3947.9504 4004.5078 C
-3948.4128 4004.9287 -3948.3879 4004.8894 -3948.8984 4005.8535 C
-3948.4023 4005.5376 L
-3948.5398 4006.1455 -3948.0449 4005.8311 -3947.6809 4005.8599 C
-3948.0022 4006.5833 L
-3948.2207 4006.3752 -3948.7871 4006.2998 -3948.7705 4006.4646 C
-3948.6465 4006.3848 -3949.5183 4005.552 -3949.9919 4005.7622 C
-3949.9431 4006.2522 -3948.9431 4006.0535 -3949.3896 4006.8542 C
-3948.9961 4006.5176 -3948.9473 4007.0063 -3948.5359 4006.8352 C
-3948.9304 4007.1707 -3948.6335 4007.5022 -3948.9272 4007.8599 C
-3948.2527 4007.6936 L
-3948.2351 4007.8562 -3949.2351 4008.0552 -3948.6824 4008.6582 C
-3948.4121 4008.4016 -3947.6904 4008.7231 -3947.6775 4008.1963 C
-3947.6609 4008.3584 L
-3947.1553 4008.4727 -3947.4385 4007.6118 -3946.8176 4007.9126 C
-3946.8103 4007.6475 -3946.9287 4007.4639 -3947.1511 4007.5176 C
-3947.3391 4007.635 -3947.3679 4007.9993 -3947.7551 4008.0728 C
-3947.9287 4007.6592 -3947.2881 4008.1243 -3947.5569 4007.4263 c
-3947.6904 4007.0791 -3948.5791 4007.7256 -3948.2959 4006.9424 C
-3947.7913 4007.0552 L
-3947.7783 4006.5264 -3947.4128 4006.5576 -3947.4231 4006.1318 C
-3947.1145 4005.9375 -3946.8232 4006.531 -3946.5081 4006.0728 C
-3946.3772 4005.7312 -3946.6057 4005.0967 -3946.0842 4005.3733 C
-3945.6768 4006.1543 -3944.4761 4006.0022 -3944.0264 4005.8894 C
-3943.6328 4005.5535 L
-3943.6663 4005.2295 -3944.3848 4005.5974 -3944.1321 4005.1768 C
-3943.5183 4005.0491 L
-3943.5657 4005.2522 L
-3943.3623 4005.2979 -3943.1543 4005.0796 -3942.9688 4004.9639 C
-3943.1599 4005.344 -3943.6023 4005.1907 -3943.5144 4005.7412 C
-3943.2263 4005.8496 -3943.1824 4006.0535 -3942.9172 4005.948 C
-3942.9751 4005.9871 -3943.0249 4006.0413 -3943.0176 4006.1184 C
-3942.4343 4006.3562 -3942.4543 4005.5022 -3942.3081 4005.323 c
-3941.7217 4004.6084 -3942.8992 4004.6592 -3942.8242 4004.093 C
-3941.1121 4003.7913 L
-3941.2583 4003.969 -3941.4055 4004.1475 -3941.3503 4004.3733 C
-3940.9304 4004.6272 -3941.3408 4004.7998 -3940.7512 4004.7734 C
-3940.7932 4004.0215 -3940.0088 4004.3047 -3939.5923 4003.8699 C
-3939.3977 4004.1782 -3939.3577 4004.239 -3939.7832 4004.2493 C
-3939.7344 4004.7371 -3939.1631 4004.5491 -3938.96 4004.5942 C
-3938.8423 4004.4727 -3938.6416 4004.4019 -3938.5144 4004.2935 C
-3938.6848 4004.0491 -3938.6121 4003.7432 -3938.2432 4003.5352 C
-3938.2217 4003.4336 L
-3938.8264 4003.2998 -3939.7664 4002.7659 -3940.1455 4003.2659 C
-3940.0383 4003.0244 L
-3940.7383 4002.6016 -3941.5615 4003.9016 -3941.8843 4002.9792 C
-3941.8545 4002.6143 -3942.0249 4002.8955 -3942.0127 4002.3672 C
-3942.5281 4002.7803 L
-3942.4209 4002.5413 L
-3943.2976 4002.6592 L
-3943.2744 4002.5615 L
-3943.6912 4003.0391 -3944.0176 4003.4287 -3944.2783 4003.7471 C
-3944.2793 4003.9771 -3944.2522 4004.0479 -3944.3911 4004.217 C
-3944.5305 4004.3311 -3944.6362 4004.3486 -3944.7305 4004.3184 C
-3944.7312 4004.3184 -3944.7312 4004.3184 -3944.7312 4004.321 C
-3944.7312 4004.3184 -3944.7312 4004.3184 Y
-3944.9463 4004.2515 -3945.0896 4003.9207 -3945.3545 4003.7854 C
-3944.5393 4003.7295 L
-3944.4729 4003.3384 -3944.5422 4002.9336 -3944.9417 4002.6592 C
-3944.7783 4002.6455 -3944.71 4002.3408 -3944.9121 4002.2959 C
-3944.9343 4002.3975 -3945.4463 4002.5454 -3945.2512 4002.8562 C
-3946.0256 4002.9993 -3947.2793 4001.9734 -3948.4551 4002.7158 C
-3947.6104 4002.2695 -3949.1321 4002.1924 -3948.1943 4002.031 C
-3948.8489 4001.407 -3948.7576 4002.6475 -3949.4248 4002.5491 C
-3949.4817 4002.3252 -3949.0615 4002.5791 -3948.9082 4002.135 C
-3950.0176 4001.885 -3950.78 4003.1455 -3951.8533 4002.9558 C
-3951.8992 4002.4688 L
-3952.1023 4002.531 -3952.3279 4002.6006 -3952.5625 4002.6707 C
f
-3954.6855 4003.2783 m
-3954.8921 4003.3333 -3955.1016 4003.3894 -3955.3145 4003.4463 C
-3955.2937 4003.4539 -3955.2744 4003.4539 -3955.2527 4003.46 C
-3955.8733 4003.8535 L
-3955.4919 4004.0435 -3955.2407 4004.5791 -3955.7744 4004.8286 C
-3955.7295 4004.6272 -3955.8855 4004.3799 -3955.7 4004.2622 C
-3956.0576 4003.969 -3956.8423 4003.6863 -3956.6377 4004.4224 C
-3955.9504 4003.7271 -3956.4775 4005.3604 -3955.9375 4004.844 C
-3956.2273 4005.323 -3956.5144 4005.1079 -3956.7881 4005.3223 C
-3956.5032 4004.9207 -3956.8545 4004.4126 -3957.2825 4004.2212 C
-3957.4688 4004.3398 -3957.9729 4004.2256 -3958.2825 4004.4207 C
-3958.1721 4004.8711 -3958.4417 4005.1287 -3957.9373 4005.2422 C
-3958.1223 4005.3604 -3958.4087 4005.4539 -3958.7295 4005.2227 C
-3958.6023 4005.1455 -3958.3799 4005.0896 -3958.3953 4004.927 C
-3958.6023 4004.5127 -3958.8447 4004.531 -3958.9785 4004.3542 C
-3959.0852 4004.3799 -3959.1929 4004.4019 -3959.2976 4004.4263 C
-3959.2664 4004.4646 -3959.2393 4004.5166 -3959.22 4004.5811 C
-3959.5745 4004.9783 L
-3959.1023 4004.7659 -3959.3562 4005.1863 -3959.3623 4005.4502 c
-3959.3496 4004.9224 -3959.6663 4005.3806 -3959.8279 4005.3982 C
-3959.4768 4005.9558 L
-3959.6465 4006.2344 -3960.0759 4005.5535 -3959.9873 4006.1052 C
-3959.2424 4006.3264 -3958.9561 4006.2312 -3958.2825 4006.0654 C
-3958.5559 4005.6328 L
-3957.7959 4005.3267 -3958.0872 4006.3752 -3957.2344 4006.3542 C
-3956.8799 4005.9592 -3955.9519 4006.3267 -3955.9343 4005.5352 C
-3956.0413 4005.7764 -3955.4033 4006.239 -3955.1111 4005.8806 C
-3954.7881 4005.157 -3953.8113 4005.0596 -3954.1072 4004.7295 C
-3954.3711 4004.7207 -3954.7263 4005.1184 -3954.9385 4004.6475 C
-3954.4265 4004.4966 L
-3954.7625 4004.1016 L
-3954.5889 4004.2432 -3954.6057 4003.8584 -3954.6855 4003.2783 C
f
1 D
-3966.1455 3998.8384 m
-3966.1511 3998.8352 -3966.1584 3998.8333 -3966.1653 3998.8286 C
-3966.1577 3998.8311 -3966.1504 3998.8311 -3966.1433 3998.8311 C
-3966.1455 3998.8384 L
f
*U
0 D
-3919.9968 4002.8311 m
-3919.8496 4002.6504 -3919.4856 4002.6807 -3919.5569 4002.2935 C
-3919.5481 4002.719 -3920.2073 4002.3584 -3919.9968 4002.8311 C
f
-3919.5615 4003.2483 m
-3919.5359 4003.1462 -3919.5537 4002.9827 -3919.3904 4002.9683 C
-3919.8401 4003.0767 L
-3919.5615 4003.2483 L
f
-3919.1052 4006.1592 m
-3918.8733 4005.8423 -3918.7263 4005.6631 -3918.3623 4005.6919 C
-3918.2256 4006.7312 -3918.9583 4005.9822 -3919.1233 4006.9512 C
-3918.4561 4007.0491 -3918.2512 4006.1416 -3917.7024 4006.0535 C
-3917.9744 4005.6199 -3919.0852 4005.3699 -3919.1052 4006.1592 C
f
-3919.4016 4007.4734 m
-3919.0305 4007.239 L
-3919.0671 4007.1782 L
-3919.4385 4007.4126 L
-3919.4016 4007.4734 L
f
-3927.4385 3998.4424 m
-3927.4719 3998.1184 -3927.7031 3998.4382 -3927.8271 3998.5166 C
-3927.7263 3998.5376 -3927.5852 3998.6233 -3927.4385 3998.4424 C
f
-4000.3503 3998.1052 m
-4003.1809 3998.4182 L
-4002.3665 3998.3367 -4001.6145 3998.2959 -4000.3503 3998.1052 C
f
-3936.8313 4000.5664 m
-3936.0713 4000.2603 -3935.7336 3999.6995 -3934.9592 3999.5576 C
-3935.9775 3998.9031 -3936.3042 4000.5796 -3937.1592 3999.9092 C
-3936.8313 4000.5664 L
f
-3936.5632 3997.9751 m
-3936.4373 3998.5867 -3937.1497 3998.6919 -3937.0393 3999.1406 C
-3936.5271 3998.9912 -3936.8008 3998.5576 -3936.3359 3998.6104 C
-3936.5632 3997.9751 L
f
-3933.1191 4008.0886 m
-3933.3496 4008.407 L
-3933.1641 4008.2913 L
-3933.1191 4008.0886 L
f
-3940.0271 3998.5176 m
-3939.9431 3998.3799 L
-3940.3242 3998.1863 L
-3940.0271 3998.5176 L
f
-3939.8591 3998.239 m
-3939.9431 3998.3799 L
-3939.9431 3998.3799 L
-3939.8591 3998.239 L
f
-3933.4153 4009.4016 m
-3933.0728 4009.531 L
-3932.9033 4009.2515 L
-3933.4153 4009.4016 L
f
-3936.4385 4006.1187 m
-3936.1321 4005.9224 L
-3936.1929 4005.96 -3936.6121 4005.7092 -3936.4385 4006.1187 C
f
-3942.3545 3998.2583 m
-3942.7273 3998.4932 L
-3942.6892 3998.5535 L
-3942.3176 3998.3184 L
-3942.3545 3998.2583 L
f
-3938.8369 4007.8054 m
-3938.6252 4008.2759 -3939.4482 4007.9326 -3939.0127 4008.3486 C
-3938.6252 4008.2759 -3938.7825 4008.0303 -3938.8369 4007.8054 C
f
-3943.3352 4004.6155 m
-3943.3855 4004.6155 -3943.4385 4004.6328 -3943.4895 4004.6851 C
-3943.4287 4004.6653 -3943.3777 4004.6406 -3943.3352 4004.6155 C
f
-3943.3352 4004.6155 m
-3943.1729 4004.6155 -3943.0105 4004.7959 -3942.8992 4004.6592 C
-3943.1016 4004.447 -3943.1753 4004.5264 -3943.3352 4004.6155 C
f
-3945.1953 4004.7256 m
-3945.0481 4004.759 L
-3945.1985 4004.9912 -3945.1272 4004.9573 -3944.9929 4004.7703 C
-3944.8369 4004.7544 -3944.8457 4004.6055 -3944.8271 4004.5039 C
-3944.7959 4004.447 -3944.7649 4004.385 -3944.7312 4004.321 C
-3944.7793 4004.3806 -3944.8225 4004.4399 -3944.8591 4004.4912 C
-3945.1008 4004.4871 -3945.2483 4004.5103 -3945.1953 4004.7256 C
f
-3952.1052 3996.7998 m
-3951.5615 3996.9751 -3951.4209 3997.0596 -3951.4504 3997.4248 C
-3950.9343 3997.5413 -3951.0144 3996.9126 -3950.7031 3996.7659 C
-3951.2871 3996.8367 -3951.4065 3996.6682 -3952.1052 3996.7998 C
f
-3950.7031 3996.7659 m
-3950.6377 3996.759 -3950.5752 3996.7515 -3950.4993 3996.7371 C
-3950.5842 3996.7256 -3950.6472 3996.7412 -3950.7031 3996.7659 C
f
-3943.0212 4008.717 m
-3943.3591 4009.2759 L
-3943.2351 4009.1982 L
-3943.0212 4008.717 L
f
-3952.9121 3996.6155 m
-3952.8113 3996.6392 -3952.6497 3996.6233 -3952.5703 3996.7483 C
-3952.5413 3996.3806 -3953.0127 3996.593 -3952.9121 3996.6155 c
f
-3950.8152 4003.7744 m
-3950.76 4003.9983 -3950.4121 4003.8643 -3950.2705 4003.9502 C
-3950.4736 4003.9031 -3950.6392 4003.23 -3950.8152 4003.7744 C
f
-3954.4719 3998.1216 m
-3954.3711 3998.1455 -3954.2161 3998.3911 -3954.2832 3998.6936 C
-3954.1367 3998.5144 -3953.9385 3997.8699 -3954.4719 3998.1216 C
f
-3951.8088 4003.7092 m
-3951.7312 4003.8333 L
-3951.3591 4003.5974 L
-3951.8088 4003.7092 L
f
-3950.4817 4009.1006 m
-3950.0632 4008.6653 -3951.1455 4008.0491 -3950.4248 4007.6807 C
-3951.3545 4007.2246 -3950.3535 4008.2979 -3951.0393 4008.2271 C
-3950.6377 4008.3743 -3950.4409 4008.925 -3950.4817 4009.1006 C
f
-3951.0393 4008.2271 m
-3951.0977 4008.2039 -3951.1609 4008.1907 -3951.2295 4008.1895 C
-3951.1536 4008.21 -3951.0923 4008.2212 -3951.0393 4008.2271 C
f
-3956.9287 4005.469 m
-3956.8679 4005.4238 -3956.8264 4005.3743 -3956.7881 4005.3223 C
-3956.8359 4005.3584 -3956.8816 4005.4031 -3956.9287 4005.469 C
f
-3953.2295 4008.5867 m
-3952.6023 4007.9326 L
-3953.0212 4008.3672 -3954.0752 4008.3411 -3954.0095 4008.9927 C
-3953.6682 4009.1252 -3953.2576 4008.9512 -3953.0889 4008.6707 C
-3953.2295 4008.5867 L
f
-3960.4287 3996.7764 m
-3960.1577 3996.5176 L
-3960.4961 3996.4424 L
-3960.3992 3996.5398 -3960.5745 3997.0176 -3960.4287 3996.7764 C
f
-3960.5615 3996.4287 m
-3960.4961 3996.4424 L
-3960.5105 3996.4263 -3960.5313 3996.4199 -3960.5615 3996.4287 C
f
-3955.7424 4005.1543 m
-3955.5398 4005.1995 -3955.3777 4005.1814 -3955.1929 4005.0664 C
-3955.2695 4004.9424 -3955.7744 4004.8286 -3955.7424 4005.1543 C
f
-3962.3369 3997.7231 m
-3961.8896 3997.6118 L
-3962.3777 3997.6592 L
-3962.3369 3997.7231 L
f
-3964.4241 3996.6155 m
-3964.5012 3996.4932 L
-3964.8721 3996.7271 L
-3964.7937 3996.8496 L
-3964.4241 3996.6155 L
f
-3961.6943 4009.4326 m
-3961.3911 4009.5022 -3961.1543 4008.9172 -3961.2336 4008.7935 C
-3961.8215 4008.8184 L
-3961.6721 4009.3311 -3961.6584 4008.8035 -3961.3176 4008.9336 C
-3961.6943 4009.4326 L
f
-3979.9153 3997.573 m
-3979.7839 3997.2312 -3979.1409 3997.4292 -3979.1072 3997.7544 C
-3979.1936 3997.8955 -3979.5422 3998.0303 -3979.3232 3998.2371 C
-3978.8145 3997.3975 L
-3978.1377 3997.9207 -3979.3289 3998.5015 -3979.6631 3998.7979 C
-3978.9736 3998.9063 -3978.7693 3998.3542 -3978.0359 3998.3574 C
-3978.2522 3998.2822 -3978.3889 3998.0728 -3978.5032 3997.8926 C
-3978.5281 3997.301 -3977.8447 3997.5632 -3977.3562 3997.5166 C
-3977.6672 3997.26 -3977.4873 3997.0435 -3977.2607 3996.8115 C
-3977.22 3996.7935 -3977.1929 3996.759 -3977.1736 3996.719 C
-3977.1472 3996.6919 -3977.1223 3996.6653 -3977.0967 3996.6367 C
-3977.1553 3996.6375 L
-3977.1511 3996.571 -3977.1641 3996.4912 -3977.2063 3996.3806 C
-3977.6162 3996.5535 -3977.9297 3996.0596 -3978.1936 3996.052 C
-3977.9329 3997.0132 -3979.0923 3996.2744 -3979.4241 3996.5703 C
-3979.8071 3996.6653 L
-3979.9504 3996.6672 L
-3979.9792 3996.5615 -3979.9385 3996.4292 -3979.72 3996.239 C
-3979.9023 3996.4287 -3980.5105 3996.3623 -3980.4543 3996.6707 C
-3981.8423 3996.6848 L
-3981.8855 3996.6455 -3981.9287 3996.5967 -3981.9607 3996.5264 C
-3982.0088 3996.5879 -3982.0168 3996.6375 -3982.0105 3996.6863 C
-3988.0576 3996.7483 L
-3987.7593 3996.823 -3987.5012 3997.0435 -3987.1936 3997.1494 C
-3987.6553 3997.7876 -3986.6892 3997.2646 -3986.8247 3997.8672 C
-3987.0322 3998.0867 -3987.3359 3998.0176 -3987.5168 3997.8716 C
-3987.5842 3998.1763 -3987.3264 3998.4463 -3987.3562 3998.8096 C
-3986.5935 3999.1936 -3986.4768 3997.7344 -3985.7312 3997.9573 C
-3985.7607 3998.3223 -3985.9912 3998.6416 -3985.5032 3998.5923 C
-3985.6272 3998.6707 L
-3984.8457 3998.2622 -3985.0183 3999.4966 -3984.5264 3998.4951 C
-3984.5393 3999.0222 L
-3984.1848 3998.6252 -3983.4951 3998.6216 -3983.1064 3998.5491 C
-3983.1296 3998.6504 L
-3982.0393 3998.0479 -3982.5176 3998.5222 -3981.2932 3998.2703 C
-3981.8567 3998.885 L
-3981.4343 3999.1392 -3981.3391 3998.4712 -3981.0359 3998.5398 C
-3981.0576 3998.6416 -3980.9873 3999.0264 -3981.2737 3999.1233 C
-3979.7881 3998.1851 L
-3979.4336 3997.7876 -3979.8601 3997.7979 -3979.9153 3997.573 C
f
-3978.0359 3998.3574 m
-3977.9573 3998.385 -3977.8679 3998.3975 -3977.7625 3998.3774 C
-3977.8643 3998.3604 -3977.9519 3998.3574 -3978.0359 3998.3574 C
f
-3988.4824 3996.7522 m
-3988.0576 3996.7483 L
-3988.1892 3996.7158 -3988.3264 3996.7056 -3988.4824 3996.7522 C
f
-3975.9065 3997.2056 m
-3976.1641 3996.9336 -3975.7136 3996.8247 -3975.6687 3996.6216 C
-3976.5913 3996.6318 L
-3976.5872 3996.8352 -3976.6785 3997.0623 -3976.6599 3997.2483 C
-3975.9065 3997.2056 L
f
-3976.8584 3996.2493 m
-3976.8896 3996.3894 -3976.9873 3996.5166 -3977.0967 3996.6367 C
-3976.5913 3996.6318 L
-3976.5945 3996.4792 -3976.6511 3996.3408 -3976.8584 3996.2493 C
f
-3976.7607 4007.0896 m
-3976.9241 4007.1079 L
-3977.1711 4007.2646 L
-3976.7607 4007.0896 L
f
-3979.3152 4006.1963 m
-3979.1201 4006.5044 -3978.75 4006.2703 -3978.6262 4006.1924 C
-3979.0527 4006.2014 -3978.8679 4006.0854 -3979.3152 4006.1963 C
f
-3978.7881 4009.4966 m
-3979.1992 4009.6707 L
-3979.1609 4009.7312 L
-3978.7881 4009.4966 L
f
-3991.6223 3998.8279 m
-3991.6897 3998.8398 -3991.7551 3998.8486 -3991.8232 3998.8623 C
-3991.7312 3998.8643 -3991.6711 3998.8496 -3991.6223 3998.8279 C
f
-3988.0945 3998.3252 m
-3989.0752 3997.7334 -3987.4519 3997.8333 -3987.76 3997.0752 C
-3988.2937 3997.3264 L
-3988.2483 3997.1233 L
-3988.8992 3997.1895 L
-3988.7656 3997.5376 -3988.6653 3997.5591 -3988.6943 3997.9248 C
-3989.5632 3997.7822 -3988.9683 3997.4912 -3989.6057 3997.0303 C
-3990.5769 3997.0967 L
-3990.4983 3996.9871 L
-3990.5801 3996.9951 -3990.6162 3997.0413 -3990.6443 3997.1006 C
-3993.9172 3997.3279 L
-3994.5127 3997.6184 -3993.5879 3997.9856 -3994.0271 3998.5222 C
-3993.3369 3998.5212 -3992.3113 3998.9104 -3992.2527 3998.1814 C
-3992.2759 3998.2822 -3992.3215 3998.4827 -3992.1816 3998.5686 C
-3991.7825 3997.969 L
-3992.1631 3997.7783 L
-3991.7617 3997.1807 -3990.4656 3997.3135 -3990.2312 3997.6848 C
-3990.9683 3997.8887 -3990.5984 3998.6084 -3991.6252 3998.217 C
-3991.5791 3998.4019 -3991.3911 3998.7271 -3991.6223 3998.8279 C
-3990.4192 3998.6155 -3989.3408 3998.948 -3988.0945 3998.3252 C
f
-4000.1631 3998.6763 m
-4000.1536 3998.6104 L
-4000.1753 3998.6455 -4000.1824 3998.6719 -4000.1631 3998.6763 C
f
-3999.7593 3998.7659 m
-3999.1729 3998.052 L
-4000.0872 3998.1096 L
-4000.1536 3998.6104 L
-4000.0728 3998.4827 -3999.7522 3998.2295 -3999.6279 3998.425 C
-3999.7593 3998.7659 L
f
-3998.4919 3997.6199 m
-3998.9641 3997.8333 -3998.9385 3998.4224 -3998.6809 3998.6919 C
-3999.1145 3998.9646 -3998.9097 3998.0576 -3999.2083 3998.6807 C
-3999.1985 3999.1062 -3998.6641 3998.8562 -3998.5413 3998.7783 C
-3998.4919 3997.6199 L
f
-3995.0081 3997.9307 m
-3995.1409 3998.175 L
-3994.8137 3998.239 L
-3995.0081 3997.9307 L
f
-3995.1409 3998.175 m
-3995.4656 3998.1096 L
-3995.4431 3998.2913 -3995.4209 3998.4683 -3995.3679 3998.5923 C
-3995.1409 3998.175 L
f
-3996.3176 3997.9395 m
-3996.4551 3997.8955 -3996.6072 3997.8623 -3996.7922 3997.8462 C
-3996.3176 3997.9395 L
f
-3995.9463 3998.0896 m
-3995.9573 3998.0127 L
-3996.3176 3997.9395 L
-3996.1848 3997.9856 -3996.0657 3998.0352 -3995.9463 3998.0896 C
f
-3995.4656 3998.1096 m
-3995.5183 3997.6963 -3995.5801 3997.2622 -3996.0496 3997.3774 C
-3995.9573 3998.0127 L
-3995.4656 3998.1096 L
f
-3981.7783 4008.8743 m
-3982.1497 4009.1079 L
-3982.1104 4009.1719 L
-3981.7393 4008.9375 L
-3981.7783 4008.8743 L
f
-3983.9209 4008.4966 m
-3984.0127 4008.5686 -3984.0823 4008.6455 -3984.1455 4008.7231 C
-3984.0488 4008.6782 -3983.9719 4008.6096 -3983.9209 4008.4966 C
f
-3985.5137 4011.3184 m
-3985.9504 4010.9031 -3984.9111 4010.7695 -3985.72 4010.5854 C
-3985.7913 4010.1982 -3985.4121 4009.6992 -3985.0313 4009.8916 C
-3985.0615 4010.2559 -3985.4023 4010.1252 -3985.1682 4010.4966 C
-3984.9153 4010.0752 -3984.8191 4010.3623 -3984.9072 4009.8135 C
-3984.4817 4009.4712 -3984.4343 4009.0811 -3984.1455 4008.7231 C
-3984.6599 4008.9646 -3985.74 4008.4019 -3986.3928 4009.1062 C
-3986.7527 4009.7659 -3986.5344 4010.6672 -3986.5359 4011.6199 C
-3986.4817 4011.844 -3985.5488 4011.9502 -3985.5137 4011.3184 C
f
-3984.8264 4012.2703 m
-3984.6243 4012.3174 -3984.5625 4012.2791 -3984.4385 4012.1995 C
-3984.4719 4011.8743 -3984.6631 4012.2559 -3984.8264 4012.2703 C
f
-3989.4719 4005.0942 m
-3989.5105 4005.2295 -3989.8762 4005.3975 -3989.7976 4005.6318 C
-3989.2432 4005.46 L
-3989.3733 4005.4382 -3989.4192 4005.2722 -3989.4719 4005.0942 C
f
-3989 4005.3875 m
-3989.2432 4005.46 L
-3989.1824 4005.4727 -3989.1072 4005.4539 -3989 4005.3875 C
f
-3989.4983 4005.009 m
-3989.4895 4005.0376 -3989.4817 4005.0664 -3989.4719 4005.0942 C
-3989.4641 4005.0654 -3989.4656 4005.0352 -3989.4983 4005.009 C
f
-3997.6631 3997.7014 m
-3997.6553 3997.4399 -3997.9023 3997.5967 -3998.0264 3997.6743 C
-3997.9255 3997.6963 -3997.7839 3997.7822 -3997.6631 3997.7014 C
f
-4006.9641 3998.7312 m
-4007.1824 3998.5222 L
-4007.1052 3998.6475 -4007.0657 3998.7092 -4006.9641 3998.7312 C
f
-4010.3279 4005.8762 m
-4010.3342 4005.927 -4010.3503 4005.969 -4010.3721 4006.009 C
-4010.3503 4005.9771 -4010.3352 4005.9336 -4010.3279 4005.8762 c
f
-4010.3721 4006.009 m
-4010.5212 4006.2271 -4010.9817 4005.8887 -4011.1472 4006.219 C
-4011.1262 4006.1187 L
-4011.4343 4006.3142 L
-4011.1455 4006.2854 -4010.5393 4006.3267 -4010.3721 4006.009 C
f
U
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 40)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7882.4521 7883.5967 m
-7490.6909 7883.5967 L
-7490.6909 7791.9077 L
-7882.4521 7791.9077 L
-7882.4521 7883.5967 L
n
0 O
0 0 0 1 k
1 XR
-7495.3535 7825.9199 m
-7497.1113 7825.9199 -7616.7817 7828.0918 -7692.6519 7829.4717 C
-7713.4663 7828.5352 -7734.2529 7827.2222 -7755.0547 7825.5024 C
-7757.5327 7825.1509 -7760.3472 7824.7949 -7761.8584 7824.6006 c
-7762.7114 7824.4863 -7763.5732 7824.3853 -7764.4375 7824.2935 C
-7763.9829 7824.0605 -7763.54 7823.7998 -7763.1167 7823.4941 C
-7762.25 7822.7324 -7761.3955 7821.8325 -7760.8735 7820.4541 C
-7760.8979 7820.1685 -7760.6997 7819.8188 -7760.6523 7819.5293 c
-7760.5532 7818.9116 -7760.6382 7818.1631 -7760.7319 7817.6274 c
-7760.7939 7817.2725 -7760.9551 7817.0254 -7761.0259 7816.731 c
-7761.0488 7816.6348 -7760.9785 7816.5757 -7761.0059 7816.5024 c
-7761.1396 7816.1484 -7761.5313 7815.5518 -7761.7539 7815.2261 c
-7761.8579 7815.0757 -7761.9873 7814.9775 -7762.1035 7814.8188 c
-7762.1196 7814.7964 -7762.0669 7814.7349 -7762.0928 7814.7061 c
-7762.6484 7814.0664 -7763.4312 7813.5415 -7764.3955 7813.0757 c
-7764.4546 7813.0508 -7764.4639 7813.1445 -7764.5366 7813.0869 C
-7764.8213 7812.9653 -7765.1143 7812.8535 -7765.3945 7812.7915 c
-7766.8965 7812.4629 -7768.7163 7812.8477 -7769.8027 7813.6328 c
-7770.7998 7814.355 -7771.5308 7815.8623 -7771.4678 7817.0742 c
-7771.4126 7818.1094 -7770.6665 7819.2573 -7769.4458 7820.0352 c
-7768.3604 7820.7295 -7767.0479 7820.9829 -7766.2373 7820.3589 C
-7766.6499 7820.2295 -7766.9688 7820.0332 -7767.0811 7819.7524 C
-7767.0908 7819.4766 -7767.0967 7819.1992 -7766.8755 7818.8589 C
-7766.4517 7818.4863 -7765.7925 7818.2485 -7765.1235 7818.7158 c
-7764.1846 7819.3701 -7764.0728 7820.7886 -7765.0342 7821.5356 C
-7765.3086 7821.6406 -7765.5586 7821.8789 -7765.75 7821.9829 c
-7766.1826 7822.2192 -7766.5586 7822.3853 -7766.9751 7822.5435 c
-7768.0938 7822.9595 -7769.4839 7823.4185 -7770.5327 7823.5967 c
-7770.7114 7823.6284 -7770.8989 7823.647 -7771.0806 7823.6733 C
-7774.4038 7823.3789 -7777.54 7823.0693 -7780.1416 7822.5264 C
-7780.1138 7822.5229 -7780.0908 7822.5244 -7780.0586 7822.5205 c
-7779.2378 7822.4199 -7778.6309 7822.2524 -7777.9043 7822.0127 c
-7777.6328 7821.9238 -7777.3184 7821.9116 -7777.0825 7821.8149 c
-7776.9985 7821.7856 -7776.9409 7821.6597 -7776.8472 7821.6133 c
-7776.5371 7821.4604 -7776.2129 7821.3662 -7775.8999 7821.1597 c
-7774.9097 7820.5054 -7773.8774 7819.3359 -7773.7617 7817.8677 C
-7773.9463 7816.8262 -7774.3643 7815.8525 -7775.5938 7815.0781 c
-7775.7217 7814.9951 -7775.8662 7814.96 -7775.9995 7814.8828 C
-7777.8516 7814.2168 -7779.5913 7815.3135 -7779.8066 7817.2061 C
-7779.7119 7817.3755 -7779.6499 7817.5527 -7779.6616 7817.7524 C
-7779.2939 7818.4492 -7777.9033 7819.0557 -7777.3057 7818.6143 C
-7777.6133 7818.5566 -7777.7495 7818.5254 -7777.8638 7818.2637 C
-7777.8892 7817.6069 -7777.0679 7817.4336 -7776.6528 7818.0176 C
-7776.4966 7818.7021 -7776.7676 7819.2524 -7777.2939 7819.8101 c
-7777.5068 7820.0352 -7777.7837 7820.1685 -7778.0566 7820.354 c
-7778.4199 7820.6016 -7778.7495 7820.8828 -7779.1118 7821.0332 c
-7779.4385 7821.1685 -7779.8115 7821.2012 -7780.1445 7821.2886 c
-7780.2349 7821.3101 -7780.2969 7821.3613 -7780.3706 7821.3789 c
-7780.6274 7821.4336 -7780.8359 7821.5142 -7781.0879 7821.5469 c
-7781.4209 7821.5854 -7781.7739 7821.5488 -7782.1528 7821.5854 c
-7782.3398 7821.6055 -7782.5195 7821.6943 -7782.7144 7821.7109 c
-7782.8413 7821.7207 -7782.9722 7821.7207 -7783.1025 7821.7222 C
-7785.8135 7820.8213 -7788.0957 7819.6094 -7789.9814 7817.2783 c
-7793.6704 7812.7222 -7788.0415 7808.5566 -7786.9902 7812.5967 C
-7788.9668 7814.0352 -7792.5874 7817.1196 -7784.8892 7817.2471 C
-7776.6045 7815.7549 -7783.6982 7800.4917 -7793.6509 7804.5576 c
-7802.0151 7807.9741 -7798.1328 7816.6382 -7792.4658 7820.2935 c
-7783.9902 7825.7559 -7774.5376 7826.4917 -7764.7012 7826.5845 C
-7775.3862 7831.0488 -7789.9243 7828.4028 -7797.9897 7820.3804 c
-7802.1011 7816.2935 -7806.0435 7809.9912 -7804.8193 7803.8892 c
-7803.5742 7797.6816 -7797.1616 7803.4238 -7802.0957 7803.4424 C
-7801.8896 7809.0054 -7788.6387 7802.9648 -7794.9307 7794.8271 c
-7800.6011 7787.4917 -7810.5698 7795.522 -7812.3242 7801.9478 c
-7818.0239 7822.8359 -7788.3545 7828.7119 -7774.3813 7829.4238 C
-7786.1143 7832.7749 -7802.3892 7830.2734 -7813.5547 7825.7856 c
-7817.9663 7824.0093 -7822.9707 7820.8926 -7825.5479 7816.7773 c
-7829.4619 7810.5264 -7822.4268 7806.2837 -7821.8955 7808.4028 c
-7821.4697 7810.0957 -7827.3765 7810.6235 -7822.8267 7813.6992 c
-7818.8091 7816.4185 -7815.2759 7810.2095 -7814.4619 7807.0781 c
-7810.6782 7792.5317 -7832.0601 7794.4604 -7834.3667 7808.1982 c
-7839.5103 7838.8271 -7793.3071 7832.4575 -7777.4902 7831.5928 C
-7777.7124 7831.7612 -7777.9331 7831.9189 -7778.1543 7832.0825 C
-7783.4346 7833.5854 -7788.6416 7835.7861 -7793.46 7838.5469 C
-7807.9546 7840.2813 -7820.7495 7829.8901 -7836.5913 7824.6152 c
-7845.5635 7821.6284 -7856.0933 7825.9277 -7864.2778 7821.314 c
-7868.6235 7818.854 -7871.6982 7816.2656 -7873.2959 7811.0518 C
-7874.9092 7802.1104 -7865.2979 7800.9717 -7867.1396 7805.6416 C
-7868.8428 7805.9688 -7868.1772 7804.8345 -7869.3354 7804.8413 C
-7873.2861 7808.5479 -7865.0244 7813.731 -7861.1606 7810.4316 c
-7854.4497 7804.7031 -7859.2563 7796.3325 -7866.0864 7794.0557 C
-7884.5703 7794.25 -7885 7816.8613 -7879.0474 7829.3589 c
-7863.2217 7862.5854 -7829.1445 7850.5825 -7801.5376 7843.5479 C
-7805.2817 7846.0732 -7807.8975 7849.6421 -7810.5747 7853.2158 c
-7815.2197 7859.4165 -7817.6694 7868.854 -7809.0024 7872.8613 C
-7808.1616 7876.9829 -7806.6392 7880.8853 -7802.5669 7882.7695 c
-7797.7471 7885 -7792.8457 7882.5581 -7791.5508 7877.4512 C
-7791.4766 7874.6719 -7792.1968 7872.8262 -7794.5938 7871.3887 c
-7796.1733 7870.4414 -7801.5176 7870.5308 -7798.8574 7873.5342 C
-7796.9663 7872.0415 -7797.1323 7874.4863 -7798.0112 7875.6006 C
-7800.8823 7875.5693 -7801.5771 7873.4863 -7801.5156 7870.5181 c
-7801.5151 7870.4956 -7801.5142 7870.4688 -7801.5146 7870.4429 C
-7801.3574 7863.1367 -7800.1343 7857.3237 -7798.0718 7852.7285 C
-7798.0713 7852.73 -7798.0708 7852.731 -7798.0698 7852.7324 c
-7797.8242 7853.2158 -7797.4819 7853.5 -7797.2485 7853.894 c
-7797.1729 7854.0229 -7797.2495 7854.1382 -7797.1753 7854.2334 c
-7796.8262 7854.6855 -7795.9971 7855.3701 -7795.5313 7855.7397 c
-7795.3135 7855.9116 -7795.0835 7855.9985 -7794.8477 7856.1724 c
-7794.8125 7856.1973 -7794.8613 7856.3101 -7794.8115 7856.3413 c
-7793.7256 7857.0176 -7792.3638 7857.4277 -7790.7661 7857.6709 C
-7790.6699 7857.6816 -7790.6978 7857.5435 -7790.5669 7857.5933 C
-7790.1035 7857.6406 -7789.6309 7857.6733 -7789.1982 7857.6382 c
-7786.8862 7857.4453 -7784.4316 7856.0845 -7783.2129 7854.4668 c
-7782.0942 7852.9854 -7781.7095 7850.4854 -7782.3379 7848.7646 c
-7782.8774 7847.2949 -7784.4629 7845.9692 -7786.5684 7845.3901 c
-7788.4419 7844.8735 -7790.4492 7845.0845 -7791.3408 7846.3477 C
-7790.6875 7846.3535 -7790.1406 7846.4941 -7789.8545 7846.8477 C
-7789.7178 7847.2422 -7789.5859 7847.6382 -7789.7539 7848.2261 C
-7790.2002 7848.9541 -7791.0469 7849.5894 -7792.2178 7849.2124 c
-7793.4604 7848.8135 -7794.2119 7847.5781 -7794.0532 7846.3486 C
-7788.7505 7840.2031 -7781.0386 7837.646 -7772.2539 7837.0527 C
-7772.2886 7837.0684 -7772.3218 7837.0796 -7772.3604 7837.0972 c
-7773.5015 7837.6064 -7774.3027 7838.1143 -7775.2437 7838.7832 c
-7775.5957 7839.0332 -7776.0439 7839.1909 -7776.3428 7839.4316 c
-7776.4492 7839.5166 -7776.4766 7839.7222 -7776.5913 7839.8301 c
-7776.9707 7840.1895 -7777.3975 7840.4688 -7777.7563 7840.9063 c
-7778.8945 7842.2886 -7779.8662 7844.4341 -7779.3809 7846.6016 C
-7778.6523 7848.0229 -7777.6162 7849.2437 -7775.4995 7849.814 c
-7775.2788 7849.8755 -7775.0542 7849.8623 -7774.8276 7849.9185 C
-7771.8613 7850.0527 -7769.8369 7847.7021 -7770.3667 7844.8755 C
-7770.5781 7844.6733 -7770.7471 7844.4429 -7770.8184 7844.1509 C
-7771.6582 7843.3101 -7773.9336 7843.0508 -7774.5996 7843.9517 C
-7774.1309 7843.9004 -7773.9199 7843.8848 -7773.6387 7844.2109 C
-7773.3105 7845.147 -7774.4189 7845.7612 -7775.2759 7845.1045 C
-7775.8052 7844.186 -7775.6587 7843.2695 -7775.1479 7842.231 c
-7774.9409 7841.8101 -7774.5991 7841.5 -7774.2881 7841.1104 c
-7773.8735 7840.5933 -7773.5239 7840.0415 -7773.0669 7839.6621 c
-7772.6563 7839.3232 -7772.1318 7839.1094 -7771.6899 7838.8364 c
-7771.5708 7838.7646 -7771.5039 7838.6636 -7771.4043 7838.6069 c
-7771.0596 7838.4111 -7770.7935 7838.2031 -7770.4438 7838.0469 c
-7769.9819 7837.8413 -7769.4561 7837.7373 -7768.9253 7837.5142 c
-7768.6636 7837.4063 -7768.4443 7837.1948 -7768.1709 7837.0854 c
-7768.0063 7837.0215 -7767.8311 7836.9688 -7767.6592 7836.9141 C
-7766.2695 7836.9185 -7764.8613 7836.9575 -7763.4375 7837.0342 c
-7761.7285 7837.0796 -7759.4653 7837.0933 -7757.5728 7837.1665 C
-7725.4688 7833.6533 -7692.98 7832.73 -7660.4746 7832.2822 C
-7587.0664 7833.6152 -7496.8774 7835.2485 -7495.3535 7835.2485 c
-7492.7773 7835.2485 -7490.6909 7833.1597 -7490.6909 7830.5845 c
-7490.6909 7828.0078 -7492.7773 7825.9199 -7495.3535 7825.9199 c
f
U
%AI8_EndBrushPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Brush Manager Order)
(Adobe Brush Manager Order)
( Adobe Calligraphic Brush Tool/ 2 pt. Oval/ Adobe Calligraphic) -
( Brush Tool/ 5 pt. Oval/ Adobe Calligraphic Brush Tool/ 5 pt. ) -
(Flat/ Adobe Calligraphic Brush Tool/ 3 pt. Round/ Adobe Callig) -
(raphic Brush Tool/ 7 pt. Round/ Adobe Calligraphic Brush Tool/) -
( 15 pt. Round/ Adobe ArtOnPath Brush Tool/ Chalk - Scribble/ A) -
(dobe ArtOnPath Brush Tool/ Floral Stem/ Adobe PatternOnPath Br) -
(ush Tool/ Decorative Border/) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(15 pt. Round)
(1 15 15 100 100 15 15 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(2 pt. Oval)
(1 2 2 26 74 15 15 0 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(3 pt. Round)
(1 3 3 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5 pt. Flat)
(1 5 5 0 0 90 90 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5 pt. Oval)
(1 5 5 10 90 -65 35 0 1 1 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(7 pt. Round)
(1 7 7 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Chalk - Scribble)
(1 / Unnamed 3/ / / / / 5 0 0 0 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Floral Stem)
(1 / Unnamed Brush Pat 40/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(Decorative Border)
(1 / New Pattern 1/ / New Pattern 2/ / / 5 0 0.00392157 0.00392) -
(157 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([Registration]) 0 Xs
([Registration])
Pc
0 0 0 0 k
(White)
Pc
0 0 0 1 k
(Black)
Pc
0 1 1 0 k
(CMYK Red)
Pc
0 0 1 0 k
(CMYK Yellow)
Pc
1 0 1 0 k
(CMYK Green)
Pc
1 0 0 0 k
(CMYK Cyan)
Pc
1 1 0 0 k
(CMYK Blue)
Pc
0 1 0 0 k
(CMYK Magenta)
Pc
0.15 1 0.9 0.1 k
(C=15 M=100 Y=90 K=10)
Pc
0 0.9 0.85 0 k
(C=0 M=90 Y=85 K=0)
Pc
0 0.8 0.95 0 k
(C=0 M=80 Y=95 K=0)
Pc
0 0.5 1 0 k
(C=0 M=50 Y=100 K=0)
Pc
0 0.35 0.85 0 k
(C=0 M=35 Y=85 K=0)
Pc
0.05 0 0.9 0 k
(C=5 M=0 Y=90 K=0)
Pc
0.2 0 1 0 k
(C=20 M=0 Y=100 K=0)
Pc
0.5 0 1 0 k
(C=50 M=0 Y=100 K=0)
Pc
0.75 0 1 0 k
(C=75 M=0 Y=100 K=0)
Pc
0.85 0.1 1 0.1 k
(C=85 M=10 Y=100 K=10)
Pc
0.9 0.3 0.95 0.3 k
(C=90 M=30 Y=95 K=30)
Pc
0.75 0 0.75 0 k
(C=75 M=0 Y=75 K=0)
Pc
0.8 0.1 0.45 0 k
(C=80 M=10 Y=45 K=0)
Pc
0.7 0.15 0 0 k
(C=70 M=15 Y=0 K=0)
Pc
0.85 0.5 0 0 k
(C=85 M=50 Y=0 K=0)
Pc
1 0.95 0.05 0 k
(C=100 M=95 Y=5 K=0)
Pc
1 1 0.25 0.25 k
(C=100 M=100 Y=25 K=25)
Pc
0.75 1 0 0 k
(C=75 M=100 Y=0 K=0)
Pc
0.5 1 0 0 k
(C=50 M=100 Y=0 K=0)
Pc
0.35 1 0.35 0.1 k
(C=35 M=100 Y=35 K=10)
Pc
0.1 1 0.5 0 k
(C=10 M=100 Y=50 K=0)
Pc
0 0.95 0.2 0 k
(C=0 M=95 Y=20 K=0)
Pc
0.25 0.25 0.4 0 k
(C=25 M=25 Y=40 K=0)
Pc
0.4 0.45 0.5 0.05 k
(C=40 M=45 Y=50 K=5)
Pc
0.5 0.5 0.6 0.25 k
(C=50 M=50 Y=60 K=25)
Pc
0.55 0.6 0.65 0.4 k
(C=55 M=60 Y=65 K=40)
Pc
0.25 0.4 0.65 0 k
(C=25 M=40 Y=65 K=0)
Pc
0.3 0.5 0.75 0.1 k
(C=30 M=50 Y=75 K=10)
Pc
0.35 0.6 0.8 0.25 k
(C=35 M=60 Y=80 K=25)
Pc
0.4 0.65 0.9 0.35 k
(C=40 M=65 Y=90 K=35)
Pc
0.4 0.7 1 0.5 k
(C=40 M=70 Y=100 K=50)
Pc
0.5 0.7 0.8 0.7 k
(C=50 M=70 Y=80 K=70)
Pc
Bb
2 (Fade to Black) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Fade to Black)
Pc
Bb
0 0 0 0 Bh
2 (Super Soft Black Vignette) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Super Soft Black Vignette)
Pc
Bb
2 (Green, Yellow, Orange) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Green, Yellow, Orange)
Pc
Bb
0 0 0 0 Bh
2 (Purple Radial) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Purple Radial)
Pc
(Laguna) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Laguna)
Pc
0.054688 0.835938 0.992188 0.003906 k
(C=5 M=84 Y=99 K=0 1)
Pc
0 0 0 1 k
(C=0 M=0 Y=0 K=100)
Pc
0 0 0 0.899994 k
(C=0 M=0 Y=0 K=90)
Pc
0 0 0 0.799988 k
(C=0 M=0 Y=0 K=80)
Pc
0 0 0 0.699997 k
(C=0 M=0 Y=0 K=70)
Pc
0 0 0 0.599991 k
(C=0 M=0 Y=0 K=60)
Pc
0 0 0 0.5 k
(C=0 M=0 Y=0 K=50)
Pc
0 0 0 0.399994 k
(C=0 M=0 Y=0 K=40)
Pc
0 0 0 0.299988 k
(C=0 M=0 Y=0 K=30)
Pc
0 0 0 0.199997 k
(C=0 M=0 Y=0 K=20)
Pc
0 0 0 0.099991 k
(C=0 M=0 Y=0 K=10)
Pc
0 0 0 0.049988 k
(C=0 M=0 Y=0 K=5)
Pc
0 1 1 0 k
(C=0 M=100 Y=100 K=0)
Pc
0 0.75 1 0 k
(C=0 M=75 Y=100 K=0)
Pc
0 0.1 0.95 0 k
(C=0 M=10 Y=95 K=0)
Pc
0.85 0.1 1 0 k
(C=85 M=10 Y=100 K=0)
Pc
1 0.9 0 0 k
(C=100 M=90 Y=0 K=0)
Pc
0.6 0.9 0.000031 0.000031 k
(C=60 M=90 Y=0 K=0)
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(Layer 1) Ln
0 A
u
u
u
u
1 Ap
0 O
0.310948 0.246555 0.251835 0 k
0 J 0 j 1 w 10 M []0 d0 XR
588.0684 -376.8867 m
588.0684 -390.0381 577.4023 -400.7021 564.249 -400.7021 C
54.6343 -400.7021 L
41.481 -400.7021 30.8193 -390.0381 30.8193 -376.8867 C
30.8193 -60.1606 L
30.8193 -47.0073 41.481 -36.3457 54.6343 -36.3457 C
564.249 -36.3457 L
577.4023 -36.3457 588.0684 -47.0073 588.0684 -60.1606 C
588.0684 -376.8867 L
f
U
u
0 Ap
0.613397 0.529625 0.523186 0.2374 k
588.0684 -47.4585 m
588.0684 -34.3062 577.4023 -23.6436 564.249 -23.6436 C
54.6343 -23.6436 L
41.481 -23.6436 30.8193 -34.3062 30.8193 -47.4585 C
30.8193 -320.749 L
588.0684 -320.749 L
588.0684 -47.4585 L
f
U
u
0.088594 0.06421 0.069032 0 k
30.8193 -320.749 m
30.8193 -364.1807 L
30.8193 -377.3359 41.481 -388 54.6343 -388 C
564.249 -388 L
577.4023 -388 588.0684 -377.3359 588.0684 -364.1807 C
588.0684 -320.749 L
30.8193 -320.749 L
f
U
u
0.310948 0.246555 0.251835 0 k
400.5918 -443.4219 m
232.2998 -443.4219 L
228.8965 -443.4219 226.0166 -445.5762 224.8877 -448.584 C
408.0059 -448.584 L
406.8721 -445.5762 403.9941 -443.4219 400.5918 -443.4219 C
f
U
u
0.088594 0.06421 0.069032 0 k
224.3604 -464.0625 m
224.3604 -468.4463 227.916 -471.999 232.2998 -471.999 C
400.5918 -471.999 L
404.9775 -471.999 408.5322 -468.4463 408.5322 -464.0625 C
408.5322 -451.3604 L
408.5322 -450.3789 408.3271 -449.4541 408.0059 -448.584 C
224.8877 -448.584 L
224.5596 -449.4541 224.3604 -450.3789 224.3604 -451.3604 C
224.3604 -464.0625 L
f
U
u
0.310948 0.246555 0.251835 0 k
368.8447 -400.7021 m
366.6064 -415.1172 L
362.2617 -443.4219 L
339.7471 -443.4219 L
317.6289 -415.1172 L
266.2827 -415.1172 L
264.042 -400.7021 L
368.8447 -400.7021 L
f
U
u
1 Ap
318.2246 -354.377 m
318.2246 -359.2236 314.2939 -363.1543 309.4463 -363.1543 c
304.5977 -363.1543 300.667 -359.2236 300.667 -354.377 c
300.667 -349.5293 304.5977 -345.5967 309.4463 -345.5967 c
314.2939 -345.5967 318.2246 -349.5293 318.2246 -354.377 c
f
U
u
344.8887 -354.377 m
344.8887 -357.8604 342.0605 -360.6846 338.5762 -360.6846 c
335.0928 -360.6846 332.2686 -357.8604 332.2686 -354.377 c
332.2686 -350.8887 335.0928 -348.0645 338.5762 -348.0645 c
342.0605 -348.0645 344.8887 -350.8887 344.8887 -354.377 c
f
U
u
286.6255 -354.377 m
286.6255 -357.8604 283.8008 -360.6846 280.3174 -360.6846 c
276.8325 -360.6846 274.0068 -357.8604 274.0068 -354.377 c
274.0068 -350.8887 276.8325 -348.0645 280.3174 -348.0645 c
283.8008 -348.0645 286.6255 -350.8887 286.6255 -354.377 c
f
U
U
u
0.510124 0.582147 0 0 k
568.7715 -305.7021 m
50.1157 -305.7021 L
50.1157 -43.4385 L
568.7715 -43.4385 L
568.7715 -305.7021 L
f
U
U
u
0 Ap
0.088594 0.06421 0.069032 0 k
339.7471 -443.4219 m
270.626 -443.4219 L
266.2827 -415.1172 L
317.6289 -415.1172 L
339.7471 -443.4219 L
f
U
U
u
0.869505 0.782223 0.507897 0.597986 k
91.3662 -283.4268 m
91.3662 -285.9404 93.5088 -287.9795 96.1523 -287.9795 C
522.7354 -287.9795 L
525.3779 -287.9795 527.5205 -285.9404 527.5205 -283.4268 C
527.5205 -80.4414 L
91.3662 -80.4414 L
91.3662 -283.4268 L
f
u
0.088594 0.06421 0.069032 0 k
522.7354 -61.1611 m
96.1523 -61.1611 L
93.5088 -61.1611 91.3662 -63.3037 91.3662 -65.9463 C
91.3662 -80.4414 L
527.5205 -80.4414 L
527.5205 -65.9463 L
527.5205 -63.3037 525.3779 -61.1611 522.7354 -61.1611 C
f
u
1 Ap
0.044953 0.854856 0.566522 0.000671 k
107.6201 -70.6064 m
107.6201 -73.0107 105.6729 -74.9619 103.2646 -74.9619 c
100.8584 -74.9619 98.9102 -73.0107 98.9102 -70.6064 c
98.9102 -68.2002 100.8584 -66.25 103.2646 -66.25 c
105.6729 -66.25 107.6201 -68.2002 107.6201 -70.6064 c
f
U
u
0.071748 0.175753 0.92343 0 k
121.3115 -70.6064 m
121.3115 -73.0107 119.3613 -74.9619 116.9551 -74.9619 c
114.5508 -74.9619 112.5996 -73.0107 112.5996 -70.6064 c
112.5996 -68.2002 114.5508 -66.25 116.9551 -66.25 c
119.3613 -66.25 121.3115 -68.2002 121.3115 -70.6064 c
f
U
u
0.605371 0.021851 1 0 k
135.002 -70.6064 m
135.002 -73.0107 133.0518 -74.9619 130.6475 -74.9619 c
128.2412 -74.9619 126.29 -73.0107 126.29 -70.6064 c
126.29 -68.2002 128.2412 -66.25 130.6475 -66.25 c
133.0518 -66.25 135.002 -68.2002 135.002 -70.6064 c
f
U
U
U
u
u
*u
0 Ap
0 0 0 0 k
229.6299 -116.2515 m
229.6299 -150.4639 L
229.6299 -160.6924 233.5103 -165.895 240.3872 -165.895 c
247.4414 -165.895 251.3213 -160.957 251.3213 -150.4639 c
251.3213 -116.2515 L
264.7241 -116.2515 L
264.7241 -149.582 L
264.7241 -167.9229 255.4658 -176.6523 239.9463 -176.6523 c
224.9565 -176.6523 216.1396 -168.3638 216.1396 -149.4058 c
216.1396 -116.2515 L
229.6299 -116.2515 l
f
*U
*u
276.3667 -175.6821 m
276.3667 -116.2515 L
292.0625 -116.2515 L
304.4072 -138.0308 L
307.9336 -144.292 311.4619 -151.6987 314.1064 -158.4004 c
314.3711 -158.4004 L
313.4893 -150.5522 313.2246 -142.5283 313.2246 -133.6221 c
313.2246 -116.2515 L
325.5703 -116.2515 L
325.5703 -175.6821 L
311.4619 -175.6821 L
298.7637 -152.7568 L
295.2368 -146.4077 291.3564 -138.7363 288.4473 -131.7705 c
288.1826 -131.8589 L
288.5352 -139.7065 288.7119 -148.083 288.7119 -157.7822 c
288.7119 -175.6821 L
276.3667 -175.6821 l
f
*U
*u
350.7021 -116.2515 m
350.7021 -175.6821 L
337.21 -175.6821 L
337.21 -116.2515 L
350.7021 -116.2515 l
f
*U
*u
373.8057 -127.5386 m
357.8457 -127.5386 L
357.8457 -116.2515 L
403.5215 -116.2515 L
403.5215 -127.5386 L
387.2959 -127.5386 L
387.2959 -175.6821 L
373.8057 -175.6821 L
373.8057 -127.5386 l
f
*U
U
u
*u
221.2969 -204.0347 m
211.9038 -204.0347 L
211.9038 -197.3916 L
238.7861 -197.3916 L
238.7861 -204.0347 L
229.2373 -204.0347 L
229.2373 -232.3696 L
221.2969 -232.3696 L
221.2969 -204.0347 l
f
*U
*u
263.8003 -217.5791 m
250.9302 -217.5791 L
250.9302 -225.8828 L
265.3057 -225.8828 L
265.3057 -232.3696 L
242.9897 -232.3696 L
242.9897 -197.3916 L
264.5786 -197.3916 L
264.5786 -203.8789 L
250.9302 -203.8789 L
250.9302 -211.1445 L
263.8003 -211.1445 L
263.8003 -217.5791 l
f
*U
*u
270.9629 -224.2217 m
273.0898 -225.312 276.3594 -226.4019 279.7324 -226.4019 c
283.3652 -226.4019 285.2856 -224.8965 285.2856 -222.6133 c
285.2856 -220.4331 283.625 -219.188 279.4219 -217.6831 c
273.6089 -215.6592 269.8203 -212.4414 269.8203 -207.356 c
269.8203 -201.3872 274.8027 -196.8203 283.0537 -196.8203 c
286.998 -196.8203 289.9043 -197.6509 291.98 -198.585 c
290.2158 -204.9688 L
288.8145 -204.2939 286.3237 -203.3076 282.8989 -203.3076 c
279.4731 -203.3076 277.8125 -204.8643 277.8125 -206.6812 c
277.8125 -208.9121 279.7847 -209.8984 284.2993 -211.6113 c
290.4751 -213.8945 293.3818 -217.1118 293.3818 -222.042 c
293.3818 -227.9067 288.8662 -232.8892 279.2661 -232.8892 c
275.2695 -232.8892 271.3257 -231.8501 269.353 -230.7612 C
270.9629 -224.2217 l
f
*U
*u
305.4741 -204.0347 m
296.0806 -204.0347 L
296.0806 -197.3916 L
322.9639 -197.3916 L
322.9639 -204.0347 L
313.4131 -204.0347 L
313.4131 -232.3696 L
305.4741 -232.3696 L
305.4741 -204.0347 l
f
*U
*u
335.1074 -197.3916 m
335.1074 -232.3696 L
327.167 -232.3696 L
327.167 -197.3916 L
335.1074 -197.3916 l
f
*U
*u
341.9561 -232.3696 m
341.9561 -197.3916 L
351.1943 -197.3916 L
358.46 -210.21 L
360.5352 -213.8945 362.6113 -218.2544 364.168 -222.1978 c
364.3242 -222.1978 L
363.8047 -217.5791 363.6484 -212.8564 363.6484 -207.6152 c
363.6484 -197.3916 L
370.915 -197.3916 L
370.915 -232.3696 L
362.6113 -232.3696 L
355.1377 -218.8765 L
353.0635 -215.1401 350.7783 -210.6255 349.0645 -206.5254 c
348.9102 -206.5776 L
349.1172 -211.1958 349.2207 -216.1265 349.2207 -221.835 c
349.2207 -232.3696 L
341.9561 -232.3696 l
f
*U
*u
406.9824 -230.7612 m
404.543 -231.5908 399.9248 -232.7334 395.3047 -232.7334 c
388.9219 -232.7334 384.3037 -231.124 381.0859 -228.0103 c
377.8691 -225.0005 376.1035 -220.4331 376.1563 -215.2959 c
376.209 -203.6709 384.667 -197.0283 396.1357 -197.0283 c
400.6514 -197.0283 404.1289 -197.9102 405.8418 -198.7407 c
404.1797 -205.0723 L
402.2607 -204.2417 399.8721 -203.5674 396.0332 -203.5674 c
389.4414 -203.5674 384.46 -207.3037 384.46 -214.8809 c
384.46 -222.0942 388.9746 -226.3496 395.4609 -226.3496 c
397.2783 -226.3496 398.7314 -226.1421 399.3545 -225.8306 c
399.3545 -218.5137 L
393.957 -218.5137 L
393.957 -212.3379 L
406.9824 -212.3379 L
406.9824 -230.7612 l
f
*U
U
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
